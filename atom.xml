<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Arron.y&#39;s blog</title>
  <subtitle>志向和热爱是伟大行为的双翼，learning ...</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://blog.helloarron.com/"/>
  <updated>2017-08-24T05:23:08.000Z</updated>
  <id>http://blog.helloarron.com/</id>
  
  <author>
    <name>Arron.y</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>微信小程序、ThinkPHP5 集成微信支付过程</title>
    <link href="http://blog.helloarron.com/2017/08/18/php/thinkphp5-wxpay/"/>
    <id>http://blog.helloarron.com/2017/08/18/php/thinkphp5-wxpay/</id>
    <published>2017-08-18T07:16:20.000Z</published>
    <updated>2017-08-24T05:23:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>在微信小程序项目中，需要接入微信支付，用户在小程序中点击【付款】，唤起微信支付的弹窗，输入密码进行支付，虽然支付流程很简单，但真正接入的时候难免会遇到一些问题。</p>
<h2 id="项目环境">项目环境</h2><p>客户端：微信小程序<br>服务器：<code>CentOS 7</code>、<code>PHP 7.0</code>、<code>Nginx</code>、<code>MySQL 5.6</code><br>后台框架：<code>ThinkPHP 5</code></p>
<h2 id="准备工作">准备工作</h2><ol>
<li>申请微信小程序账号，并完成微信支付的事情工作。这些工作按照微信的要求一步步进行即可。</li>
<li>配置项目环境，需要注意的是接口的请求地址需要是<code>https</code>，可以到阿里云申请一年免费的<code>SSL</code>证书，按照<code>Nginx</code>的配置完成。</li>
<li>在微信小程序后台管理上完成微信支付的申请之后，就可以使用微信邮件给你的账号密码登陆商户平台<code>https://pay.weixin.qq.com</code>。</li>
<li>在商户平台的【账户中心】-&gt;【API安全】中下载证书，以及【设置API密钥】，这两部分在代码配置中需要。</li>
<li>下载<code>SDK</code>。<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=11_1" target="_blank" rel="external">地址</a>。将<code>lib</code>目录下的文件拷贝到项目的<code>extend</code>下的<code>wxpay</code>目录中。</li>
<li>配置<code>extend/wxpay/WxPay.Config.php</code>，将其中的参数和上面下载的证书路径配置好。</li>
</ol>
<p>微信支付参考文档：<a href="https://pay.weixin.qq.com/wiki/doc/api/jsapi.php?chapter=9_1" target="_blank" rel="external">开发文档</a></p>
<p>微信小程序文档：<a href="https://mp.weixin.qq.com/debug/wxadoc/dev/api/open.html" target="_blank" rel="external">开发文档</a></p>
<h2 id="具体开发">具体开发</h2><h4 id="创建一个订单">创建一个订单</h4><p>这一步很简单，就是常规的根据用户购买信息创建订单，将数据保存到数据库。<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 创建订单</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">create</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$order</span> = <span class="keyword">new</span> OrderModel();</span><br><span class="line">    <span class="variable">$order</span>[<span class="string">'title'</span>] = <span class="variable">$title</span>.<span class="string">'-'</span>.date(<span class="string">'Ymd'</span>);</span><br><span class="line">    <span class="variable">$order</span>[<span class="string">'out_trade_no'</span>] = \WxPayConfig::MCHID.time();</span><br><span class="line">    <span class="variable">$order</span>[<span class="string">'amount'</span>] = <span class="variable">$amount</span>;</span><br><span class="line">    <span class="variable">$order</span>[<span class="string">'status'</span>] = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$order</span>-&gt;save()) &#123;</span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'创建成功'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">1026</span>, <span class="string">'msg'</span> =&gt; <span class="string">'创建失败'</span>]);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="唤起支付窗口">唤起支付窗口</h4><p>在小程序中发起微信支付请求很简单，需要注意的是，在调用<code>wx.requestPayment({})</code>前需要获取签名数据，如以下的代码所示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line">app.requestData(<span class="string">'Wxpay/sign'</span>, &#123; id: id, openid: openid &#125;, <span class="string">'GET'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">  <span class="keyword">if</span> (res.error) &#123;</span><br><span class="line">    app.showToast(res.msg, <span class="string">'success'</span>, <span class="number">2000</span>)</span><br><span class="line">  &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">    wx.requestPayment(&#123;</span><br><span class="line">      timeStamp: res.result.timeStamp,</span><br><span class="line">      nonceStr: res.result.nonceStr,</span><br><span class="line">      package: res.result.package,</span><br><span class="line">      signType: res.result.signType,</span><br><span class="line">      paySign: res.result.paySign,</span><br><span class="line">      <span class="string">'success'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; &#125;,</span><br><span class="line">      <span class="string">'fail'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; &#125;,</span><br><span class="line">      <span class="string">'complete'</span>: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123; &#125;</span><br><span class="line">    &#125;)</span><br><span class="line">  &#125;</span><br><span class="line">&#125;, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">  app.showToast(res.errMsg, <span class="string">'success'</span>, <span class="number">2000</span>)</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<h4 id="获取支付签名参数">获取支付签名参数</h4><p>在上一步的请求之前，需要获取签名参数，需要注意的是获取签名参数是需要当前微信用户的<code>openid</code>的(<code>id</code>是订单的<code>id</code>)，先忽略<code>openid</code>如何获取，看签名方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">think</span>\<span class="title">Loader</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">api</span>\<span class="title">controller</span>\<span class="title">Base</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">app</span>\<span class="title">common</span>\<span class="title">model</span>\<span class="title">Order</span> <span class="title">as</span> <span class="title">OrderModel</span>;</span><br><span class="line"></span><br><span class="line">Loader::import(<span class="string">'wxpay/WxPay'</span>, EXTEND_PATH, <span class="string">'.Api.php'</span>);</span><br><span class="line"></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Wxpay</span> <span class="keyword">extends</span> <span class="title">Base</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$data</span> = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="variable">$curl_timeout</span> = <span class="number">3000</span>;</span><br><span class="line"></span><br><span class="line">    <span class="comment">/**</span><br><span class="line">     * 获取支付参数</span><br><span class="line">     *</span><br><span class="line">     * <span class="doctag">@return</span> void</span><br><span class="line">     */</span></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">sign</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="variable">$id</span> = input(<span class="string">'?get.id'</span>) ? trim(input(<span class="string">'get.id'</span>)) : <span class="number">0</span>;</span><br><span class="line">        <span class="variable">$openid</span> = input(<span class="string">'?get.openid'</span>) ? trim(input(<span class="string">'get.openid'</span>)) : <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$openid</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">4001</span>, <span class="string">'msg'</span> =&gt; <span class="string">'用户参数错误'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="variable">$order</span> = OrderModel::get(<span class="variable">$id</span>);</span><br><span class="line">        <span class="keyword">if</span> (!<span class="variable">$order</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">4002</span>, <span class="string">'msg'</span> =&gt; <span class="string">'订单不存在'</span>]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 统一下单</span></span><br><span class="line">        <span class="variable">$input</span> = <span class="keyword">new</span> \WxPayUnifiedOrder();</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetBody(<span class="variable">$order</span>-&gt;title);</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetAttach(<span class="variable">$order</span>-&gt;id);</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetOut_trade_no(<span class="variable">$order</span>-&gt;out_trade_no);</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetTotal_fee(floatval(<span class="variable">$order</span>-&gt;amount) * <span class="number">100</span>);  <span class="comment">// 单位为分</span></span><br><span class="line">        <span class="variable">$input</span>-&gt;SetTime_start(date(<span class="string">"YmdHis"</span>));</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetTime_expire(date(<span class="string">"YmdHis"</span>, time() + <span class="number">600</span>));</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetGoods_tag(<span class="string">"wx-app"</span>);</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetNotify_url(config(<span class="string">'wxpay.pay_notify_url'</span>));</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetTrade_type(<span class="string">"JSAPI"</span>);</span><br><span class="line">        <span class="variable">$input</span>-&gt;SetOpenid(<span class="variable">$order</span>-&gt;lawcase-&gt;openid);</span><br><span class="line">        <span class="variable">$order</span> = \WxPayApi::unifiedOrder(<span class="variable">$input</span>);</span><br><span class="line"></span><br><span class="line">        <span class="variable">$jsApiParameters</span> = <span class="variable">$this</span>-&gt;GetJsApiParameters(<span class="variable">$order</span>);</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$jsApiParameters</span>) &#123;</span><br><span class="line">            <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'支付参数'</span>, <span class="string">'result'</span> =&gt; json_decode(<span class="variable">$jsApiParameters</span>)]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">4001</span>, <span class="string">'msg'</span> =&gt; <span class="string">'参数错误'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 获取jsapi支付的参数</span><br><span class="line"> * <span class="doctag">@param</span> array $UnifiedOrderResult 统一支付接口返回的数据</span><br><span class="line"> * <span class="doctag">@throws</span> WxPayException</span><br><span class="line"> * </span><br><span class="line"> * <span class="doctag">@return</span> json数据，可直接填入js函数作为参数</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">GetJsApiParameters</span><span class="params">(<span class="variable">$UnifiedOrderResult</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (!array_key_exists(<span class="string">"appid"</span>, <span class="variable">$UnifiedOrderResult</span>)</span><br><span class="line">        || !array_key_exists(<span class="string">"prepay_id"</span>, <span class="variable">$UnifiedOrderResult</span>)</span><br><span class="line">        || <span class="variable">$UnifiedOrderResult</span>[<span class="string">'prepay_id'</span>] == <span class="string">""</span>) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$jsapi</span> = <span class="keyword">new</span> \WxPayJsApiPay();</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetAppid(<span class="variable">$UnifiedOrderResult</span>[<span class="string">"appid"</span>]);</span><br><span class="line">    <span class="variable">$timeStamp</span> = time();</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetTimeStamp(<span class="string">"$timeStamp"</span>);</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetNonceStr(\WxPayApi::getNonceStr());</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetPackage(<span class="string">"prepay_id="</span> . <span class="variable">$UnifiedOrderResult</span>[<span class="string">'prepay_id'</span>]);</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetSignType(<span class="string">"MD5"</span>);</span><br><span class="line">    <span class="variable">$jsapi</span>-&gt;SetPaySign(<span class="variable">$jsapi</span>-&gt;MakeSign());</span><br><span class="line">    <span class="variable">$parameters</span> = json_encode(<span class="variable">$jsapi</span>-&gt;GetValues());</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$parameters</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>以上就是完整的获取支付签名参数的代码，需要注意的<code>notify_url</code>，这个微信支付成功的回调地址，保证浏览器可以正常访问即可。</p>
<h4 id="支付回调">支付回调</h4><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 微信支付回调</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">callback</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$xml</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">    <span class="variable">$data</span> = \WxPayResults::Init(<span class="variable">$xml</span>);</span><br><span class="line">    <span class="keyword">if</span> (!array_key_exists(<span class="string">"transaction_id"</span>, <span class="variable">$data</span>)) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'参数错误'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//查询订单，判断订单真实性</span></span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$data</span>[<span class="string">"out_trade_no"</span>] || !<span class="variable">$this</span>-&gt;Queryorder(<span class="variable">$data</span>[<span class="string">"transaction_id"</span>])) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'订单真实性存疑'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$order</span> = OrderModel::where([<span class="string">'out_trade_no'</span> =&gt; <span class="variable">$data</span>[<span class="string">"out_trade_no"</span>]])-&gt;find();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$order</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'订单不存在'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$order</span>-&gt;status = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$order</span>-&gt;save()) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'SUCCESS'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'OK'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'回调失败'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 查询订单</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> [type] $transaction_id</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">Queryorder</span><span class="params">(<span class="variable">$transaction_id</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$input</span> = <span class="keyword">new</span> \WxPayOrderQuery();</span><br><span class="line">    <span class="variable">$input</span>-&gt;SetTransaction_id(<span class="variable">$transaction_id</span>);</span><br><span class="line">    <span class="variable">$result</span> = \WxPayApi::orderQuery(<span class="variable">$input</span>);</span><br><span class="line">    <span class="keyword">if</span>(array_key_exists(<span class="string">"return_code"</span>, <span class="variable">$result</span>)</span><br><span class="line">        &amp;&amp; array_key_exists(<span class="string">"result_code"</span>, <span class="variable">$result</span>)</span><br><span class="line">        &amp;&amp; <span class="variable">$result</span>[<span class="string">"return_code"</span>] == <span class="string">"SUCCESS"</span></span><br><span class="line">        &amp;&amp; <span class="variable">$result</span>[<span class="string">"result_code"</span>] == <span class="string">"SUCCESS"</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * array转xml</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> [type] $value</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">toXML</span><span class="params">(<span class="variable">$values</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">if</span>(!is_array(<span class="variable">$values</span>) || count(<span class="variable">$values</span>) &lt;= <span class="number">0</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"&lt;xml&gt;&lt;/xml&gt;"</span>;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$xml</span> = <span class="string">"&lt;xml&gt;"</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$values</span> <span class="keyword">as</span> <span class="variable">$key</span> =&gt; <span class="variable">$val</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (is_numeric(<span class="variable">$val</span>)) &#123;</span><br><span class="line">            <span class="variable">$xml</span>.=<span class="string">"&lt;"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>.<span class="variable">$val</span>.<span class="string">"&lt;/"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>;</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            <span class="variable">$xml</span>.=<span class="string">"&lt;"</span>.<span class="variable">$key</span>.<span class="string">"&gt;&lt;![CDATA["</span>.<span class="variable">$val</span>.<span class="string">"]]&gt;&lt;/"</span>.<span class="variable">$key</span>.<span class="string">"&gt;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$xml</span>.=<span class="string">"&lt;/xml&gt;"</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$xml</span>; </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>这里主要就是在回调方法中将订单的状态变换一下。</p>
<h4 id="获取用户_openid">获取用户 openid</h4><p>回到上面提到的签名方法，在那个方法中需要提供用户的<code>openid</code>，获取的流程在小程序的开发文档中有，其次服务器端的实现在下载的<code>sdk</code>的<code>sample</code>中也能够找到，如以下所示：<br>小程序端：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//调用登录接口</span></span><br><span class="line">wx.login(&#123;</span><br><span class="line">  success: <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (res.code) &#123;</span><br><span class="line">      <span class="keyword">if</span> (!wx.getStorageSync(<span class="string">'openid'</span>)) &#123;</span><br><span class="line">        that.requestData(<span class="string">'Wxpay/openid'</span>, &#123;</span><br><span class="line">          code: res.code</span><br><span class="line">        &#125;, <span class="string">'GET'</span>, <span class="function"><span class="keyword">function</span> (<span class="params">res</span>) </span>&#123;</span><br><span class="line">          <span class="keyword">if</span> (res.error) &#123;</span><br><span class="line">            that.showToast(res.msg, <span class="string">'success'</span>, <span class="number">2000</span>)</span><br><span class="line">          &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            wx.setStorageSync(<span class="string">'openid'</span>, res.result)</span><br><span class="line">          &#125;</span><br><span class="line">        &#125;)</span><br><span class="line">      &#125;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">      that.showToast(<span class="string">"用户登录失败"</span>, <span class="string">'success'</span>, <span class="number">1000</span>)</span><br><span class="line">    &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p>服务器端：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 获取用户的 openid</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@return</span> \think\Response</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">openid</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$code</span> = input(<span class="string">'?get.code'</span>) ? trim(input(<span class="string">'get.code'</span>)) : <span class="string">''</span>;</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$code</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">2001</span>, <span class="string">'msg'</span> =&gt; <span class="string">'获取用户登录状态失败'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="variable">$openid</span> = <span class="variable">$this</span>-&gt;getOpenidFromMp(<span class="variable">$code</span>);</span><br><span class="line">    <span class="keyword">return</span> json_encode([<span class="string">'error'</span> =&gt; <span class="number">0</span>, <span class="string">'msg'</span> =&gt; <span class="string">'获取用户登录状态成功'</span>, <span class="string">'result'</span> =&gt; <span class="variable">$openid</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 通过code从工作平台获取openid机器access_token</span><br><span class="line"> * <span class="doctag">@param</span> string $code 微信跳转回来带上的code</span><br><span class="line"> * </span><br><span class="line"> * <span class="doctag">@return</span> openid</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">getOpenidFromMp</span><span class="params">(<span class="variable">$code</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$url</span> = <span class="variable">$this</span>-&gt;__CreateOauthUrlForOpenid(<span class="variable">$code</span>);</span><br><span class="line">    <span class="comment">//初始化curl</span></span><br><span class="line">    <span class="variable">$ch</span> = curl_init();</span><br><span class="line">    <span class="comment">//设置超时</span></span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_TIMEOUT, <span class="variable">$this</span>-&gt;curl_timeout);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_URL, <span class="variable">$url</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYPEER,<span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_SSL_VERIFYHOST,<span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_HEADER, <span class="keyword">FALSE</span>);</span><br><span class="line">    curl_setopt(<span class="variable">$ch</span>, CURLOPT_RETURNTRANSFER, <span class="keyword">TRUE</span>);</span><br><span class="line">    <span class="keyword">if</span>(\WxPayConfig::CURL_PROXY_HOST != <span class="string">"0.0.0.0"</span> &amp;&amp; \WxPayConfig::CURL_PROXY_PORT != <span class="number">0</span>)&#123;</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXY, \WxPayConfig::CURL_PROXY_HOST);</span><br><span class="line">        curl_setopt(<span class="variable">$ch</span>,CURLOPT_PROXYPORT, \WxPayConfig::CURL_PROXY_PORT);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//运行curl，结果以jason形式返回</span></span><br><span class="line">    <span class="variable">$res</span> = curl_exec(<span class="variable">$ch</span>);</span><br><span class="line">    curl_close(<span class="variable">$ch</span>);</span><br><span class="line">    <span class="comment">//取出openid</span></span><br><span class="line">    <span class="variable">$data</span> = json_decode(<span class="variable">$res</span>, <span class="keyword">true</span>);</span><br><span class="line">    <span class="variable">$this</span>-&gt;data = <span class="variable">$data</span>;</span><br><span class="line">    <span class="variable">$openid</span> = <span class="variable">$data</span>[<span class="string">'openid'</span>];</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$openid</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 构造获取open和access_toke的url地址</span><br><span class="line"> * <span class="doctag">@param</span> string $code，微信跳转带回的code</span><br><span class="line"> * </span><br><span class="line"> * <span class="doctag">@return</span> 请求的url</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">__CreateOauthUrlForOpenid</span><span class="params">(<span class="variable">$code</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$urlObj</span>[<span class="string">"appid"</span>] = \WxPayConfig::APPID;</span><br><span class="line">    <span class="variable">$urlObj</span>[<span class="string">"secret"</span>] = \WxPayConfig::APPSECRET;</span><br><span class="line">    <span class="variable">$urlObj</span>[<span class="string">"code"</span>] = <span class="variable">$code</span>;</span><br><span class="line">    <span class="variable">$urlObj</span>[<span class="string">"grant_type"</span>] = <span class="string">"authorization_code"</span>;</span><br><span class="line">    <span class="variable">$bizString</span> = <span class="variable">$this</span>-&gt;ToUrlParams(<span class="variable">$urlObj</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="string">"https://api.weixin.qq.com/sns/oauth2/access_token?"</span>.<span class="variable">$bizString</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * </span><br><span class="line"> * 拼接签名字符串</span><br><span class="line"> * <span class="doctag">@param</span> array $urlObj</span><br><span class="line"> * </span><br><span class="line"> * <span class="doctag">@return</span> 返回已经拼接好的字符串</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="function"><span class="keyword">function</span> <span class="title">ToUrlParams</span><span class="params">(<span class="variable">$urlObj</span>)</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$buff</span> = <span class="string">""</span>;</span><br><span class="line">    <span class="keyword">foreach</span> (<span class="variable">$urlObj</span> <span class="keyword">as</span> <span class="variable">$k</span> =&gt; <span class="variable">$v</span>) &#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="variable">$k</span> != <span class="string">"sign"</span>) &#123;</span><br><span class="line">            <span class="variable">$buff</span> .= <span class="variable">$k</span> . <span class="string">"="</span> . <span class="variable">$v</span> . <span class="string">"&amp;"</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="variable">$buff</span> = trim(<span class="variable">$buff</span>, <span class="string">"&amp;"</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$buff</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<h4 id="退款回调">退款回调</h4><p>以上步骤之后微信支付就已经完成了，如果用户付款了后悔，找到平台客户，然后客服在商户平台进行退款，这时候微信会有退款结果通知，在商户平台的【交易中心】-&gt;【退款配置】中设置通知<code>url</code>。</p>
<p>然后在服务器端完成通知方法：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span><br><span class="line"> * 退款通知回调</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">refund</span><span class="params">()</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="variable">$xml</span> = file_get_contents(<span class="string">"php://input"</span>);</span><br><span class="line">    <span class="variable">$obj</span> = <span class="variable">$this</span>-&gt;fromXml(<span class="variable">$xml</span>);</span><br><span class="line"></span><br><span class="line">    <span class="keyword">if</span>(<span class="variable">$obj</span>[<span class="string">'return_code'</span>] != <span class="string">'SUCCESS'</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'回调失败'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 退款结果对重要的数据进行了加密，商户需要用商户证书与商户秘钥进行解密后才能获得结果通知的内容</span></span><br><span class="line">    <span class="variable">$string</span> = <span class="variable">$obj</span>[<span class="string">'req_info'</span>];</span><br><span class="line">    <span class="variable">$data</span> = base64_decode(<span class="variable">$string</span>);</span><br><span class="line">    <span class="variable">$md5_key</span> = md5(config(<span class="string">'wxpay.key'</span>));</span><br><span class="line">    <span class="comment">// AES解密</span></span><br><span class="line">    <span class="variable">$iv</span> = mcrypt_create_iv(mcrypt_get_iv_size(MCRYPT_RIJNDAEL_128, MCRYPT_MODE_ECB), MCRYPT_RAND);</span><br><span class="line">    <span class="variable">$res</span> = mcrypt_decrypt(MCRYPT_RIJNDAEL_128, <span class="variable">$md5_key</span>, <span class="variable">$data</span>, MCRYPT_MODE_ECB, <span class="variable">$iv</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">// 解密的字符串末尾多了 ^G 或 ^K 等杂乱字符 ,需去掉</span></span><br><span class="line">    <span class="variable">$res_arr</span> = explode(<span class="string">'&lt;/root&gt;'</span>, <span class="variable">$res</span>);</span><br><span class="line">    <span class="variable">$req_info</span> = <span class="variable">$this</span>-&gt;fromXml(<span class="variable">$res_arr</span>[<span class="number">0</span>].<span class="string">'&lt;/root&gt;'</span>);</span><br><span class="line">    </span><br><span class="line">    <span class="comment">//查询订单，判断订单真实性</span></span><br><span class="line">    <span class="variable">$order</span> = OrderModel::where([<span class="string">'out_trade_no'</span> =&gt; <span class="variable">$req_info</span>[<span class="string">"out_trade_no"</span>]])-&gt;find();</span><br><span class="line">    <span class="keyword">if</span> (!<span class="variable">$order</span>) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'FAIL'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'订单不存在'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="variable">$order</span>-&gt;status = <span class="number">2</span>;</span><br><span class="line">    <span class="keyword">if</span> (<span class="variable">$order</span>-&gt;save()) &#123;</span><br><span class="line">        <span class="comment">// <span class="doctag">TODO:</span>:存储退款信息</span></span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'SUCCESS'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'OK'</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$this</span>-&gt;toXML([<span class="string">'return_code'</span> =&gt; <span class="string">'SUCCESS'</span>, <span class="string">'return_msg'</span> =&gt; <span class="string">'OK'</span>]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line"> * 将xml转为array</span><br><span class="line"> *</span><br><span class="line"> * <span class="doctag">@param</span> [type] $xml</span><br><span class="line"> * <span class="doctag">@return</span> void</span><br><span class="line"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">fromXml</span><span class="params">(<span class="variable">$xml</span>)</span></span><br><span class="line"></span>&#123;   </span><br><span class="line">    <span class="keyword">if</span>(!<span class="variable">$xml</span>)&#123;</span><br><span class="line">        <span class="keyword">return</span> [];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//将XML转为array</span></span><br><span class="line">    <span class="comment">//禁止引用外部xml实体</span></span><br><span class="line">    libxml_disable_entity_loader(<span class="keyword">true</span>);</span><br><span class="line">    <span class="variable">$values</span> = json_decode(json_encode(simplexml_load_string(<span class="variable">$xml</span>, <span class="string">'SimpleXMLElement'</span>, LIBXML_NOCDATA)), <span class="keyword">true</span>);      </span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$values</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在通知中主要是对订单的状态变换了一下，其次解析返回的加密数据，可进一步存储退款信息。</p>
<h2 id="About_me">About me</h2><p>主页：<a href="http://helloarron.com/" target="_blank" rel="external">http://helloarron.com/</a></p>
<p>博客：<a href="http://blog.helloarron.com/">http://blog.helloarron.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在微信小程序项目中，需要接入微信支付，用户在小程序中点击【付款】，唤起微信支付的弹窗，输入密码进行支付，虽然支付流程很简单，但真正接入的时候难免会遇到一些问题。&lt;/p&gt;
&lt;h2 id=&quot;项目环境&quot;&gt;项目环境&lt;/h2&gt;&lt;p&gt;客户端：微信小程序&lt;br&gt;服务器：&lt;code&gt;Cen
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
      <category term="thinkphp5" scheme="http://blog.helloarron.com/tags/thinkphp5/"/>
    
      <category term="微信小程序" scheme="http://blog.helloarron.com/tags/%E5%BE%AE%E4%BF%A1%E5%B0%8F%E7%A8%8B%E5%BA%8F/"/>
    
      <category term="微信支付" scheme="http://blog.helloarron.com/tags/%E5%BE%AE%E4%BF%A1%E6%94%AF%E4%BB%98/"/>
    
  </entry>
  
  <entry>
    <title>Linux 后台运行</title>
    <link href="http://blog.helloarron.com/2016/10/14/linux/linux-running-back/"/>
    <id>http://blog.helloarron.com/2016/10/14/linux/linux-running-back/</id>
    <published>2016-10-14T10:23:13.000Z</published>
    <updated>2016-10-16T06:21:33.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>Linux</code>中经常遇到需要后台执行的程序，比如<code>nodejs</code>等，想要在<code>Linux</code>中后台运行某一条命令，有以下两种模式：</p>
<p>================================<br>在当前<code>terminal</code>会话中：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">node app.js <span class="number">1</span>&gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure></p>
<p>前面是需要后台运行的命令，<code>0</code>表示<code>标准输入</code>，<code>1</code>表示<code>标准输出</code>，<code>2</code>表示<code>标准错误</code>，上面没有标准输入，将标准输出输出到<code>/dev/null</code>中，标准错误与标准输出一致，最后的<code>&amp;</code>表示<code>后台运行</code>。</p>
<p>以上命令执行之后就会后台运行，这时候会出现该后台的<code>id</code>号，如<code>1[3126]</code>，那个<code>1</code>就是<code>id</code>。所以也可以使用以下命令进入该后台：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">fg</span><span class="sqbracket"> [id]</span></span><br></pre></td></tr></table></figure></p>
<p>如果进入之后想退出让其继续后台运行，执行：<br><figure class="highlight apache"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">ctrl</span> + z</span><br><span class="line"><span class="keyword">bg</span><span class="sqbracket"> [id]</span></span><br></pre></td></tr></table></figure></p>
<p>如果想关闭该后台，直接在进入后台之后执行：<br><figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">ctrl</span> + c</span><br></pre></td></tr></table></figure></p>
<p>以上这种方法在一旦关闭<code>terminal</code>窗口的时候，就会全部退出，因为以上的后台命令的父进程是该<code>terminal</code>窗口。</p>
<p>===================================<br>永久进入后台：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">nohup node app.js <span class="number">1</span>&gt;/dev/null <span class="number">2</span>&gt;&amp;<span class="number">1</span> &amp;</span><br></pre></td></tr></table></figure></p>
<p>该方法与以上的方式差不多一致，只不过该父进程为1，关闭的时候需要回去该<code>进程id</code>，然后<code>kill</code>掉：<br><figure class="highlight perl"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ps -ef | <span class="keyword">grep</span> node</span><br><span class="line"><span class="keyword">kill</span> id</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;code&gt;Linux&lt;/code&gt;中经常遇到需要后台执行的程序，比如&lt;code&gt;nodejs&lt;/code&gt;等，想要在&lt;code&gt;Linux&lt;/code&gt;中后台运行某一条命令，有以下两种模式：&lt;/p&gt;
&lt;p&gt;================================
    
    </summary>
    
      <category term="Linux" scheme="http://blog.helloarron.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.helloarron.com/tags/Linux/"/>
    
  </entry>
  
  <entry>
    <title>SlideUnlock-Plugin 滑动解锁插件</title>
    <link href="http://blog.helloarron.com/2016/03/17/javascript/slideunlock-plugin/"/>
    <id>http://blog.helloarron.com/2016/03/17/javascript/slideunlock-plugin/</id>
    <published>2016-03-17T03:17:13.000Z</published>
    <updated>2016-04-11T14:12:05.000Z</updated>
    
    <content type="html"><![CDATA[<p>为实现一个滑动解锁然后完成点赞功能的页面的时候，在网上搜了很多关于滑动解锁的插件，搜到的都是简单实现滑动功能，或未将代码抽离方便引用，或没有成功回调，或无法自行配置。于是决定自己写一个这样的滑动解锁的插件，弥补以上的不足。因为项目使用了<code>jQuery</code>，所以有两个版本，一个是基于<code>jQuery</code>写的，一个是采用原生<code>JavaScript</code>的方式。</p>
<p>项目地址: <a href="https://github.com/ArronYR/jquery-slideunlock-plugin" target="_blank" rel="external">Github</a></p>
<h2 id="效果">效果</h2><p><img src="http://7xrgqs.com1.z0.glb.clouddn.com/jquery-slideunlock-plugin.png" alt="图片"></p>
<h2 id="HTML">HTML</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"slideunlock-wrapper"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"hidden"</span> <span class="attribute">value</span>=<span class="value">""</span> <span class="attribute">class</span>=<span class="value">"slideunlock-lockable"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"slideunlock-slider"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"slideunlock-label"</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"slideunlock-lable-tip"</span>&gt;</span>Slide to unlock!<span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure>
<h2 id="CSS">CSS</h2><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.slideunlock-wrapper</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">360px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">50px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#ECF0F1</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">margin</span>:<span class="value"> <span class="number">0</span> auto</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.slideunlock-slider</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"><span class="number">20px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#FDEB9C</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">overflow</span>:<span class="value"> hidden</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">text-align</span>:<span class="value"> center</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.slideunlock-slider</span><span class="class">.success</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="hexcolor">#E5EE9F</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.slideunlock-label</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">40px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> absolute</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">left</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">top</span>:<span class="value"> <span class="number">0</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">height</span>:<span class="value"> <span class="number">100%</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">background</span>:<span class="value"> <span class="hexcolor">#E67E22</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">999</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">2px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">cursor</span>:<span class="value"> pointer</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.slideunlock-label-tip</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">z-index</span>:<span class="value"> <span class="number">9</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="at_rule">@<span class="keyword">media</span> screen and (max-width: <span class="number">640px</span>) </span>&#123;</span><br><span class="line">    <span class="class">.slideunlock-wrapper</span><span class="rules">&#123;</span><br><span class="line">        <span class="rule"><span class="attribute">width</span>:<span class="value"> <span class="number">64%</span></span></span>;</span><br><span class="line">    &#125;</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h2 id="JavaScript">JavaScript</h2><p>不依赖jQuery的方式. See the <a href="https://github.com/ArronYR/slideunlock-plugin/blob/master/index.plainjs.html" target="_blank" rel="external">demo</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"js/slideunlock.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    <span class="built_in">window</span>.onload = <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> slider = <span class="keyword">new</span> SliderUnlock(<span class="string">".slideunlock-slider"</span>, &#123;&#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="string">'success'</span>);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            <span class="built_in">document</span>.querySelector(<span class="string">".warn"</span>).innerText = <span class="string">"index:"</span> + slider.index + <span class="string">"， max:"</span> + slider.max + <span class="string">",lableIndex:"</span> + slider.lableIndex + <span class="string">",value:"</span> + <span class="built_in">document</span>.querySelector(<span class="string">".slideunlock-lockable"</span>).value + <span class="string">" date:"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getUTCDate();</span><br><span class="line">        &#125;);</span><br><span class="line">        slider.init();</span><br><span class="line"></span><br><span class="line">        <span class="built_in">document</span>.querySelector(<span class="string">"#reset-btn"</span>).addEventListener(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            slider.reset();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>依赖jQuery. See the <a href="https://github.com/ArronYR/slideunlock-plugin/blob/master/index.html" target="_blank" rel="external">demo</a><br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span> src=<span class="string">"js/jquery.min.js"</span>&gt;<span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"js/jquery.slideunlock.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    $(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">var</span> slider = <span class="keyword">new</span> SliderUnlock(<span class="string">".slideunlock-slider"</span>, &#123;</span><br><span class="line">            labelTip: <span class="string">"滑动解锁"</span>,</span><br><span class="line">            successLabelTip: <span class="string">"解锁成功"</span>,</span><br><span class="line">            duration: <span class="number">200</span>   <span class="comment">// 动画效果执行时间，默认200ms</span></span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            alert(<span class="string">'success'</span>);</span><br><span class="line">        &#125;, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            $(<span class="string">".warn"</span>).text(<span class="string">"index:"</span> + slider.index + <span class="string">"， max:"</span> + slider.max + <span class="string">",lableIndex:"</span> + slider.lableIndex + <span class="string">",value:"</span> + $(<span class="string">".slideunlock-lockable"</span>).val() + <span class="string">" date:"</span> + <span class="keyword">new</span> <span class="built_in">Date</span>().getUTCDate());</span><br><span class="line">        &#125;);</span><br><span class="line">        slider.init();</span><br><span class="line"></span><br><span class="line">        $(<span class="string">"#reset-btn"</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span>(<span class="params"></span>)</span>&#123;</span><br><span class="line">            slider.reset();</span><br><span class="line">        &#125;);</span><br><span class="line">    &#125;)</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<figure class="highlight coffeescript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">var slider = <span class="keyword">new</span> SliderUnlock(element, options, success, always);</span><br><span class="line">slider.init();</span><br><span class="line"></span><br><span class="line"><span class="regexp">//</span> element <span class="keyword">is</span> required <span class="keyword">and</span> right. id <span class="keyword">or</span> <span class="class"><span class="keyword">class</span> <span class="title">or</span> <span class="title">any</span> <span class="title">identifying</span> <span class="title">which</span> <span class="title">can</span> <span class="title">be</span> <span class="title">loaded</span> <span class="title">by</span> <span class="title">jquery</span>.</span></span><br><span class="line"><span class="regexp">//</span> <span class="keyword">if</span> you dont want to give options, please give a <span class="literal">null</span> object, like <span class="keyword">this</span> -- &#123;&#125;</span><br></pre></td></tr></table></figure>
<p><em>If you need to support mobile，Please add jQuery mobile plugin：</em><br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"js/jquery.mobile.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="Demo">Demo</h2><iframe height="382" scrolling="no" src="//codepen.io/ArronYR/embed/bpeoEp/?height=382&theme-id=0&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="http://codepen.io/ArronYR/pen/bpeoEp/" target="_blank" rel="external">jquery-slide-unlock</a> by Arron.y (<a href="http://codepen.io/ArronYR" target="_blank" rel="external">@ArronYR</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe><br>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为实现一个滑动解锁然后完成点赞功能的页面的时候，在网上搜了很多关于滑动解锁的插件，搜到的都是简单实现滑动功能，或未将代码抽离方便引用，或没有成功回调，或无法自行配置。于是决定自己写一个这样的滑动解锁的插件，弥补以上的不足。因为项目使用了&lt;code&gt;jQuery&lt;/code&gt;
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
      <category term="jQuery" scheme="http://blog.helloarron.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>CSS 属性 border-image 的使用</title>
    <link href="http://blog.helloarron.com/2016/03/03/css/border-image/"/>
    <id>http://blog.helloarron.com/2016/03/03/css/border-image/</id>
    <published>2016-03-03T06:14:31.000Z</published>
    <updated>2016-03-21T10:46:43.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p><code>border-image</code> 是 CSS3 的一个属性，将图片规定为包围元素的边框，就像<code>border</code>定义边框那样，<code>border</code>只能简单的设置一些纯色或几种简单的线型（如<code>solid</code>,<code>dotted</code>,<code>double</code>,<code>dashed</code>等）,而<code>border-image</code>使用图片来丰富包围的元素,给边框设置不同的图片效果。因为它是css3中的属性，所以在浏览器兼容方面我就不多说了，可以去 <a href="http://caniuse.com/" target="_blank" rel="external">http://caniuse.com/</a>输入对应属性查看具体兼容情况。<br>该属性可用来给需要背景元素设置可拉伸的背景效果，例如对话框等，在内容变化的情况下背景自动跟着拉伸。</p>
<h2 id="语法">语法</h2><figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">border-image ： none | &lt;image&gt; [ &lt;number&gt; | &lt;percentage&gt;]&#123;1,4&#125; [ / &lt;border-width&gt;&#123;1,4&#125; ]? [ stretch | repeat | round ]&#123;0,2&#125;</span><br></pre></td></tr></table></figure>
<p><code>border-image</code> 属性是一个简写属性，用于设置以下属性：</p>
<ul>
<li>border-image-source  —— 用在边框的图片的路径</li>
<li>border-image-slice   —— 图片边框向内偏移。</li>
<li>border-image-width   —— 图片边框的宽度。</li>
<li>border-image-outset  —— 边框图像区域超出边框的量。</li>
<li>border-image-repeat  —— 图像边框是否应平铺(repeated)、铺满(rounded)或拉伸(stretched)。</li>
</ul>
<p>简单的来介绍一下border-image的参数:</p>
<ol>
<li><code>none</code>: 是<code>border-image</code>的默认值，如果取值为<code>none</code>时，表示边框无背景图片；</li>
<li><code>&lt;image&gt;</code>：设置<code>border-image</code>的背景图片，这个跟<code>background-image</code>一样，使用绝对或相对的<code>url</code>地址，来指定背景图片；</li>
<li><code>&lt;number&gt;</code>：<code>number</code>是一个数值，用来设置边框的宽度，其单位是<code>px</code>，其实就像<code>border-width</code>一样取值，可以使用<code>1~4</code>个值，其具体表示四个方位的值，大家可以参考<code>border-width</code>的设置方式；</li>
<li><code>&lt;percntage&gt;</code>：<code>percntage</code>也是用来设置边框的宽度，跟<code>number</code>不同之处是，其使用的是百分比值来设置边框宽度；</li>
<li><code>stretch</code>,<code>repeat</code>,<code>round</code>: 用来设置边框背景图片的铺放方式，类似于<code>background-position</code>，其中<code>stretch</code>是拉伸，<code>repeat</code>是重复，<code>round</code>是平铺，<code>stretch</code>为默认值。</li>
</ol>
<h4 id="border-image-source">border-image-source</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-source</span>:<span class="value"><span class="function">url</span>(image url)</span></span>;<span class="comment">/*image url可以是相对地址也可以是绝对地址*/</span></span><br></pre></td></tr></table></figure>
<p><code>border-image-source</code>跟<code>background-image</code>属性相似，也是通过<code>url()</code>调用背景图片，图片的路径可以是相对地址也可以是绝对地址，当然你不想使用背景图片你也可以把值设置为<code>none</code>，即：<code>border-image:none；</code>其默认值就是<code>none</code>。</p>
<h4 id="border-image-slice">border-image-slice</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-slice</span>:<span class="value"> [ &lt;number&gt; | &lt;percentage&gt;]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;&amp;&amp; fill?</span></span></span><br></pre></td></tr></table></figure>
<p><code>border-image-slice</code>是用来分解引入进来的背景图片，这个参数相对来说比较复杂和特别。四个参数类似于<code>margin</code>,<code>padding</code>那样遵从【top,right,bottom,left】的规则。</p>
<p>如：一个81px的正方形位图,9个菱形图案,每个菱形图案为27*27px。假如给定这个属性值:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice.png" alt="图片"><br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-slice</span>:<span class="value"><span class="number">27</span> <span class="number">27</span> <span class="number">27</span> <span class="number">27</span></span></span>;</span><br></pre></td></tr></table></figure></p>
<p>它代表的意思是距离顶部内偏移区域27px处横切一刀:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice-top.png" alt="图片"></p>
<p>接着距离右侧内偏移区域27px竖切一刀:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice-right.png" alt="图片"></p>
<p>接着距离底部内偏移区域27px竖切一刀:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice-bottom.png" alt="图片"></p>
<p>接着距离左侧内偏移区域27px竖切一刀:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice-left.png" alt="图片"></p>
<p>那么给定图像切片<code>border-image-slice:27 27 27 27;</code>完整动态图如下:<br><img src="http://7xrgqs.com1.z0.glb.clouddn.com/border-image-slice-gif.gif" alt="图片"></p>
<p>*值得注意的是，按照上面的四个值切除之后，图片中间部分默认情况下是为空的。如果需要中间部分按照图片原本中间部分填充的话，需要在第4个值后面再加上<code>fill</code>值。<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-slice</span>:<span class="value"><span class="number">27</span> <span class="number">27</span> <span class="number">27</span> <span class="number">27</span> fill</span></span>;</span><br></pre></td></tr></table></figure></p>
<iframe height="268" scrolling="no" src="//codepen.io/ArronYR/embed/QNbrMq/?height=268&theme-id=0&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="http://codepen.io/ArronYR/pen/QNbrMq/" target="_blank" rel="external">border-image-demo-1</a> by Arron.y (<a href="http://codepen.io/ArronYR" target="_blank" rel="external">@ArronYR</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe>

<iframe height="268" scrolling="no" src="//codepen.io/ArronYR/embed/YqXLay/?height=268&theme-id=0&default-tab=result" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="http://codepen.io/ArronYR/pen/YqXLay/" target="_blank" rel="external">border-image-demo-2</a> by Arron.y (<a href="http://codepen.io/ArronYR" target="_blank" rel="external">@ArronYR</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe>

<h4 id="border-image-width">border-image-width</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-width</span>:<span class="value"> [ &lt;length&gt; | &lt;percentage&gt; | &lt;number&gt; | auto ]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;</span></span></span><br></pre></td></tr></table></figure>
<p><code>border-image-width</code>就是<code>border-width</code>，用来设置边框的宽度。</p>
<h4 id="border-image-repeat">border-image-repeat</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-repeat</span>:<span class="value"> [ stretch | repeat | round ]&#123;<span class="number">1</span>,<span class="number">2</span>&#125;</span></span></span><br></pre></td></tr></table></figure>
<p><code>border-image-repeat</code>是用来指定<code>border-image</code>的排列方式，这个属性设置参数和其他的不一样，<code>border-image-repeat</code>不遵循【top,right,bottom,left】的方位原则，他只接受两个（或一个）参数值，第一个表示水平方向，第二个表示垂直方向；当取值为一个值时，表示水平和垂直方向的排列方式相同。同时其默认值是<code>stretch</code>，如果你省略不取值时，那么水平和垂直方向都是以<code>stretc</code>排列。</p>
<h4 id="border-image-outset">border-image-outset</h4><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="rule"><span class="attribute">border-image-outset</span>:<span class="value"> [ &lt;length&gt; | &lt;number&gt; | none ]&#123;<span class="number">1</span>,<span class="number">4</span>&#125;</span></span></span><br></pre></td></tr></table></figure>
<p><code>border-image-width</code>用来设置边框图片向外延伸。遵循【top,right,bottom,left】的方位原则。</p>
<h2 id="其他">其他</h2><p>关于更多的用法例子可自行搜索。如该文章有误，请在评论里提出，谢谢！</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;&lt;code&gt;border-image&lt;/code&gt; 是 CSS3 的一个属性，将图片规定为包围元素的边框，就像&lt;code&gt;border&lt;/code&gt;定义边框那样，&lt;code&gt;border&lt;/code&gt;只能简单的设置一些纯色或几种简单的线
    
    </summary>
    
      <category term="css" scheme="http://blog.helloarron.com/categories/css/"/>
    
    
      <category term="css" scheme="http://blog.helloarron.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>CSS-Animation-Spin CSS加载动画</title>
    <link href="http://blog.helloarron.com/2016/03/02/css/css-animation-spin/"/>
    <id>http://blog.helloarron.com/2016/03/02/css/css-animation-spin/</id>
    <published>2016-03-02T04:43:31.000Z</published>
    <updated>2016-05-13T06:53:00.000Z</updated>
    
    <content type="html"><![CDATA[<p>为了更好的用户体验和给自己的网站“装B”一下，在页面主体内容加载完成之前可以来一个加载动画，带页面加载完成之后将其去除或隐藏。</p>
<h2 id="DEMO_1">DEMO 1</h2><iframe height="268" scrolling="no" src="//codepen.io/ArronYR/embed/XdbrBK/?height=268&theme-id=0&default-tab=css" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="http://codepen.io/ArronYR/pen/XdbrBK/" target="_blank" rel="external">CSS-Animation-Spin</a> by Arron.y (<a href="http://codepen.io/ArronYR" target="_blank" rel="external">@ArronYR</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe>

<h2 id="DEMO_2">DEMO 2</h2><p>使用<code>JavaScript</code>控制加载后的效果：</p>
<iframe height="301" scrolling="no" src="//codepen.io/ArronYR/embed/BKEzya/?height=301&theme-id=0&default-tab=css,result&embed-version=2" frameborder="no" allowtransparency="true" allowfullscreen="true" style="width: 100%;">See the Pen <a href="http://codepen.io/ArronYR/pen/BKEzya/" target="_blank" rel="external">CSS-Animation-Spin-JavaScript</a> by Arron.y (<a href="http://codepen.io/ArronYR" target="_blank" rel="external">@ArronYR</a>) on <a href="http://codepen.io" target="_blank" rel="external">CodePen</a>.<br></iframe>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了更好的用户体验和给自己的网站“装B”一下，在页面主体内容加载完成之前可以来一个加载动画，带页面加载完成之后将其去除或隐藏。&lt;/p&gt;
&lt;h2 id=&quot;DEMO_1&quot;&gt;DEMO 1&lt;/h2&gt;&lt;iframe height=&quot;268&quot; scrolling=&quot;no&quot; src=&quot;/
    
    </summary>
    
      <category term="css" scheme="http://blog.helloarron.com/categories/css/"/>
    
    
      <category term="Animation" scheme="http://blog.helloarron.com/tags/Animation/"/>
    
      <category term="css" scheme="http://blog.helloarron.com/tags/css/"/>
    
  </entry>
  
  <entry>
    <title>Chrome DevTools Theme 开发者装B利器</title>
    <link href="http://blog.helloarron.com/2016/03/01/webapp/chrome-devtools-theme/"/>
    <id>http://blog.helloarron.com/2016/03/01/webapp/chrome-devtools-theme/</id>
    <published>2016-03-01T02:48:31.000Z</published>
    <updated>2016-03-01T10:27:28.000Z</updated>
    
    <content type="html"><![CDATA[<p>作为Web开发者，Chrome是必备的常用工具。比起那些牛掰的IDE，如何让我们在调试网页的时候也显得“高大上”呢？这里给大家介绍几款Chrome的插件，注意是开发者工具的主题插件。目的嘛，那还用问么，当然是装B嘛 o(︶︿︶)o</p>
<h2 id="推荐DevTools主题">推荐DevTools主题</h2><ul>
<li>ZeroDarkMatrix Theme: <a href="https://chrome.google.com/webstore/detail/devtools-theme-zero-dark/bomhdjeadceaggdgfoefmpeafkjhegbo" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Material Design Theme: <a href="https://chrome.google.com/webstore/detail/material-design-theme-for/bhhaihcbledolbbigofbpegdbomoimfa/related?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Dracula Theme for DevTools: <a href="https://chrome.google.com/webstore/detail/dracula-theme-for-devtool/gedipeckgflanbhlcglokjjacilfidda" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Brogrammer Dev Tools Theme: <a href="https://chrome.google.com/webstore/detail/brogrammer-dev-tools-them/alolpfkmcjdkieibielpffiehpobafae?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>greybeard devtools theme: <a href="https://chrome.google.com/webstore/detail/greybeard-devtools-theme/cckelcjlkjehoepkfcpgdpjfagodhimd?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Frozen Theme: <a href="https://chrome.google.com/webstore/detail/frozen-a-chrome-devtools/gbaddinigglahkekcppiongkmgmpahml?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Spacegray: <a href="https://chrome.google.com/webstore/detail/devtools-theme-spacegray/fhncmkmacplfbillpaockoaccojlbbfg?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Sunburst: <a href="https://chrome.google.com/webstore/detail/devtools-theme-sunburst/fkigcimlehjhpnejpiohmibcidmobcpo?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>NightLion Dark: <a href="https://chrome.google.com/webstore/detail/devtools-theme-nightlion/nmiejanhomgcihofiaipfpgenalpjnmp?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Readable DevTools Theme: <a href="https://chrome.google.com/webstore/detail/readable-devtools-theme/idacnkgaihpflclbgnkhamfofklappaa?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Tomorrow Night Bright: <a href="https://chrome.google.com/webstore/detail/devtools-theme-tomorrow-n/idpgmdicmomnckcoblacfggohfogaplj?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Dark DevTools Theme: <a href="https://chrome.google.com/webstore/detail/dark-devtools-theme/hnjdcpldpmpbeiccfmheokflmoilgloc?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Material Dark DevTools Theme: <a href="https://chrome.google.com/webstore/detail/material-dark-devtools-th/bcblfajekgfjcehefnjokalkodjcekmh?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Rainbow DevTools Theme: <a href="https://chrome.google.com/webstore/detail/rainbow-devtools-theme/bafncadmgpabpojoohpejlmdbligjjlb?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>IR_Black &amp; Base16 DevTools Theme: <a href="https://chrome.google.com/webstore/detail/irblack-base16-devtools-t/ocgjhemmdfeacaddbpdanlkopoefobif?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Twilight Spacegray: <a href="https://chrome.google.com/webstore/detail/devtools-theme-twilight-s/bpbplipacldfdfgapibcmjfpabnamoia?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
<li>Gruvbox Dark: <a href="https://chrome.google.com/webstore/detail/devtools-theme-gruvbox-da/njcgdakjdifgccdgnoiphpnihcfopcmj?hl=zh-CN" target="_blank" rel="external">Chrome应用商店链接</a></li>
</ul>
<h2 id="安装">安装</h2><p>安装步骤比起一般Chrome插件稍微麻烦一点，不过按照如下步骤也很快。</p>
<p>步骤一：点击上面你喜欢的主题后面的链接，在Chrome应用商店打开，然后点击【+添加至Chrome】，等待Chrome下载并安装到浏览器即可。</p>
<p>步骤二：在浏览器导航栏输入<code>chrome://flags/</code>，打开的页面中选项比较多，我们需要设置【启用开发者工具实验性功能】这个选项(Enable Developer Tools experiments)，建议使用<code>Ctrl+F</code>搜索。启用该设置，之后在该页面底部会弹出【立即重新启动】，点击重启即可。</p>
<p>步骤三：浏览器重启之后，随便选择一个网页打开【开发者根工具】，按【F1】或者点击开发者工具关闭按钮左边的菜单图标，选择【Settings】，在【Settings】面板左边选择【Experiments】，开启【Allow custom UI themes】选项即可。</p>
<p>完成以上三个步骤即可更改Chrome的DevTools主题。</p>
<h2 id="预览">预览</h2><h4 id="Material_Design_Theme">Material Design Theme</h4><p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/Material%20Design%20Theme.png" alt="Material Design Theme"></p>
<hr>
<h4 id="ZeroDarkMatrix_Theme">ZeroDarkMatrix Theme</h4><p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/ZeroDarkMatrix%20Theme.png" alt="ZeroDarkMatrix Theme"></p>
<h2 id="About_me">About me</h2><p>主页：<a href="http://helloarron.com/" target="_blank" rel="external">http://helloarron.com/</a><br>博客：<a href="http://blog.helloarron.com/">http://blog.helloarron.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;作为Web开发者，Chrome是必备的常用工具。比起那些牛掰的IDE，如何让我们在调试网页的时候也显得“高大上”呢？这里给大家介绍几款Chrome的插件，注意是开发者工具的主题插件。目的嘛，那还用问么，当然是装B嘛 o(︶︿︶)o&lt;/p&gt;
&lt;h2 id=&quot;推荐DevTool
    
    </summary>
    
      <category term="WebApp" scheme="http://blog.helloarron.com/categories/WebApp/"/>
    
    
      <category term="Chrome" scheme="http://blog.helloarron.com/tags/Chrome/"/>
    
      <category term="DevTools" scheme="http://blog.helloarron.com/tags/DevTools/"/>
    
      <category term="Theme" scheme="http://blog.helloarron.com/tags/Theme/"/>
    
  </entry>
  
  <entry>
    <title>Emlog-CodeStyle-Plugin 博客代码高亮样式插件</title>
    <link href="http://blog.helloarron.com/2016/01/28/php/emlog-codestyle-plugin/"/>
    <id>http://blog.helloarron.com/2016/01/28/php/emlog-codestyle-plugin/</id>
    <published>2016-01-28T07:16:20.000Z</published>
    <updated>2016-03-01T02:49:14.000Z</updated>
    
    <content type="html"><![CDATA[<p>继上次写完Emlog的主题<a href="https://github.com/ArronYR/emlog-material-theme" target="_blank" rel="external">MaterialTheme</a>之后，写了这个代码高亮样式插件。适用于技术博客。<a href="https://github.com/ArronYR/emlog-codestyle-plugin" target="_blank" rel="external">Github</a> 、<a href="http://bbs.emlog.net/thread-51709-1-1.html" target="_blank" rel="external">论坛</a></p>
<h2 id="Preview">Preview</h2><p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/Prettify%20Themes%20Gallery.png" alt="图片"></p>
<h2 id="Features">Features</h2><ol>
<li>采用prettify插件，提供5中代码高亮样式，兼容官方后台编辑器提供的所有编程语言。</li>
<li>支持在后台设置各类选项。</li>
</ol>
<h2 id="Usage">Usage</h2><p>方式一：<a href="https://github.com/ArronYR/emlog-codestyle-plugin" target="_blank" rel="external">Github</a>，点击右方【Download ZIP】现在文件，将其移入<code>emlog</code>的<code>content/plugins/</code>目录下，进入网站后台，点击【插件】选项，点击小圆点开启<code>代码高亮样式插件</code>即可。</p>
<p>方式二：在网站后台的【应用中心】【插件】下载（确保<code>content/templates/</code>有写入权限）。</p>
<p>方式三：在网站后台的【插件】-&gt;【安装插件】中上传【方式一】下载的zip包即可。</p>
<h2 id="Setting">Setting</h2><p>在【插件】选项中开启该插件之后，会在后台左侧边栏添加【CodeStyle】选项进入设置页面（也可在【插件】页面点击<code>代码高亮样式插件</code>文字或边上的设置小图标进入设置页面）。</p>
<p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/codestyle-plugin-setting.png" alt="图片"></p>
<p>选择相应的选项即可。</p>
<h2 id="About_me">About me</h2><p>主页：<a href="http://helloarron.com/" target="_blank" rel="external">http://helloarron.com/</a></p>
<p>博客：<a href="http://blog.helloarron.com/">http://blog.helloarron.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;继上次写完Emlog的主题&lt;a href=&quot;https://github.com/ArronYR/emlog-material-theme&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;MaterialTheme&lt;/a&gt;之后，写了这个代码高亮样式插件。适用
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
    
      <category term="Emlog" scheme="http://blog.helloarron.com/tags/Emlog/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
      <category term="Plugin" scheme="http://blog.helloarron.com/tags/Plugin/"/>
    
  </entry>
  
  <entry>
    <title>Emlog-Material-Theme 博客免费主题</title>
    <link href="http://blog.helloarron.com/2016/01/19/php/emlog-material-theme/"/>
    <id>http://blog.helloarron.com/2016/01/19/php/emlog-material-theme/</id>
    <published>2016-01-19T08:46:20.000Z</published>
    <updated>2016-03-01T02:49:03.000Z</updated>
    
    <content type="html"><![CDATA[<p><a href="http://www.emlog.net/" target="_blank" rel="external">emlog</a>是一个基于php快速搭建个人博客的框架，官方的默认主题样式“丑陋”，代码凌乱，不易于阅读修改，于是自己写了一个主题<br><a href="https://github.com/ArronYR/emlog-material-theme" target="_blank" rel="external">Emlog-Material-Theme</a>。<br>emlog论坛查看地址：<a href="http://bbs.emlog.net/thread-51663-1-1.html" target="_blank" rel="external">http://bbs.emlog.net/thread-51663-1-1.html</a></p>
<h2 id="Preview">Preview</h2><p>点击<a href="http://oblog.helloarron.com/" target="_blank" rel="external">此处</a>预览。</p>
<p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/preview.jpg" alt="图片"></p>
<h2 id="Features">Features</h2><ol>
<li>响应式</li>
<li>支持官方的所有的侧边栏组件：<br> <code>个人资料</code>、<code>日历</code>、<code>最新微语</code>、<code>标签</code>、<code>分类</code>、<code>存档</code>、<code>最新评论</code>、<code>最新文章</code>、<code>热门文章</code>、<code>随机文章</code>、<code>链接</code>、<code>搜索</code>以及第三方插件。（可根据后台设置自定义排序）</li>
<li>重新组织模板文件，重写<code>module.php</code>和所有主题组件，结构清晰，代码直观便于修改。</li>
</ol>
<h2 id="Usage">Usage</h2><p>方式一：<a href="https://github.com/ArronYR/emlog-material-theme" target="_blank" rel="external">Github</a>，点击右方【Download ZIP】现在文件，将其移入<code>emlog</code>的<code>content/templates/</code>目录下，进入网站后台，点击【模板】选项，选择<code>MaterialTheme</code>即可。</p>
<p>方式二：在网站后台的【应用中心】下载（确保<code>content/templates/</code>有写入权限）。</p>
<h2 id="Code_Themes">Code Themes</h2><p>配合该主题有<code>5</code>种代码样式：</p>
<p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/Prettify%20Themes%20Gallery.png" alt="图片"></p>
<p>通过修改主题目录下的<code>header.php</code>引入不同的样式即可：</p>
<figure class="highlight"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;link href="&lt;?php echo TEMPLATE_URL;?&gt;css/prettify-default-theme.css" rel="stylesheet"&gt;</span><br><span class="line">&lt;link href="&lt;?php echo TEMPLATE_URL;?&gt;css/prettify-desert-theme.css" rel="stylesheet"&gt;</span><br><span class="line">&lt;link href="&lt;?php echo TEMPLATE_URL;?&gt;css/prettify-sunburst-theme.css" rel="stylesheet"&gt;</span><br><span class="line">&lt;link href="&lt;?php echo TEMPLATE_URL;?&gt;css/prettify-obsidian-theme.css" rel="stylesheet"&gt;</span><br><span class="line">&lt;link href="&lt;?php echo TEMPLATE_URL;?&gt;css/prettify-doxy-theme.css" rel="stylesheet"&gt;</span><br></pre></td></tr></table></figure>
<h2 id="更新Banner">更新Banner</h2><p>因为只默认模板可以自定义banner，其它模板没这功能。所以如果需要自定义请在【模板】设置中先上传该banner图片，然后切换回该主题即可。</p>
<p><img src="http://7rfkwd.com1.z0.glb.clouddn.com/emlog-banner.png" alt="banner"></p>
<h2 id="About_me">About me</h2><p>主页：<a href="http://helloarron.com/" target="_blank" rel="external">http://helloarron.com/</a><br>博客：<a href="http://blog.helloarron.com/">http://blog.helloarron.com/</a></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://www.emlog.net/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;emlog&lt;/a&gt;是一个基于php快速搭建个人博客的框架，官方的默认主题样式“丑陋”，代码凌乱，不易于阅读修改，于是自己写了一个主题&lt;br&gt;&lt;a h
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
    
      <category term="Emlog" scheme="http://blog.helloarron.com/tags/Emlog/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
      <category term="Theme" scheme="http://blog.helloarron.com/tags/Theme/"/>
    
  </entry>
  
  <entry>
    <title>解决本地图片预览fakepath的问题</title>
    <link href="http://blog.helloarron.com/2016/01/13/javascript/javascript-file-fakepath/"/>
    <id>http://blog.helloarron.com/2016/01/13/javascript/javascript-file-fakepath/</id>
    <published>2016-01-13T05:21:13.000Z</published>
    <updated>2016-01-13T06:33:11.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="情景">情景</h2><p>在网站开发中，通常会遇到图片预览的问题，就是在上传图片时，选择图片之后想要在边上显示图片（更多的是还会有一些裁剪、缩放、拖拽等，但这里只是简单的图片预览）。用代码来说就是下面这样的：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"en"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"UTF-8"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span>图片预览<span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"upload-file"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">form</span> <span class="attribute">class</span>=<span class="value">"form"</span> <span class="attribute">enctype</span>=<span class="value">"multipart/form-data"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"file"</span> <span class="attribute">name</span>=<span class="value">"image"</span> <span class="attribute">id</span>=<span class="value">"image-input"</span> <span class="attribute">accept</span>=<span class="value">"image/*"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">input</span> <span class="attribute">type</span>=<span class="value">"submit"</span> <span class="attribute">value</span>=<span class="value">"上传"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">form</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"image-preview"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="title">img</span> <span class="attribute">src</span>=<span class="value">""</span> <span class="attribute">width</span>=<span class="value">"240px"</span> <span class="attribute">id</span>=<span class="value">"image"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="具体实现">具体实现</h2><p>上面的代码完成之后就是使用<code>js</code>将选择的文件地址赋给<code>img</code>的<code>src</code>属性，完成图片的显示：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> fileObj = <span class="built_in">document</span>.getElementById(<span class="string">'file'</span>),</span><br><span class="line">    imgObj = <span class="built_in">document</span>.getElementById(<span class="string">'image'</span>);</span><br><span class="line"></span><br><span class="line">fileObj.onchange = <span class="function"><span class="keyword">function</span> (<span class="params">e</span>) </span>&#123;</span><br><span class="line">    imgObj.src = fileObj.value;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>运行以上的代码在<code>IE6</code>浏览器中，从资源管理器中选择一张名为<code>2230.jpeg</code>的照片，你会发现照片显示完全是ok的，但是放到现在的主流浏览器上，图片并不会显示，查看图片的链接会发现是这样的<code>C:\fakepath\2230.jpeg</code>,这个<code>fakepath</code>是什么鬼啊~~,而且我是mac电脑哪有C盘啊…</p>
<h3 id="fakepath是什么？">fakepath是什么？</h3><p>这是浏览器处于安全性考虑的，比如文件路径会暴露你的用户名或者其他内容，而通过fakepath直接代替了其中的路径名，保护隐私和安全。至于<code>IE6</code>为什么可以，这个就不用说了吧…<br>解决办法：<code>工具</code> -&gt; <code>Internet选项</code> -&gt; <code>安全</code> -&gt; <code>自定义级别</code> -&gt; <code>找到“其他”中的“将本地文件上载至服务器时包含本地目录路径”</code>，选中<code>“启用”</code>即可。<br>但是这是需要用户去操作的啊，现在需要的是代码去解决~.~</p>
<h3 id="兼容性">兼容性</h3><p>从上面的例子中就已知<code>IE6</code>直接就可以那样用，所以这里就出来了兼容性的考虑了。<br>首先，让我们测试一下不同浏览器的 window.navigator.userAgent 的输出结果：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">ua = <span class="built_in">window</span>.navigator.userAgent;</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'user agent:&lt;br /&gt;'</span> + ua);</span><br></pre></td></tr></table></figure></p>
<h4 id="Google_Chrome_的显示结果:">Google Chrome 的显示结果:</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user agent:</span><br><span class="line">Mozilla/<span class="number">5.0</span> (Windows NT <span class="number">6.1</span>) AppleWebKit/<span class="number">534.24</span> (KHTML, like Gecko) Chrome/<span class="number">11.0</span><span class="number">.696</span><span class="number">.60</span> Safari/<span class="number">534.24</span></span><br></pre></td></tr></table></figure>
<p>Cheomr的浏览器内核是Webkit，因此其中最重要的是WebKit关键字，但Google Chrome为了显示其兼容性，也在描述字符串中包含了Mozilla等字样。其他浏览器也有类似的情况。</p>
<h4 id="Apple_Safari_的显示结果:">Apple Safari 的显示结果:</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user agent:</span><br><span class="line">Mozilla/<span class="number">5.0</span> (Windows; U; Windows NT <span class="number">6.1</span>; zh-CN) AppleWebKit/<span class="number">533.21</span><span class="number">.1</span> (KHTML, like Gecko) Version/<span class="number">5.0</span><span class="number">.5</span> Safari/<span class="number">533.21</span><span class="number">.1</span></span><br></pre></td></tr></table></figure>
<h4 id="Microsoft_IE_8-0_的显示结果:">Microsoft IE 8.0 的显示结果:</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user agent:</span><br><span class="line">Mozilla/<span class="number">4.0</span> (compatible; MSIE <span class="number">8.0</span>; Windows NT <span class="number">6.1</span>; Trident/<span class="number">4.0</span>; SLCC2; .NET CLR <span class="number">2.0</span><span class="number">.50727</span>; .NET CLR <span class="number">3.5</span><span class="number">.30729</span>; .NET CLR <span class="number">3.0</span><span class="number">.30729</span>; Media Center PC <span class="number">6.0</span>; .NET4<span class="number">.0</span>C; .NET4<span class="number">.0</span>E; Tablet PC <span class="number">2.0</span>)</span><br></pre></td></tr></table></figure>
<h4 id="Mozilla_FireFox的显示结果:">Mozilla FireFox的显示结果:</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user agent:</span><br><span class="line">Mozilla/<span class="number">5.0</span> (Windows; U; Windows NT <span class="number">6.1</span>; zh-CN; rv:<span class="number">1.9</span><span class="number">.2</span><span class="number">.3</span>) Gecko/<span class="number">20100401</span> Firefox/<span class="number">3.6</span><span class="number">.3</span></span><br></pre></td></tr></table></figure>
<h4 id="Opera的显示结果:">Opera的显示结果:</h4><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">user agent:</span><br><span class="line">Opera/<span class="number">9.80</span> (Windows NT <span class="number">6.1</span>; U; Edition IBIS; zh-cn) Presto/<span class="number">2.8</span><span class="number">.131</span> Version/<span class="number">11.10</span></span><br></pre></td></tr></table></figure>
<h4 id="检测浏览器内核及其版本号">检测浏览器内核及其版本号</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line">$ = <span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">function</span> <span class="title">uaMatch</span>(<span class="params">ua</span>) </span>&#123;</span><br><span class="line">        ua = ua.toLowerCase();</span><br><span class="line">        <span class="keyword">var</span> match = rwebkit.exec(ua)</span><br><span class="line">                    || ropera.exec(ua)</span><br><span class="line">                    || rmsie.exec(ua)</span><br><span class="line">                    || ua.indexOf(<span class="string">"compatible"</span>) &lt; <span class="number">0</span> &amp;&amp; rmozilla.exec(ua)</span><br><span class="line">                    || [];</span><br><span class="line">        <span class="keyword">return</span> &#123;</span><br><span class="line">            browser : match[<span class="number">1</span>] || <span class="string">""</span>,</span><br><span class="line">            version : match[<span class="number">2</span>] || <span class="string">"0"</span></span><br><span class="line">        &#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">var</span> rwebkit = <span class="regexp">/(webkit)\/([\w.]+)/</span>,</span><br><span class="line">        ropera = <span class="regexp">/(opera)(?:.*version)?[ \/]([\w.]+)/</span>,</span><br><span class="line">        rmsie = <span class="regexp">/(msie) ([\w.]+)/</span>,</span><br><span class="line">        rmozilla = <span class="regexp">/(mozilla)(?:.*? rv:([\w.]+))?/</span>,</span><br><span class="line">        browser = &#123;&#125;,</span><br><span class="line">        ua = <span class="built_in">window</span>.navigator.userAgent,</span><br><span class="line">        browserMatch = uaMatch(ua);</span><br><span class="line">    <span class="keyword">if</span> (browserMatch.browser) &#123;</span><br><span class="line">        browser[browserMatch.browser] = <span class="literal">true</span>;</span><br><span class="line">        browser.version = browserMatch.version;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> &#123; browser: browser &#125;</span><br><span class="line">&#125;();</span><br><span class="line"></span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'$.browser.webkit: '</span> + $.browser.webkit + <span class="string">'&lt;br /&gt;'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'$.browser.opera: '</span> + $.browser.opera + <span class="string">'&lt;br /&gt;'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'$.browser.msie: '</span> + $.browser.msie + <span class="string">'&lt;br /&gt;'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'$.browser.mozilla: '</span> + $.browser.mozilla + <span class="string">'&lt;br /&gt;'</span>);</span><br><span class="line"><span class="built_in">document</span>.write(<span class="string">'$.browser.version: '</span> + $.browser.version + <span class="string">'&lt;br /&gt;'</span>);</span><br></pre></td></tr></table></figure>
<h3 id="获取文件显示">获取文件显示</h3><p>解决了兼容性，接下来就是拿到<code>input</code>选择的文件，将其显示到<code>img</code>标签上。</p>
<h4 id="IE6:">IE6:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//imageObj: image object</span></span><br><span class="line"><span class="comment">//fileObj: file inputbox object</span></span><br><span class="line">imageObj.src = fileObj.value;</span><br></pre></td></tr></table></figure>
<h3 id="IE7-8:">IE7-8:</h3><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> src = <span class="string">''</span>;</span><br><span class="line">file.select();</span><br><span class="line"><span class="built_in">window</span>.parent.document.body.focus();</span><br><span class="line"><span class="keyword">try</span> &#123;</span><br><span class="line">    src = <span class="built_in">document</span>.selection.createRange().text;</span><br><span class="line">&#125; <span class="keyword">finally</span> &#123;</span><br><span class="line">    <span class="built_in">document</span>.selection.empty();</span><br><span class="line">&#125;</span><br><span class="line">src = src.replace(<span class="regexp">/[)'"%]/g</span>, <span class="function"><span class="keyword">function</span>(<span class="params">s</span>)</span>&#123; <span class="keyword">return</span> <span class="built_in">escape</span>(<span class="built_in">escape</span>(s)); &#125;);</span><br><span class="line">img.src = file.value;</span><br></pre></td></tr></table></figure>
<h4 id="Firefox_6以下:">Firefox 6以下:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">img.src = file.files[<span class="number">0</span>].getAsDataURL();</span><br></pre></td></tr></table></figure>
<h4 id="Firefox_3-6_(1-9-2)+，Chrome_7+，IE10+，Opera_11-1+，Safari:">Firefox 3.6 (1.9.2)+，Chrome 7+，IE10+，Opera 11.1+，Safari:</h4><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//imageObj: image object</span></span><br><span class="line"><span class="comment">//fileObj: file inputbox object</span></span><br><span class="line"><span class="keyword">var</span> oFReader = <span class="keyword">new</span> FileReader();</span><br><span class="line">oFReader.readAsDataURL(fileObj.files[<span class="number">0</span>]);</span><br><span class="line">oFReader.onloadend = <span class="function"><span class="keyword">function</span> (<span class="params">oFREvent</span>) </span>&#123;</span><br><span class="line">    src = oFREvent.target.result;</span><br><span class="line">    imageObj.src = src;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="keyword">return</span> src;</span><br></pre></td></tr></table></figure>
<h4 id="IE9:">IE9:</h4><p>不能用IE8的方法，也不支持FileReader。</p>
<p>这只是简单的关于图片预览，更多的裁剪、缩放等可以使用现在的第三方插件很容易做到。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;情景&quot;&gt;情景&lt;/h2&gt;&lt;p&gt;在网站开发中，通常会遇到图片预览的问题，就是在上传图片时，选择图片之后想要在边上显示图片（更多的是还会有一些裁剪、缩放、拖拽等，但这里只是简单的图片预览）。用代码来说就是下面这样的：&lt;br&gt;&lt;figure class=&quot;highligh
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/JavaScript/"/>
    
    
      <category term="FakePath" scheme="http://blog.helloarron.com/tags/FakePath/"/>
    
      <category term="File" scheme="http://blog.helloarron.com/tags/File/"/>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>使用 ffmpeg-php 截取视频缩略图</title>
    <link href="http://blog.helloarron.com/2016/01/04/php/php-ffmpeg-centos7/"/>
    <id>http://blog.helloarron.com/2016/01/04/php/php-ffmpeg-centos7/</id>
    <published>2016-01-04T09:39:03.000Z</published>
    <updated>2016-03-21T10:53:18.000Z</updated>
    
    <content type="html"><![CDATA[<h2 id="前言">前言</h2><p>在做网站的上传视频的时候，经常需要视频的某一帧作为缩略图，用来在视频未播放的时候显示，在<code>html</code>的元素<code>video</code>中有<code>poster</code>属性用来显示此图片<a href="http://www.w3school.com.cn/tags/tag_video.asp" target="_blank" rel="external">参考</a>。<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">video</span> <span class="attribute">controls</span> <span class="attribute">poster</span>=<span class="value">"/images/w3school.gif"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">source</span> <span class="attribute">src</span>=<span class="value">"movie.mp4"</span> <span class="attribute">type</span>=<span class="value">"video/mp4"</span>&gt;</span></span><br><span class="line">   <span class="tag">&lt;<span class="title">source</span> <span class="attribute">src</span>=<span class="value">"movie.ogg"</span> <span class="attribute">type</span>=<span class="value">"video/ogg"</span>&gt;</span></span><br><span class="line">   Your browser does not support the video tag.</span><br><span class="line"><span class="tag">&lt;/<span class="title">video</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="安装_ffmpeg_以及_ffmpeg-php_组件">安装 ffmpeg 以及 ffmpeg-php 组件</h2><h3 id="Ubuntu_系统">Ubuntu 系统</h3><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-<span class="keyword">get</span> install ffmpeg php5-ffmpeg php5-gd</span><br></pre></td></tr></table></figure>
<h3 id="Windows_系统">Windows 系统</h3><ol>
<li><p>下载<code>ffmpeg－php</code>：<a href="http://sergey89.ru/files/ffmpeg-php/" target="_blank" rel="external">http://sergey89.ru/files/ffmpeg-php/</a></p>
</li>
<li><p>解压<code>ffmpeg-php-win32-all.zip</code> 后有下面几个文件:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">avcodec-<span class="number">51</span><span class="class">.dll</span></span><br><span class="line">avformat-<span class="number">51</span><span class="class">.dll</span></span><br><span class="line">avutil-<span class="number">49</span><span class="class">.dll</span></span><br><span class="line">php_ffmpeg<span class="class">.dll</span></span><br><span class="line">pthreadGC2.dll</span><br></pre></td></tr></table></figure>
</li>
<li><p>将四个文件拷贝到<code>windows/system32</code>文件夹下面:</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">avcodec-<span class="number">51</span><span class="class">.dll</span>, avformat-<span class="number">51</span><span class="class">.dll</span>, avutil-<span class="number">49</span><span class="class">.dll</span>, pthreadGC2.dll</span><br></pre></td></tr></table></figure>
</li>
<li><p>将<code>php_ffmpeg.dll</code>拷贝到<code>php</code>的<code>ext</code>目录下。</p>
</li>
<li><p>然后需要到<code>apache/bin</code>文件下找到<code>php.ini</code>文件下允许使用<code>dll</code>文件加入<code>extension=php_ffmpeg.dll</code> 并允许<code>extension=php_gd2.dll</code>， <code>extension=php_gettext.dll</code>这两个设置。（去掉前面的分号）</p>
<figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">extension=php_gd2<span class="class">.dll</span></span><br><span class="line">extension=php_gettext<span class="class">.dll</span></span><br><span class="line">extension=php_ffmpeg.dll</span><br></pre></td></tr></table></figure>
</li>
<li><p>重新启动<code>apache</code>后使用<code>phpinfo()</code>函数看到一下信息配置，搜索页面中的<code>ffmpeg</code>，如果有就表明ffmpeg在php环境中配置成功了。</p>
</li>
<li><p>更多的使用请参考<a href="http://ffmpeg-php.sourceforge.net/doc/api/" target="_blank" rel="external">API</a></p>
</li>
</ol>
<h3 id="CentOS_系统">CentOS 系统</h3><ol>
<li><p>安装 <code>yasm</code>:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget http:<span class="comment">//www.tortall.net/projects/yasm/releases/yasm-0.7.0.tar.gz</span></span><br><span class="line">tar xzvf yasm-<span class="number">0.7</span><span class="number">.0</span>.tar.gz</span><br><span class="line">cd yasm-<span class="number">0.7</span><span class="number">.0</span></span><br><span class="line">./configure</span><br><span class="line">make</span><br><span class="line">make install</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装 <code>ffmpeg</code>:</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">svn checkout svn:<span class="comment">//svn.ffmpeg.org/ffmpeg/trunk ffmpeg</span></span><br><span class="line">cd ffmpeg</span><br><span class="line">./configure --enbale-shared</span><br><span class="line"><span class="built_in">make</span></span><br><span class="line"><span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
</li>
<li><p>安装<code>ffmpeg-php</code>插件:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">wget <span class="string">http:</span><span class="comment">//nchc.dl.sourceforge.net/project/ffmpeg-php/ffmpeg-php/0.6.0/ffmpeg-php-0.6.0.tbz2</span></span><br><span class="line">tar xvjf ffmpeg-php-<span class="number">0.6</span><span class="number">.0</span>.tbz2</span><br><span class="line">cd ffmpeg-php-<span class="number">0.6</span><span class="number">.0</span></span><br><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/php/</span>bin/phpize</span><br><span class="line">.<span class="regexp">/configure --with-php-config=/</span>usr<span class="regexp">/local/</span>php<span class="regexp">/bin/</span>php-config</span><br><span class="line">make</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>如果没报错继续执行：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make <span class="keyword">install</span></span><br></pre></td></tr></table></figure></p>
<p>如果报错：<br><figure class="highlight gherkin"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make: <span class="keyword">*</span><span class="keyword">*</span><span class="keyword">*</span> [ffmpeg_movie.lo] Error 1</span><br></pre></td></tr></table></figure></p>
<p>解决：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">vim ffmpeg_movie.c</span><br><span class="line"></span><br><span class="line">row <span class="number">311</span>: list_entry *le;    改为zend_rsrc_list_entry *le;</span><br><span class="line">row <span class="number">346</span>: list_entry new_le; 改为 zend_rsrc_list_entry new_le;</span><br><span class="line">row <span class="number">360</span>: hashkey_length+<span class="number">1</span>, (<span class="keyword">void</span> *)&amp;new_le, <span class="keyword">sizeof</span>(list_entry), 改为 hashkey_length+<span class="number">1</span>, (<span class="keyword">void</span> *)&amp;new_le,<span class="keyword">sizeof</span>(zend_rsrc_list_entry),</span><br></pre></td></tr></table></figure></p>
<ol>
<li>重新编译：<figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make <span class="built_in">test</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>如果没报错继续执行：<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make <span class="keyword">install</span></span><br></pre></td></tr></table></figure></p>
<p>如果报错：<br><figure class="highlight smali"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">The test-suite requires that<span class="function"> proc_open(</span><span class="function">)</span> is available.</span><br><span class="line"> Please<span class="instruction"> check </span>if you disabled it in php.ini.</span><br></pre></td></tr></table></figure></p>
<p>解决：编辑<code>php.ini</code>文件，找到<code>disable_functions</code>去掉<code>proc_open</code>。<br><figure class="highlight cmake"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">make <span class="keyword">install</span></span><br></pre></td></tr></table></figure></p>
<ol>
<li><p>修改<code>php.ini</code>文件:</p>
<figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vim <span class="regexp">/usr/</span>local<span class="regexp">/php/</span>etc/php.ini</span><br><span class="line">    加入: extension=ffmpeg.so</span><br></pre></td></tr></table></figure>
</li>
<li><p>重启<code>php-fpm</code>:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/etc/i</span>nit.d<span class="regexp">/php-fpm restart</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>运行ffmpeg报错如下：</p>
<figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">ffmpeg: <span class="keyword">error</span> <span class="keyword">while</span> loading shared libraries: libavdevice.<span class="keyword">so</span>.52: cannot <span class="keyword">open</span> shared object <span class="keyword">file</span>: <span class="keyword">No</span> such <span class="keyword">file</span> or directory</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>解决：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">vim /etc/ld.<span class="keyword">so</span>.<span class="keyword">conf</span></span><br><span class="line">加入一行：/usr/<span class="keyword">local</span>/lib</span><br><span class="line">然后执行 ldconfig</span><br></pre></td></tr></table></figure></p>
<ol>
<li>其他错误：<figure class="highlight nginx"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="title">make</span> ffmpeg-php时,出现<span class="built_in">error</span> <span class="string">'PIX_FMT_RGBA32'</span> undeclared...</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>解决方法:<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">vi ffmpeg_frame.c, 替换<span class="constant">PIX_FMT_RGBA32为</span>/<span class="constant">PIX_FMT_RGB32</span></span><br><span class="line">    <span class="symbol">:%s/PIX_FMT_RGBA32/PIX_FMT_RGB32</span></span><br></pre></td></tr></table></figure></p>
<p>执行<code>/usr/local/php/sbin/php-fpm restart</code>时报错：<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="regexp">/usr/</span>local<span class="regexp">/php/</span>bin<span class="regexp">/php-cgi: symbol lookup error: /</span>usr<span class="regexp">/local/</span>php<span class="regexp">/lib/</span>php<span class="regexp">/extensions/</span>no-debug-non-zts-<span class="number">20060613</span>/ffmpeg.<span class="string">so:</span> undefined <span class="string">symbol:</span> register_ffmpeg_frame_class</span><br><span class="line"> failed</span><br></pre></td></tr></table></figure></p>
<p>解决方法同上，然后重编译安装<code>ffmpeg-php</code>。</p>
<h3 id="处理视频">处理视频</h3><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getVideoCover</span><span class="params">(<span class="variable">$filePath</span>, <span class="variable">$fileName</span>, <span class="variable">$time</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 默认截取第一秒第一帧</span></span><br><span class="line">    <span class="keyword">if</span>(<span class="keyword">empty</span>(<span class="variable">$time</span>))&#123;</span><br><span class="line">        <span class="variable">$time</span> = <span class="string">'1'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 缩略图命名</span></span><br><span class="line">    exec(<span class="string">"ffmpeg -i "</span>.<span class="variable">$filePath</span>.<span class="string">" -y -f mjpeg -ss 3 -t "</span>.<span class="variable">$time</span>.<span class="string">" -s 320x240 "</span>.<span class="variable">$this</span>-&gt;coverPath.<span class="variable">$fileName</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$fileName</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="keyword">function</span> <span class="title">getTime</span><span class="params">(<span class="variable">$file</span>)</span></span>&#123;</span><br><span class="line">    <span class="comment">// 总长度</span></span><br><span class="line">    <span class="variable">$vtime</span> = exec(<span class="string">"ffmpeg -i "</span>.<span class="variable">$file</span>.<span class="string">" 2&gt;&amp;1 | grep 'Duration' | cut -d ' ' -f 4 | sed s/,//"</span>);</span><br><span class="line">    <span class="variable">$duration</span> = explode(<span class="string">":"</span>, <span class="variable">$vtime</span>);</span><br><span class="line">    <span class="comment">// 转化为秒</span></span><br><span class="line">    <span class="variable">$duration_in_seconds</span> = <span class="variable">$duration</span>[<span class="number">0</span>]*<span class="number">3600</span> + <span class="variable">$duration</span>[<span class="number">1</span>]*<span class="number">60</span> + round(<span class="variable">$duration</span>[<span class="number">2</span>]);</span><br><span class="line">    <span class="keyword">return</span> <span class="variable">$vtime</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<p>更多的使用请参考<code>ffmpeg</code>的具体使用。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;前言&quot;&gt;前言&lt;/h2&gt;&lt;p&gt;在做网站的上传视频的时候，经常需要视频的某一帧作为缩略图，用来在视频未播放的时候显示，在&lt;code&gt;html&lt;/code&gt;的元素&lt;code&gt;video&lt;/code&gt;中有&lt;code&gt;poster&lt;/code&gt;属性用来显示此图片&lt;a hre
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
    
      <category term="Linux" scheme="http://blog.helloarron.com/tags/Linux/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>Yii 结合 Dropzone 实现文件上传</title>
    <link href="http://blog.helloarron.com/2015/12/21/php/yii-dropzonejs-qiniu/"/>
    <id>http://blog.helloarron.com/2015/12/21/php/yii-dropzonejs-qiniu/</id>
    <published>2015-12-21T10:38:20.000Z</published>
    <updated>2016-03-21T10:54:46.000Z</updated>
    
    <content type="html"><![CDATA[<p>前端时间写了两篇<a href="http://www.dropzonejs.com/" target="_blank" rel="external">DropzoneJS</a>的使用指南：</p>
<ol>
<li><a href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/">DropzoneJS 使用指南&lt;一&gt;</a></li>
<li><a href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-2/">DropzoneJS 使用指南&lt;二&gt;</a><br>因为自己经常使用Yii 1，而且也正在学习Yii 2，所以这里结合两者写一个简单的文件上传的例子(上传到七牛)，大概就是这样子的：<br><img src="http://images.helloarron.com/yii-dropzone-1.png" alt="图片"></li>
</ol>
<h2 id="css_样式">css 样式</h2><p>因为主要是<code>php</code>和<code>javascript</code>，所以这里就不管<code>css</code>怎么写了，直接贴出来主要的样式<code>site.css</code>：<br><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="class">.files-box</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">position</span>:<span class="value"> relative</span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.files-box</span> <span class="class">.dropzone</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">border</span>:<span class="value"> <span class="number">2px</span> dashed <span class="hexcolor">#FE7877</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">min-height</span>:<span class="value"> <span class="number">300px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">border-radius</span>:<span class="value"> <span class="number">4px</span></span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">background-color</span>:<span class="value"> <span class="function">rgba</span>(<span class="number">253</span>, <span class="number">181</span>, <span class="number">64</span>, <span class="number">0.1</span>)</span></span>;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">20px</span> <span class="number">20px</span></span></span>;</span><br><span class="line">&#125;</span></span><br><span class="line"><span class="class">.dropzone</span> <span class="class">.dz-message</span><span class="rules">&#123;</span><br><span class="line">    <span class="rule"><span class="attribute">padding</span>:<span class="value"> <span class="number">70px</span> <span class="number">0</span></span></span>;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="页面结构">页面结构</h2><p>为了方便我使用了<a href="http://amazeui.org/" target="_blank" rel="external">AmazeUI</a>，<code>layouts</code>文件夹下写一个<code>main.pnp</code>作为主要的<code>layout</code>：<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* <span class="doctag">@var</span> $this \yii\web\View */</span></span><br><span class="line"><span class="comment">/* <span class="doctag">@var</span> $content string */</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">Html</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">assets</span>\<span class="title">AppAsset</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">AssetBundle</span>;</span><br><span class="line"></span><br><span class="line">AppAsset::register(<span class="variable">$this</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span> <span class="variable">$this</span>-&gt;beginPage() <span class="preprocessor">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="doctype">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">html</span> <span class="attribute">lang</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?</span>= Yii::<span class="variable">$app</span>-&gt;language <span class="preprocessor">?&gt;</span></span>"</span> <span class="attribute">class</span>=<span class="value">"no-js fixed-layout"</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">head</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">charset</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?</span>= Yii::<span class="variable">$app</span>-&gt;charset <span class="preprocessor">?&gt;</span></span>"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"X-UA-Compatible"</span> <span class="attribute">content</span>=<span class="value">"IE=edge"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"viewport"</span> <span class="attribute">content</span>=<span class="value">"width=device-width, initial-scale=1, maximum-scale=1, user-scalable=no"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">name</span>=<span class="value">"renderer"</span> <span class="attribute">content</span>=<span class="value">"webkit"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">meta</span> <span class="attribute">http-equiv</span>=<span class="value">"Cache-Control"</span> <span class="attribute">content</span>=<span class="value">"no-siteapp"</span> /&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?</span>= Html::csrfMetaTags() <span class="preprocessor">?&gt;</span></span></span><br><span class="line">    <span class="tag">&lt;<span class="title">title</span>&gt;</span><span class="php"><span class="preprocessor">&lt;?</span>= Html::encode(<span class="variable">$this</span>-&gt;title) <span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">title</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"http://cdn.amazeui.org/amazeui/2.4.2/css/amazeui.flat.min.css"</span>/&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">type</span>=<span class="value">"text/css"</span> <span class="attribute">href</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$baseUrl</span>.<span class="string">'/tools/dropzone/dropzone.css'</span>;<span class="preprocessor">?&gt;</span></span>"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">link</span> <span class="attribute">rel</span>=<span class="value">"stylesheet"</span> <span class="attribute">href</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$baseUrl</span>;<span class="preprocessor">?&gt;</span></span>/css/site.css"</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    </span><br><span class="line"><span class="tag">&lt;/<span class="title">head</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span> <span class="variable">$this</span>-&gt;beginBody() <span class="preprocessor">?&gt;</span></span></span><br><span class="line">    <span class="comment">&lt;!--[if lte IE 9]&gt;</span><br><span class="line">    &lt;p class="browsehappy"&gt;你正在使用&lt;strong&gt;过时&lt;/strong&gt;的浏览器，本网站暂不支持。 请 &lt;a href="http://browsehappy.com/" target="_blank"&gt;升级浏览器&lt;/a&gt;</span><br><span class="line">    以获得更好的体验！&lt;/p&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"admin-content"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"am-cf am-padding"</span>&gt;</span></span><br><span class="line">            <span class="php"><span class="preprocessor">&lt;?</span>= <span class="variable">$content</span> <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    </span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span><br><span class="line">    &lt;script src="http://cdn.staticfile.org/modernizr/2.8.3/modernizr.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src="http://cdn.amazeui.org/amazeui/2.4.2/js/polyfill/rem.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src="http://cdn.amazeui.org/amazeui/2.4.2/js/polyfill/respond.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;script src="http://cdn.amazeui.org/amazeui/2.4.2/js/amazeui.legacy.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if lt IE 9]&gt;</span><br><span class="line">    &lt;script src="http://libs.baidu.com/jquery/1.11.1/jquery.min.js"&gt;&lt;/script&gt;</span><br><span class="line">    &lt;![endif]--&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--[if (gte IE 9)|!(IE)]&gt;&lt;!--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$baseUrl</span>;<span class="preprocessor">?&gt;</span></span>/js/jquery-1.7.2.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;![endif]--&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="comment">&lt;!--[if (gte IE 9)|!(IE)]&gt;&lt;!--&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"http://cdn.amazeui.org/amazeui/2.4.2/js/amazeui.min.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span> <span class="attribute">src</span>=<span class="value">"<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="variable">$baseUrl</span>.<span class="string">'/tools/dropzone/dropzone.js'</span>;<span class="preprocessor">?&gt;</span></span>"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br><span class="line">    <span class="comment">&lt;!--&lt;![endif]--&gt;</span></span><br><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span> <span class="variable">$this</span>-&gt;endBody() <span class="preprocessor">?&gt;</span></span></span><br><span class="line"><span class="tag">&lt;/<span class="title">body</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">html</span>&gt;</span></span><br><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span> <span class="variable">$this</span>-&gt;endPage() <span class="preprocessor">?&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>接下来就是上传部分的<code>html</code>，写在<code>files</code>文件夹下的<code>index.php</code>中:<br><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/* <span class="doctag">@var</span> $this yii\web\View */</span></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">AssetBundle</span>;</span><br><span class="line"></span><br><span class="line"><span class="variable">$this</span>-&gt;title = Yii::t(<span class="string">'app'</span>, <span class="string">'Files'</span>);</span><br><span class="line"><span class="preprocessor">?&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"am-padding-bottom"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">strong</span> <span class="attribute">class</span>=<span class="value">"am-text-primary am-text-lg"</span>&gt;</span><span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> Yii::t(<span class="string">'app'</span>, <span class="string">'Files'</span>);<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">strong</span>&gt;</span> /</span><br><span class="line">    <span class="tag">&lt;<span class="title">small</span>&gt;</span>Files<span class="tag">&lt;/<span class="title">small</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"files-box"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dropzone"</span> <span class="attribute">id</span>=<span class="value">"myDropzone"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"am-text-success dz-message"</span>&gt;</span>将文件拖拽到此处<span class="tag">&lt;<span class="title">br</span>&gt;</span>或点此打开文件管理器选择文件<span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<h2 id="php部分">php部分</h2><p>在<code>app/controllers</code>中新建<code>FilesController.php</code>:<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">AccessControl</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">models</span>\<span class="title">File</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">VerbFilter</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* 文件管理</span><br><span class="line">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FilesController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="comment">// YII2的防止csrf攻击，不能多次提交相同的表单</span></span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$enableCsrfValidation</span> = <span class="keyword">false</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'access'</span> =&gt; [</span><br><span class="line">                <span class="string">'class'</span> =&gt; AccessControl::className(),</span><br><span class="line">                <span class="string">'rules'</span> =&gt; [</span><br><span class="line">                    [</span><br><span class="line">                        <span class="string">'actions'</span> =&gt; [<span class="string">'index'</span>],</span><br><span class="line">                        <span class="string">'allow'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">                        <span class="string">'roles'</span> =&gt; [<span class="string">'@'</span>],</span><br><span class="line">                    ],</span><br><span class="line">                ],</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'verbs'</span> =&gt; [</span><br><span class="line">                <span class="string">'class'</span> =&gt; VerbFilter::className(),</span><br><span class="line">                <span class="string">'actions'</span> =&gt; [</span><br><span class="line">                    <span class="string">'index'</span> =&gt; [<span class="string">'get'</span>]</span><br><span class="line">                ],</span><br><span class="line">            ],</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="variable">$this</span>-&gt;render(<span class="string">'index'</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>文件提交上传是使用<code>Ajax</code>,我将<code>Ajax</code>作为项目的一个<code>module</code>，可以在<code>app</code>文件夹下新建一个<code>modules</code>文件夹，在<code>modules</code>下新建<code>ajax</code>无文件夹，并在里面新建一个<code>Module.php</code>：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">modules</span>\<span class="title">ajax</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Module</span> <span class="title">as</span> <span class="title">BaseModule</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">BaseJson</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* Ajax 模块</span><br><span class="line">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">Module</span> <span class="keyword">extends</span> <span class="title">BaseModule</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="variable">$controllerNamespace</span> = <span class="string">'backend\modules\ajax\controllers'</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">init</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">parent</span>::init();</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">beforeAction</span><span class="params">(<span class="variable">$action</span>)</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> (<span class="keyword">parent</span>::beforeAction(<span class="variable">$action</span>)) &#123;</span><br><span class="line">            <span class="comment">// 只能是Ajax请求才能进入该模块</span></span><br><span class="line">            <span class="keyword">if</span> (Yii::<span class="variable">$app</span>-&gt;request-&gt;isAjax) &#123;</span><br><span class="line">                <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">            &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">                <span class="variable">$result</span>[<span class="string">'error'</span>] = <span class="number">1</span>;</span><br><span class="line">                <span class="variable">$result</span>[<span class="string">'msg'</span>] = <span class="string">"请求方式错误"</span>;</span><br><span class="line">                <span class="keyword">echo</span> BaseJson::encode(<span class="variable">$result</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>在<code>ajax</code>文件夹下新建一个<code>controllers</code>文件夹，在里面新建一个<code>FilesController.php</code>:<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line"><span class="keyword">namespace</span> <span class="title">backend</span>\<span class="title">modules</span>\<span class="title">ajax</span>\<span class="title">controllers</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">use</span> <span class="title">Yii</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">base</span>\<span class="title">Controller</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">AccessControl</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">filters</span>\<span class="title">VerbFilter</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">helpers</span>\<span class="title">BaseJson</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">Ramsey</span>\<span class="title">Uuid</span>\<span class="title">Uuid</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">crazyfd</span>\<span class="title">qiniu</span>\<span class="title">Qiniu</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">yii</span>\<span class="title">web</span>\<span class="title">UploadedFile</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">models</span>\<span class="title">File</span>;</span><br><span class="line"><span class="keyword">use</span> <span class="title">backend</span>\<span class="title">models</span>\<span class="title">UploadForm</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span><br><span class="line">* 文件</span><br><span class="line">*/</span></span><br><span class="line"><span class="class"><span class="keyword">class</span> <span class="title">FilesController</span> <span class="keyword">extends</span> <span class="title">Controller</span></span><br><span class="line"></span>&#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">behaviors</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> [</span><br><span class="line">            <span class="string">'access'</span> =&gt; [</span><br><span class="line">                <span class="string">'class'</span> =&gt; AccessControl::className(),</span><br><span class="line">                <span class="string">'rules'</span> =&gt; [</span><br><span class="line">                    [</span><br><span class="line">                        <span class="string">'actions'</span> =&gt; [<span class="string">'index'</span>, <span class="string">'upload'</span>],</span><br><span class="line">                        <span class="string">'allow'</span> =&gt; <span class="keyword">true</span>,</span><br><span class="line">                        <span class="string">'roles'</span> =&gt; [<span class="string">'@'</span>]</span><br><span class="line">                    ]</span><br><span class="line">                ]</span><br><span class="line">            ],</span><br><span class="line">            <span class="string">'verbs'</span> =&gt; [</span><br><span class="line">                <span class="string">'class'</span> =&gt; VerbFilter::className(),</span><br><span class="line">                <span class="string">'actions'</span> =&gt; [</span><br><span class="line">                    <span class="string">'index'</span> =&gt; [<span class="string">'get'</span>],</span><br><span class="line">                    <span class="string">'update'</span> =&gt; [<span class="string">'post'</span>]</span><br><span class="line">                ]</span><br><span class="line">            ]</span><br><span class="line">        ];</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionIndex</span><span class="params">()</span></span><br><span class="line">    </span>&#123;</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">'error'</span>] = <span class="number">110</span>;</span><br><span class="line">        <span class="variable">$result</span>[<span class="string">'msg'</span>] = <span class="string">"Hi,Boy,This request is error.Please check it!"</span>;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">return</span> BaseJson::encode(<span class="variable">$result</span>);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">public</span> <span class="function"><span class="keyword">function</span> <span class="title">actionUpload</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="variable">$model</span> = <span class="keyword">new</span> UploadForm();</span><br><span class="line">        <span class="variable">$qiniu</span> = <span class="keyword">new</span> Qiniu(Yii::<span class="variable">$app</span>-&gt;params[<span class="string">'Qiniu'</span>][<span class="string">'sk'</span>], Yii::<span class="variable">$app</span>-&gt;params[<span class="string">'Qiniu'</span>][<span class="string">'ak'</span>], Yii::<span class="variable">$app</span>-&gt;params[<span class="string">'Qiniu'</span>][<span class="string">'domain'</span>], Yii::<span class="variable">$app</span>-&gt;params[<span class="string">'Qiniu'</span>][<span class="string">'bucket'</span>]);</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (Yii::<span class="variable">$app</span>-&gt;request-&gt;isPost) &#123;</span><br><span class="line"></span><br><span class="line">            <span class="variable">$model</span>-&gt;file = UploadedFile::getInstanceByName(<span class="string">'file'</span>);</span><br><span class="line">            <span class="keyword">if</span> (<span class="variable">$model</span>-&gt;file &amp;&amp; <span class="variable">$model</span>-&gt;validate()) &#123;</span><br><span class="line">                <span class="variable">$fileName</span> = <span class="variable">$model</span>-&gt;file-&gt;baseName.<span class="string">'.'</span>.<span class="variable">$model</span>-&gt;file-&gt;extension;</span><br><span class="line">                <span class="variable">$qiniu</span>-&gt;uploadFile(<span class="variable">$model</span>-&gt;file-&gt;tempName, <span class="variable">$fileName</span>);</span><br><span class="line">                <span class="variable">$url</span> = <span class="variable">$qiniu</span>-&gt;getLink(<span class="variable">$fileName</span>);</span><br><span class="line"></span><br><span class="line">                <span class="comment">// 保存文件数据到数据库</span></span><br><span class="line">                <span class="variable">$file</span> = <span class="keyword">new</span> File([<span class="string">'scenario'</span> =&gt; <span class="string">'upload'</span>]);</span><br><span class="line">                <span class="variable">$file</span>-&gt;setAttributes([</span><br><span class="line">                    <span class="string">'uid'</span>       =&gt; Yii::<span class="variable">$app</span>-&gt;user-&gt;id,</span><br><span class="line">                    <span class="string">'key'</span>       =&gt; Uuid::uuid4()-&gt;toString(),</span><br><span class="line">                    <span class="string">'name'</span>      =&gt; <span class="variable">$model</span>-&gt;file-&gt;baseName,</span><br><span class="line">                    <span class="string">'filesize'</span>  =&gt; <span class="variable">$model</span>-&gt;file-&gt;size,</span><br><span class="line">                    <span class="string">'filetype'</span>  =&gt; <span class="variable">$model</span>-&gt;file-&gt;extension,</span><br><span class="line">                    <span class="string">'url'</span>       =&gt; <span class="variable">$url</span>,</span><br><span class="line">                    <span class="string">'urltype'</span>   =&gt; <span class="number">1</span>,</span><br><span class="line">                ]);</span><br><span class="line"></span><br><span class="line">                <span class="keyword">if</span> (<span class="variable">$file</span>-&gt;save()) &#123;</span><br><span class="line">                    <span class="variable">$result</span>[<span class="string">'msg'</span>] = <span class="string">'存储到数据库成功！'</span>;</span><br><span class="line">                &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                    <span class="variable">$result</span>[<span class="string">'msg'</span>] = <span class="string">'存储到数据库失败！'</span>;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="variable">$result</span>[<span class="string">'error'</span>] = <span class="number">0</span>;</span><br><span class="line">            &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">                <span class="variable">$result</span>[<span class="string">'error'</span>] = <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            <span class="variable">$result</span>[<span class="string">'file'</span>] = <span class="variable">$model</span>-&gt;file;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> BaseJson::encode(<span class="variable">$result</span>);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span></span><br></pre></td></tr></table></figure></p>
<p>到这里基本<code>php</code>端的代码就算完了，真的注意的是需要使用<code>composer</code>安装<code>uuid</code>、<code>qiniu</code>相关的文件。<br>剩下就是页面上的<code>javascript</code>代码了。</p>
<h2 id="Javascript部分">Javascript部分</h2><p>在<code>index.php</code>中底部加入<code>javascript</code>代码：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line">&lt;script type=<span class="string">"text/javascript"</span>&gt;</span><br><span class="line"></span><br><span class="line">    Dropzone.autoDiscover = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> myDropzone = <span class="keyword">new</span> Dropzone(<span class="string">"#myDropzone"</span>, &#123;</span><br><span class="line">        url: <span class="string">"/ajax/files/upload"</span>,</span><br><span class="line">        addRemoveLinks: <span class="literal">true</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        filesizeBase: <span class="number">1024</span>,</span><br><span class="line">        sending: <span class="function"><span class="keyword">function</span>(<span class="params">file, xhr, formData</span>) </span>&#123;</span><br><span class="line">            <span class="comment">// Yii::$app-&gt;request-&gt;post('filesize');</span></span><br><span class="line">            formData.append(<span class="string">"filesize"</span>, file.size);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">file, response, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> res = <span class="built_in">JSON</span>.parse(response);</span><br><span class="line">            <span class="keyword">if</span> (res.error) &#123;</span><br><span class="line">                $(file.previewTemplate).children(<span class="string">'.dz-error-mark'</span>).css(<span class="string">'opacity'</span>, <span class="string">'1'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"><span class="xml"><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span></span><br></pre></td></tr></table></figure></p>
<p>到这里就结束了，完成了文件的上传功能。<br><img src="http://images.helloarron.com/yii-dropzone-2.png" alt="图片"></p>
<h2 id="参考">参考</h2><p>关于<code>Dropzone</code>的具体参数使用请参考以下文章：</p>
<ol>
<li><a href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/">DropzoneJS 使用指南&lt;一&gt;</a></li>
<li><a href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-2/">DropzoneJS 使用指南&lt;二&gt;</a></li>
</ol>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前端时间写了两篇&lt;a href=&quot;http://www.dropzonejs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DropzoneJS&lt;/a&gt;的使用指南：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;a href=&quot;http://blog.helloa
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/PHP/JavaScript/"/>
    
    
      <category term="DropzoneJS" scheme="http://blog.helloarron.com/tags/DropzoneJS/"/>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
      <category term="Yii" scheme="http://blog.helloarron.com/tags/Yii/"/>
    
  </entry>
  
  <entry>
    <title>【Laravel学习篇 · 二】在Laravel中借鉴Yii的params使用方法</title>
    <link href="http://blog.helloarron.com/2015/11/26/php/laravel-learn-page-2/"/>
    <id>http://blog.helloarron.com/2015/11/26/php/laravel-learn-page-2/</id>
    <published>2015-11-26T02:36:20.000Z</published>
    <updated>2015-11-27T07:03:23.000Z</updated>
    
    <content type="html"><![CDATA[<p>前段时间本来准备学习 <code>Laravel</code> 的，后来因为换了工作的原因，又回到自己常用的 <code>Yii</code> 。现在要将 <code>Laravel</code> 重拾回来，开始学习这个被PHPer们喜爱的东西。</p>
<p>上一篇敢关于 <code>Laravel</code> 的文章 <a href="http://blog.helloarron.com/2015/06/18/php/laravel-learn-page-1/">【Laravel学习篇 · 一】Windows下起步就遇麻烦</a>。这一篇讲讲在 <code>Laravel</code> 中借鉴 <code>Yii</code> 的一些使用方法。</p>
<hr>

<h2 id="情景">情景</h2><p>在网站开发中，我们通常会有很多的基本固定的参数，比如<code>站点标题</code>、<code>copyright</code>、<code>url</code>等，看到这些我们通常会去<code>config</code>文件里面找，因为这些参数基本都是固定的，很少改动，就算改动也很简单。<br>但还有一些情况就是，如<code>user</code>表有一个字段<code>gander</code>为<code>0</code>或者<code>1</code>，表示<code>女生</code>和<code>男生</code>，在拿到数据在页面显示时肯定不应该显示<code>0</code>或<code>1</code>，而是转换为对应的文字信息。初学者可能是这样做的：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line">    <span class="preprocessor">&lt;?php</span> <span class="keyword">if</span> (<span class="variable">$user</span>-&gt;gander == <span class="number">1</span>): <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>性别：<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"男生"</span>;<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">else</span>: <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>性别：<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"女生"</span>;<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">endif</span> <span class="preprocessor">?&gt;</span></span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>但会随着网站的功能的变化发生变化，这时候需要添加一个<code>2</code>表示<code>保密</code>。那这时候我们还得去那个地方改动php的判断条件：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="php"><span class="preprocessor">&lt;?php</span></span><br><span class="line">    <span class="preprocessor">&lt;?php</span> <span class="keyword">if</span> (<span class="variable">$user</span>-&gt;gander == <span class="number">1</span>): <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>性别：<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"男生"</span>;<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">elseif</span>(<span class="variable">$user</span>-&gt;gander == <span class="number">2</span>): <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>性别：<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"保密"</span>;<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">else</span>: <span class="preprocessor">?&gt;</span></span></span><br><span class="line">        <span class="tag">&lt;<span class="title">span</span>&gt;</span>性别：<span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">echo</span> <span class="string">"女生"</span>;<span class="preprocessor">?&gt;</span></span><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br><span class="line">    <span class="php"><span class="preprocessor">&lt;?php</span> <span class="keyword">endif</span> <span class="preprocessor">?&gt;</span></span></span><br><span class="line">?&gt;</span><br></pre></td></tr></table></figure></p>
<p>这样的改动显然是不舒服的，万一老板说不需要有<code>保密</code>这个选项的时候，万一这样的改动有十个地方，万一……<br>这还是一个性别，如果还有其他很多的类似这样的操作，比如<code>type</code>、<code>is_actived</code>等等。面对这样的处理，有没有一些便捷、可扩展的配置呢？我们可以来看看Yii中的方法。</p>
<h2 id="Yii_中的解决办法">Yii 中的解决办法</h2><p>面对什么的情况，在 Yii 中有一个很好的方法。当你开始学习 Yii 的时候，你已经注意到了<code>config</code>文件夹中的配置文件<code>main.php</code>，而且你会发现，在这个<code>main.php</code>文件中有一个<code>params</code>选项，这个是干嘛的呢？<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Yii 1 中</span></span><br><span class="line"><span class="string">'params'</span> =&gt; <span class="keyword">array</span>(</span><br><span class="line">    <span class="string">'adminEmail'</span> =&gt; <span class="string">'yangyun4814@gmail.com'</span>,</span><br><span class="line">    <span class="string">'gander'</span> =&gt; [</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="string">'女生'</span></span><br><span class="line">        <span class="number">1</span> =&gt; <span class="string">"男生"</span>,</span><br><span class="line">        <span class="number">2</span> =&gt; <span class="string">"保密"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="comment">// ......</span></span><br><span class="line">),</span><br><span class="line"></span><br><span class="line"><span class="comment">// Yii 2 中</span></span><br><span class="line"><span class="variable">$params</span> = array_merge(</span><br><span class="line">    <span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/../../common/config/params.php'</span>),</span><br><span class="line">    <span class="keyword">require</span>(<span class="keyword">__DIR__</span> . <span class="string">'/params.php'</span>)</span><br><span class="line">);</span><br><span class="line"><span class="string">'params'</span> =&gt; <span class="variable">$params</span>,</span><br><span class="line"></span><br><span class="line"><span class="comment">// __DIR__ . '/params.php' 中的内容</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'adminEmail'</span> =&gt; <span class="string">'yangyun4814@gmail.com'</span>,</span><br><span class="line">    <span class="string">'gander'</span> =&gt; [</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="string">'女生'</span></span><br><span class="line">        <span class="number">1</span> =&gt; <span class="string">"男生"</span>,</span><br><span class="line">        <span class="number">2</span> =&gt; <span class="string">"保密"</span></span><br><span class="line">    ]</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p>
<p>那在页面中这些数据是怎么使用的呢？<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line">// controllers/UserController.php</span><br><span class="line">public <span class="keyword">function</span> actionIndex()</span><br><span class="line">&#123;</span><br><span class="line">    <span class="variable">$user</span> = User::findOne(<span class="number">1</span>);</span><br><span class="line">    return <span class="variable">$this-</span>&gt;render(<span class="string">'index'</span>,[</span><br><span class="line">        <span class="string">'user'</span> =&gt; <span class="variable">$user</span></span><br><span class="line">    ])</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">// views/user/index.php</span><br><span class="line">// Yii <span class="number">1</span></span><br><span class="line">&lt;span&gt;性别：&lt;?php echo Yii::app()-&gt;params[<span class="string">'gander'</span>][<span class="variable">$user-</span>&gt;gander];?&gt;&lt;/span&gt;</span><br><span class="line"></span><br><span class="line">// Yii <span class="number">2</span></span><br><span class="line">&lt;span&gt;性别：&lt;?php echo \Yii::<span class="variable">$app-</span>&gt;params[<span class="string">'gander'</span>][<span class="variable">$user-</span>&gt;gander];?&gt;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<p>这样的方式是不是很舒服呢？写代码也方便很多呢？那在 Laravel 中如何去运用这样的方式呢？</p>
<h2 id="Laravel中如何借鉴">Laravel中如何借鉴</h2><p>在 Laravel 中运用 Yii 的这种方式其实也很简单，阅读官方的文档就会发现有一个东西叫<code>config(&#39;name&#39;)</code>，这个就是从配置文件夹<code>config</code>中回去配置细细，比如<code>config(&#39;app.url&#39;)</code>会获取到<code>/config/app.php</code>中的<code>url</code>配置项。<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// config/app.php</span></span><br><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'debug'</span> =&gt; env(<span class="string">'APP_DEBUG'</span>, <span class="keyword">false</span>),</span><br><span class="line">    <span class="string">'url'</span> =&gt; <span class="string">'http://blog.helloarron.com'</span>,</span><br><span class="line">    <span class="string">'timezone'</span> =&gt; <span class="string">'UTC'</span>,</span><br><span class="line">]</span><br></pre></td></tr></table></figure></p>
<p>看到这里你大概已经知道了如何实现<code>params</code>的设置了。Let’s GO ~<br>在<code>config</code>文件夹中新建文件<code>params.php</code>,然后内容如下：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">return</span> [</span><br><span class="line">    <span class="string">'adminEmail'</span> =&gt; <span class="string">'yangyun4814@gmail.com'</span>,</span><br><span class="line">    <span class="string">'gander'</span> =&gt; [</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="string">'女生'</span></span><br><span class="line">        <span class="number">1</span> =&gt; <span class="string">"男生"</span>,</span><br><span class="line">        <span class="number">2</span> =&gt; <span class="string">"保密"</span></span><br><span class="line">    ],</span><br><span class="line">    <span class="string">'is_active'</span> =&gt; [</span><br><span class="line">        <span class="number">0</span> =&gt; <span class="string">'未激活'</span>,</span><br><span class="line">        <span class="number">1</span> =&gt; <span class="string">'激活'</span></span><br><span class="line">    ],</span><br><span class="line">];</span><br></pre></td></tr></table></figure></p>
<p>然后<code>blade</code>页面中使用<code>config(&#39;name&#39;)</code>调用即可：<br><figure class="highlight xquery"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;span&gt;性别：&#123;&#123; config(<span class="string">'params.gander'</span>)[<span class="variable">$user-</span>&gt;gander] &#125;&#125;&lt;/span&gt;</span><br></pre></td></tr></table></figure></p>
<h2 id="存在的问题">存在的问题</h2><p>在网友<a href="http://segmentfault.com/u/outshine" target="_blank" rel="external">@Outshine</a>的提示下,上面的方法在Yii中是存在问题的：</p>
<ul>
<li>国际化</li>
<li>在IDE里提示</li>
</ul>
<p>关于国际化，上面在<code>params</code>中的<code>valae</code>不用写中文，而是约定好的一些<code>变量</code>，然后通过Yii::t(‘filename’, Yii::app()-&gt;params[‘gander’][$user-&gt;gander]);这样就解决了国际化的问题。关于在IDE里提示，这个就做不到了。<br>所以，关于从数据库获取一些需要转换的值的时候，可以在对应的模型里面做：<br><figure class="highlight php"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//model中</span></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">static</span> <span class="function"><span class="keyword">function</span> <span class="title">getTypeOption</span><span class="params">()</span></span>&#123;</span><br><span class="line">    <span class="keyword">return</span> [</span><br><span class="line">        <span class="keyword">self</span>::TYPE_A =&gt; Yii::t(<span class="string">'model'</span>,<span class="string">'type a'</span>),</span><br><span class="line">        <span class="keyword">self</span>::TYPE_B =&gt; Yii::t(<span class="string">'model'</span>,<span class="string">'type b'</span>)</span><br><span class="line">    ];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//view中</span></span><br><span class="line"><span class="variable">$form</span>-&gt;field(<span class="variable">$model</span>,<span class="string">'type'</span>)-&gt;dropdownList(<span class="variable">$model</span>-&gt;getTypeOption()[<span class="variable">$model</span>-&gt;type]);</span><br></pre></td></tr></table></figure></p>
<p>感谢网友<a href="http://segmentfault.com/u/outshine" target="_blank" rel="external">@Outshine</a>的意见和提供的一些资料：</p>
<ul>
<li><a href="https://github.com/iiyii/getyii" target="_blank" rel="external">getyii.com</a></li>
<li><a href="https://github.com/forecho/awesome-yii2" target="_blank" rel="external">YII2干货集</a></li>
</ul>
<p>这个是在 <code>Laravel</code> 中借鉴 <code>Yii</code> 的 <code>params</code> 使用方法，其他更多的借鉴方法会在后续的不断学习中总结并分享出来。</p>
<h2 id="About_Me">About Me</h2><p>博客: <a href="http://blog.helloarron.com">http://blog.helloarron.com</a><br>Github: <a href="https://github.com/ArronYR" target="_blank" rel="external">https://github.com/ArronYR</a><br>Email: yangyun4814@gmail.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;前段时间本来准备学习 &lt;code&gt;Laravel&lt;/code&gt; 的，后来因为换了工作的原因，又回到自己常用的 &lt;code&gt;Yii&lt;/code&gt; 。现在要将 &lt;code&gt;Laravel&lt;/code&gt; 重拾回来，开始学习这个被PHPer们喜爱的东西。&lt;/p&gt;
&lt;p&gt;上一篇敢关于
    
    </summary>
    
      <category term="PHP" scheme="http://blog.helloarron.com/categories/PHP/"/>
    
    
      <category term="Laravel" scheme="http://blog.helloarron.com/tags/Laravel/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
      <category term="Yii" scheme="http://blog.helloarron.com/tags/Yii/"/>
    
  </entry>
  
  <entry>
    <title>DropzoneJS 使用指南&lt;二&gt;</title>
    <link href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-2/"/>
    <id>http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-2/</id>
    <published>2015-11-25T11:41:13.000Z</published>
    <updated>2016-04-11T14:11:53.000Z</updated>
    
    <content type="html"><![CDATA[<p>上篇：<a href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/">DropzoneJS 使用指南&lt;一&gt;</a></p>
<hr>
<h2 id="事件">事件</h2><p>Dropzone触发事件在处理文件时,你可以通过当前实例调用<code>.on(eventName, callbackFunction)</code>监听事件。</p>
<p>因为听事件只能是Dropzone实例,设置你的事件侦听器,最好的地方是在init函数。<br><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">Dropzone.options.myAwesomeDropzone = &#123;</span><br><span class="line">  init: <span class="function"><span class="keyword">function</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    <span class="keyword">this</span>.on(<span class="string">"addedfile"</span>, <span class="function"><span class="keyword">function</span><span class="params">(file)</span> </span>&#123; alert(<span class="string">"Added file."</span>); &#125;);</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>如果你<a href="#手动创建dropzones">手动创建dropzones</a>,你可以设置实例的事件监听器,就像这样:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This example uses jQuery so it creates the Dropzone, only when the DOM has</span></span><br><span class="line"><span class="comment">// loaded.</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Disabling autoDiscover, otherwise Dropzone will try to attach twice.</span></span><br><span class="line">Dropzone.autoDiscover = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// or disable for specific dropzone:</span></span><br><span class="line"><span class="comment">// Dropzone.options.myDropzone = false;</span></span><br><span class="line"></span><br><span class="line">$(<span class="function"><span class="keyword">function</span>(<span class="params"></span>) </span>&#123;</span><br><span class="line">  <span class="comment">// Now that the DOM is fully loaded, create the dropzone, and setup the</span></span><br><span class="line">  <span class="comment">// event listeners</span></span><br><span class="line">  <span class="keyword">var</span> myDropzone = <span class="keyword">new</span> Dropzone(<span class="string">"#my-dropzone"</span>);</span><br><span class="line">  myDropzone.on(<span class="string">"addedfile"</span>, <span class="function"><span class="keyword">function</span>(<span class="params">file</span>) </span>&#123;</span><br><span class="line">    <span class="comment">/* Maybe display some more file information on your page */</span></span><br><span class="line">  &#125;);</span><br><span class="line">&#125;)</span><br></pre></td></tr></table></figure></p>
<p>这是更复杂的,没有必要的,除非你有一个很好的理由来管理实例化Dropzones。</p>
<p>Dropzone本身严重依赖事件，视觉上的展示都是通过监听去做的。这些事件监听器设置在每个Dropzone的默认配置,可以覆盖,从而取代默认的行为实现自己的事件回调。</p>
<h4 id="事件列表">事件列表</h4><table><tr><td colspan="2">不覆盖这些配置选项,除非你知道你在做什么。</td></tr><tr><th>事件</th><th>描述</th></tr><tr><td colspan="2">所有这些接收<code>event</code>作为第一个参数</td></tr><tr><td id="event-drop">drop</td><td>用户松放文件到到dropzone</td></tr><tr><td id="event-dragstart">dragstart</td><td>用户开始拖动文件到任何地方</td></tr><tr><td id="event-dragend">dragend</td><td>拖动结束</td></tr><tr><td id="event-dragenter">dragenter</td><td>用户拖拽文件到Dropzone</td></tr><tr><td id="event-dragover">dragover</td><td>用户拖动一个文件经过Dropzone</td></tr><tr><td id="event-dragleave">dragleave</td><td>用户拖动一个文件离开Dropzone</td></tr><tr><td colspan="2">所有这些接收<code>file</code>作为第一个参数</td></tr><tr><td id="event-addedfile">addedfile</td><td>当一个文件被添加到列表中</td></tr><tr><td id="event-removedfile">removedfile</td><td>从列表中删除一个文件。你可以监听该事件然后从您的服务器删除文件</td></tr><tr><td id="event-thumbnail">thumbnail</td><td>生成缩略图。接收<code>dataUrl</code>作为第二个参数</td></tr><tr><td id="event-error">error</td><td>发生一个错误。接收<code>errorMessage</code>作为第二个参数,如果错误是由于XMLHttpRequest <code>xhr</code>对象为第三个参数。</td></tr><tr><td id="event-processing">processing</td><td>当一个文件被处理(因为队列不会立即处理所有文件)。这个事件在<code>processingfile</code>之前被触发。</td></tr><tr><td id="event-uploadprogress">uploadprogress</td><td>每当文件上载过程变化是触发。获得<code>progress</code>作为第二个参数，是一个百分比(0 - 100)和<code>bytesSent</code>作为第三个参数，是已经发送到服务器的字节数量。当上传完成<code>dropzone</code>确保<code>uploadprogress</code>为100%并被调用一次。Warning：这个函数可以调用多次使用相同的<code>progress</code>。</td></tr><tr><td id="event-sending">sending</td><td>在每个文件发送是触发。<code>file</code>为第一个参数，<code>xhr</code>对象和<code>formData</code>对象作为第二个和第三个参数,你可以修改它们(例如添加CSRF令牌)或添加额外的数据。</td></tr><tr><td id="event-success">success</td><td>文件已经成功上传触发。<code>file</code>为第一个参数，获取服务器响应作为第二个参数。(这一事件在<code>finished</code>之前触发。</td></tr><tr><td id="event-complete">complete</td><td>上传成功或错误时。</td></tr><tr><td id="event-canceled">canceled</td><td>当一个文件上传被取消时。</td></tr><tr><td id="event-maxfilesreached">maxfilesreached</td><td>文件数量接受到达maxFiles极限时</td></tr><tr><td id="event-maxfilesexceeded">maxfilesexceeded</td><td>每个文件被拒绝了,因为文件的数量超过了maxFiles极限时触发</td></tr><tr><td></td><td></td></tr><tr><td colspan="2">所有这些收到的<code>files</code>作为第一个参数,并且就当<code>uploadMultiple</code>为<code>true</code>时触发</td></tr><tr><td id="event-processingmultiple">processingmultiple</td><td>见<code>processing</code>的描述。</td></tr><tr><td id="event-sendingmultiple">sendingmultiple</td><td>见<code>sending</code>的描述。</td></tr><tr><td id="event-successmultiple">successmultiple</td><td>见<code>success</code>的描述。</td></tr><tr><td id="event-completemultiple">completemultiple</td><td>见<code>complete</code>的描述。</td></tr><tr><td id="event-canceledmultiple">canceledmultiple</td><td>见<code>canceled</code>的描述。</td></tr><tr><td colspan="2">特殊事件</td></tr><tr><td id="event-totaluploadprogress">totaluploadprogress</td><td>触发时包含参数<code>total uploadProgress(0 - 100)</code>,<code>totalBytes</code>和<code>totalBytesSent</code>。这个事件可以用来显示所有文件的整体上载进度</td></tr><tr><td id="event-reset">reset</td><td>调用时列表中的所有文件被删除,dropzone重置为初始状态。</td></tr><tr><td id="event-queuecomplete">queuecomplete</td><td>当队列中的所有文件上传完成时。</td></tr></table>

<h4 id="主题">主题</h4><p>如果你想对Dropzone的主题完全自定义,在大多数情况下,您可以简单地取代HTML模板预览,调整CSS,也可以创建一些额外的事件监听器。</p>
<p>官方创建了一个例子,配置几行代码，让Dropzone看起来和感觉完全和jQuery文件上传差不多。<a href="http://www.dropzonejs.com/bootstrap.html" target="_blank" rel="external">Check it out!</a>。正如您可以看到的,最大的变化就是previewTemplate。然后添加了一些额外的事件监听器来让它看起来符合自己的要求。</p>
<p>然而,您可以完全从头开始实现您的UI。</p>
<p>覆盖默认的事件监听器,创建您自己的自定义Dropzone,可以这样：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// This is an example of completely disabling Dropzone's default behavior.</span></span><br><span class="line"><span class="comment">// Do *not* use this unless you really know what you are doing.</span></span><br><span class="line">Dropzone.myDropzone.options = &#123;</span><br><span class="line">  previewTemplate: <span class="built_in">document</span>.querySelector(<span class="string">'#template-container'</span>).innerHTML,</span><br><span class="line">  <span class="comment">// Specifing an event as an configuration option overwrites the default</span></span><br><span class="line">  <span class="comment">// `addedfile` event handler.</span></span><br><span class="line">  addedfile: <span class="function"><span class="keyword">function</span>(<span class="params">file</span>) </span>&#123;</span><br><span class="line">    file.previewElement = Dropzone.createElement(<span class="keyword">this</span>.options.previewTemplate);</span><br><span class="line">    <span class="comment">// Now attach this new element some where in your page</span></span><br><span class="line">  &#125;,</span><br><span class="line">  thumbnail: <span class="function"><span class="keyword">function</span>(<span class="params">file, dataUrl</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Display the image in your file.previewElement</span></span><br><span class="line">  &#125;,</span><br><span class="line">  uploadprogress: <span class="function"><span class="keyword">function</span>(<span class="params">file, progress, bytesSent</span>) </span>&#123;</span><br><span class="line">    <span class="comment">// Display the progress</span></span><br><span class="line">  &#125;</span><br><span class="line">  <span class="comment">// etc...</span></span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<p>上面的这些代码显然缺乏实际的实现。看源代码,看看Dropzone内部的实现。</p>
<p>如果你不需要任何默认Dropzone UI，只对Dropzone的事件处理程序、文件上传和拖拽功能感兴趣,那你应该使用以上选项事件处理。</p>
<h2 id="Tips">Tips</h2><p>如果你不想要默认消息提示(拖拽文件上传(或单击)),您可以在你<code>dropzone</code>元素内添加一个元素包含类<code>dz-message</code>，这样<code>dropzone</code>就不会为您创建的消息。</p>
<hr>
<p>Dropzone 或提交你设置的<code>form</code>内的所有隐藏的表单域信息。所以当你是使用<code>form</code>元素的形式的话，这是一个简单的方法来提交额外的数据，至于是<code>get</code>还是<code>post</code>取决于你<code>form</code>的<code>method</code>。当然也可以在js配置中添加其他的参数。</p>
<hr>
<p>当事件绑定完成之后，Dropzone 会添加数据到<code>file</code>对象。如果是<code>image</code>的话，你可以通过<code>file.width</code> 和 <code>file.height</code>访问到图片的宽度和高度。而且<code>file.upload</code>对象会包含如下信息：<code>progress</code> (0-100), <code>total</code> (总字节) and <code>bytesSent</code>（已上传字节）。这样你可以通过这写信息自定义上传进度条等。</p>
<hr>
<p>如果你想给上传的文件添加额外（多个文件时会具体到每个文件）,您可以注册发送事件：<br><figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">myDropzone.on(<span class="string">"sending"</span>, function(<span class="keyword">file</span>, xhr, formData) &#123;</span><br><span class="line">  <span class="comment">// Will send the filesize along with the file as POST data.</span></span><br><span class="line">  formData.<span class="keyword">append</span>(<span class="string">"filesize"</span>, <span class="keyword">file</span>.<span class="keyword">size</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<hr>
<p>文件上传之后，可以通过<code>file.previewElement</code>访问上传后文件的预览html。例如：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">myDropzone.<span class="keyword">on</span>(<span class="string">"addedfile"</span>, <span class="function"><span class="keyword">function</span><span class="params">(file)</span> &#123;</span></span><br><span class="line">  <span class="keyword">file</span>.previewElement.addEventListener(<span class="string">"click"</span>, <span class="function"><span class="keyword">function</span><span class="params">()</span> &#123;</span></span><br><span class="line">    myDropzone.removeFile(<span class="keyword">file</span>);</span><br><span class="line">  &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<hr>
<p>如果你想整个的<code>body</code>都是一个<code>Dropzone</code>实例而且在某个地方显示文件预览，那你可以简单地为<code>body</code>实例化一个Dropzone对象，提示定义<code>previewsContainer</code> 选项。这个<code>previewsContainer</code>可以是<code>dropzone-previews</code>或<code>dropzone</code>类，以便正确显示文件预览：<br><figure class="highlight less"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">new</span> <span class="tag">Dropzone</span>(document.body, &#123;</span><br><span class="line">  <span class="attribute">previewsContainer</span>: <span class="string">".dropzone-previews"</span>,</span><br><span class="line">  <span class="comment">// You probably don't want the whole body</span></span><br><span class="line">  <span class="comment">// to be clickable to select files</span></span><br><span class="line">  <span class="attribute">clickable</span>: false</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<hr>
<p>可以在<a href="https://github.com/enyo/dropzone/wiki" target="_blank" rel="external">github wiki</a>寻找更多的例子。</p>
<h2 id="兼容性">兼容性</h2><p>本节描述Dropzone兼容浏览器和旧版本。</p>
<h4 id="浏览器支持:">浏览器支持:</h4><ul>
<li>Chrome 7+</li>
<li>Firefox 4+</li>
<li>IE 10+</li>
<li>Opera 12+ (MacOS V12版本无法使用，因为它的API有问题)</li>
<li>Safari 6+</li>
</ul>
<p>对于所有其他浏览器,dropzone提供一个版的文件输入回退。<br>在老式浏览器中<code>拖放</code>是没有解决方案，毕竟它不支持嘛~~,其次dropzone的图片预览也是同样的道理。<br>但是，用户使用老式浏览器还是可以上传文件滴，只是看起来和感觉起来都不是很棒。<br>哎,年代已经不属于它们了。</p>
<h4 id="Version_4-0">Version 4.0</h4><p><small><i>这不是一个更新日志。只列出兼容性问题。</i></small></p>
<ul>
<li>改变默认<a href="#config-previewTemplate">previewTemplate</a>。布局做了新调整<a href="#布局">layout sectin</a>.</li>
<li>使用SVG代替PNG spritemap(CSS文件现在唯一需要包括的附加文件)</li>
</ul>
<h4 id="Version_3-0">Version 3.0</h4><p><small><i>这不是一个更新日志。只列出兼容性问题。</i></small></p>
<h4 id="Version_2-0">Version 2.0</h4><p><small><i>这不是一个更新日志。只列出兼容性问题。</i></small></p>
<p>从2.0版本开始,Dropzone不再依赖jQuery,如果使用了jQuery，Dropzone 通过jQuery模块的形式加载自身。<br>这意味着创建Dropzones这样仍能工作：<br><figure class="highlight elixir"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="variable">$(</span><span class="string">"#my-dropzone"</span>).dropzone(&#123; <span class="regexp">/* options */</span> &#125;);</span><br></pre></td></tr></table></figure></p>
<p>如果你通过普通构造函数的形式创建Dropzones,你必须通过原始HTMLElement,或者一个选择器字符串选择相应的元素，这样该版本才能运行：<br><figure class="highlight dart"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// With jQuery</span></span><br><span class="line"><span class="keyword">new</span> Dropzone($(<span class="string">"#my-dropzone"</span>).<span class="literal">get</span>(<span class="number">0</span>));</span><br><span class="line"><span class="comment">// Without jQuery</span></span><br><span class="line"><span class="keyword">new</span> Dropzone(<span class="string">"#my-dropzone"</span>);</span><br><span class="line"><span class="keyword">new</span> Dropzone(<span class="built_in">document</span>.<span class="built_in">querySelector</span>(<span class="string">"#my-dropzone"</span>));</span><br></pre></td></tr></table></figure></p>
<p>另外一个改变就是，Dropzone不再存储实例内部元素的数据属性。为了得到一个dropzone元素这样做：<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// DEPRECATED, do not use:</span></span><br><span class="line">$<span class="params">(<span class="string">"#my-dropzone"</span>)</span>.data<span class="params">(<span class="string">"dropzone"</span>)</span>; <span class="comment">// won't work anymore</span></span><br><span class="line"><span class="comment">// Do this now:</span></span><br><span class="line">Dropzone.forElement<span class="params">(element)</span>; <span class="comment">// Providing a raw HTMLElement</span></span><br><span class="line"><span class="comment">// or</span></span><br><span class="line">Dropzone.forElement<span class="params">(<span class="string">"#my-dropzone"</span>)</span>; <span class="comment">// Providing a selector string.</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="About_me">About me</h2><p>博客: <a href="http://blog.helloarron.com">http://blog.helloarron.com</a><br>Github: <a href="https://github.com/ArronYR" target="_blank" rel="external">https://github.com/ArronYR</a><br>Email: yangyun4814@gmail.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上篇：&lt;a href=&quot;http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/&quot;&gt;DropzoneJS 使用指南&amp;lt;一&amp;gt;&lt;/a&gt;&lt;/p&gt;
&lt;hr&gt;
&lt;h2 id
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/JavaScript/"/>
    
    
      <category term="DropzoneJS" scheme="http://blog.helloarron.com/tags/DropzoneJS/"/>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>DropzoneJS 使用指南&lt;一&gt;</title>
    <link href="http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/"/>
    <id>http://blog.helloarron.com/2015/11/25/javascript/javascript-dropzonejs-guide-1/</id>
    <published>2015-11-25T02:41:13.000Z</published>
    <updated>2015-11-25T12:00:09.000Z</updated>
    
    <content type="html"><![CDATA[<p>官方文档：<a href="http://www.dropzonejs.com/" target="_blank" rel="external">http://www.dropzonejs.com/</a><br>Github: <a href="https://github.com/enyo/dropzone" target="_blank" rel="external">https://github.com/enyo/dropzone</a></p>
<blockquote>
<p>DropzoneJS is an open source library that provides drag’n’drop file uploads with image previews.</p>
<p>It’s lightweight, doesn’t depend on any other library (like jQuery) and is highly customizable.</p>
</blockquote>
<h2 id="安装">安装</h2><p>你可能只需要看看简单的<a href="http://www.dropzonejs.com/examples/simple.html" target="_blank" rel="external">例子</a>( <a href="https://github.com/enyo/dropzone/blob/gh-pages/examples/simple.html" target="_blank" rel="external">源代码</a> )就能开始了。然后继续阅读下面的一步步的指示和不同的安装方法。</p>
<p>下载独立的<a href="https://raw.github.com/enyo/dropzone/master/dist/dropzone.js" target="_blank" rel="external">dropzone.js</a>文件。然后这样引入到html中：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">src</span>=<span class="value">"./path/to/dropzone.js"</span>&gt;</span><span class="undefined"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>Dropzone 现在激活和可用,通过<code>window.Dropzone</code>就可以使用了。</p>
<blockquote>
<p>Dropzone不处理你的文件上传在服务器上。你必须自己实现代码接收和存储文件。有关更多信息,请参见部分<a href="#服务器端实现">服务器端实现</a>。</p>
</blockquote>
<p>完成上面的操作就可以使用 Dropzone ，但是如果你想让它你上传的样式看起来像<a href="http://www.dropzonejs.com/" target="_blank" rel="external">官方</a>页面那样,你需要将下载的dropzones里面的cs发到你的文件夹中并引入。</p>
<h4 id="With_component">With component</h4><p>如果你使用<a href="https://github.com/component/component" target="_blank" rel="external">component</a>,你只需添加dropzone依赖：<br><figure class="highlight 1c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="string">"enyo/dropzone"</span>: <span class="string">"*"</span></span><br></pre></td></tr></table></figure></p>
<p>然后这样引入：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">var</span> Dropzone = <span class="built_in">require</span>(<span class="string">"dropzone"</span>);</span><br></pre></td></tr></table></figure></p>
<p>现在它已激活，并可以在页面中使用。<br>基本的CSS样式也包含在组件中，如果你想让它你上传的样式看起来像<a href="http://www.dropzonejs.com/" target="_blank" rel="external">官方</a>页面那样,你需要将下载的dropzones里面的cs发到你的文件夹中并引入。</p>
<h4 id="With_RequireJS">With RequireJS</h4><p>Dropzone 同样为<a href="http://requirejs.org/" target="_blank" rel="external">RequireJS</a>提供了<a href="https://github.com/amdjs/amdjs-api/wiki/AMD" target="_blank" rel="external">AMD</a>模块。</p>
<p>你可以在下载的文件夹中找到<a href="https://raw.github.com/enyo/dropzone/master/dist/dropzone-amd-module.js" target="_blank" rel="external">dropzone-amd-module</a>。</p>
<h2 id="使用">使用</h2><p>使用 dropzone 的典型的方式是通过创建一个表单包含与<code>class=&quot;dropzone&quot;</code>:<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">form</span> action=<span class="string">"/file-upload"</span> <span class="keyword">class</span>=<span class="string">"dropzone"</span> id=<span class="string">"my-awesome-dropzone"</span>&gt;</span><br><span class="line">    &lt;<span class="keyword">input</span> <span class="keyword">type</span>=<span class="string">"file"</span> name=<span class="string">"file"</span> /&gt;</span><br><span class="line">&lt;/<span class="keyword">form</span>&gt;</span><br></pre></td></tr></table></figure></p>
<p>就像这样。dropzone 会通过<code>class</code>为<code>dropzone</code>找到所有的表单元素，并自动将这些元素初始化，然后点击<code>input</code>选择文件(或拖拽)之后会根据<code>action</code>指定的地址上传文件。(其实就和普通的文件上传没什么区别，只不过多了个拖拽)</p>
<p>如果你想在后端接受文件的时候用其他的<code>name</code>而不是上面指定的<code>file</code>，您可以配置dropzone的<a href="#配置选项">paramName</a>的选项。</p>
<p>如果你是使用<code>component</code>形式，别忘了<code>require(&quot;dropzone&quot;);</code>,否则是不会生效的。</p>
<p>如果是使用form表单，完成上面的设置之后，就已经可以拖拽上传了，所以如果你不想在写一些js去控制上传中的其他东西，比如进度条、预览区域等，可以在form内加一个包含<code>fallback</code>类的标签，dropzone 会自己处理<code>fallback</code>类的标签区域，当然这是需要浏览器支持。如果浏览器不支持，那么那就将其作为普通的文件上传。<br>这通常是这样的：<br><figure class="highlight scala"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">"/file-upload"</span> <span class="class"><span class="keyword">class</span>=</span><span class="string">"dropzone"</span>&gt;</span><br><span class="line">  &lt;div <span class="class"><span class="keyword">class</span>=</span><span class="string">"fallback"</span>&gt;</span><br><span class="line">    &lt;input name=<span class="string">"file"</span> <span class="class"><span class="keyword">type</span>=</span><span class="string">"file"</span> multiple /&gt;</span><br><span class="line">  &lt;/div&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<h4 id="手动创建dropzones">手动创建dropzones</h4><p>除了直接在form表单中添加<code>class</code>为<code>dropzone</code>让其自动创建外，还可以在非表单元素上面通过实例化Dropzone类实现。<br><figure class="highlight axapta"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;<span class="keyword">div</span> id=<span class="string">"myId"</span> style=<span class="string">"width: 800px; height: 300px;"</span>&gt;&lt;/<span class="keyword">div</span>&gt;</span><br><span class="line"><span class="comment">// Dropzone class:</span></span><br><span class="line">var myDropzone = <span class="keyword">new</span> Dropzone(<span class="string">"div#myId"</span>, &#123; url: <span class="string">"/file/post"</span>&#125;);</span><br></pre></td></tr></table></figure></p>
<p>或如果您使用jQuery,您可以使用jQuery插件Dropzone形式：<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// jQuery</span></span><br><span class="line">$<span class="params">(<span class="string">"div#myId"</span>)</span>.dropzone<span class="params">(&#123; url: <span class="string">"/file/post"</span> &#125;)</span>;</span><br></pre></td></tr></table></figure></p>
<p><strong> <span style="color: red">注意：如果你不是使用一个表单元素,别忘了指定一个url选项,因为Dropzone不知道上传到那里。</span> </strong></p>
<h4 id="服务器端实现">服务器端实现</h4><p>Dropzone 不提供的服务器端文件处理的代码,但是文件上传的方式是和简单的表单文件上传是相同的。比如普通的表单上传是这样：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&lt;form action=<span class="string">""</span> <span class="keyword">method</span>=<span class="string">"post"</span> enctype=<span class="string">"multipart/form-data"</span>&gt;</span><br><span class="line">  &lt;input <span class="keyword">type</span>=<span class="string">"file"</span> name=<span class="string">"file"</span> /&gt;</span><br><span class="line">&lt;/form&gt;</span><br></pre></td></tr></table></figure></p>
<p>掌握基本的服务器上的文件上传,请查看各种语言相应的文档。这里有一些基本的实现文件：</p>
<ul>
<li><a href="http://www.cantangosolutions.com/blog/Easy-File-Upload-Using-DropzoneJS-AngularJs-And-Spring" target="_blank" rel="external">AngularJS and Spring</a></li>
<li><a href="http://howtonode.org/really-simple-file-uploads" target="_blank" rel="external">NodeJS with express</a></li>
<li><a href="http://guides.rubyonrails.org/form_helpers.html#uploading-files" target="_blank" rel="external">Ruby on rails</a></li>
<li><a href="http://www.startutorial.com/articles/view/how-to-build-a-file-upload-form-using-dropzonejs-and-php" target="_blank" rel="external">Complete PHP</a> tutorial by startutorial.com</li>
<li><a href="http://www.php.net/manual/en/features.file-upload.post-method.php#example-354" target="_blank" rel="external">Basic PHP file upload</a></li>
<li><a href="http://maxoffsky.com/code-blog/howto-ajax-multiple-file-upload-in-laravel/" target="_blank" rel="external">Tutorial for Dropzone and Lavarel (PHP)</a> written by Maksim Surguy</li>
<li><a href="http://www.jesuisundev.fr/upload-drag-drop-via-dropzonejs-symfony2-on-cloud-amazon-s3/" target="_blank" rel="external">Symfony2 and Amazon S3</a></li>
<li><a href="http://venkatbaggu.com/file-upload-in-asp-net-mvc-using-dropzone-js-and-html5/" target="_blank" rel="external">File upload in ASP.NET MVC using Dropzone JS and HTML5</a></li>
</ul>
<p>付费的文档：</p>
<ul>
<li><a href="http://www.startutorial.com/homes/dropzonejs_php_the_complete_guide?utm_source=dzj&amp;utm_medium=banner&amp;utm_campaign=dropzonejs" target="_blank" rel="external">eBook for Dropzone with PHP</a> by startutorial.com.</li>
</ul>
<p>如果你需要更多的信息,请看看<a href="https://github.com/enyo/dropzone/wiki/FAQ" target="_blank" rel="external">Dropzone FAQ</a>。</p>
<h2 id="配置">配置</h2><p>有两种方式配置 dropzone：</p>
<h6 id="方法一：">方法一：</h6><p>在html元素上添加<code>dropzone</code> 样式类，然后就不需要手动使用js去实例化了，但是你的一些配置<code>Dropzone.options</code>对象去配置：<br><figure class="highlight openscad"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// "myAwesomeDropzone" 是那个 HTML 元素的 ID</span></span><br><span class="line"><span class="comment">// 这里的id不是驼峰格式，是以`-`为分隔，如 id="my-awesome-dropzone"</span></span><br><span class="line">Dropzone.options.myAwesomeDropzone = &#123;</span><br><span class="line">  paramName: <span class="string">"file"</span>, <span class="comment">// The name that will be used to transfer the file</span></span><br><span class="line">  maxFilesize: <span class="number">2</span>, <span class="comment">// MB</span></span><br><span class="line">  accept: <span class="function"><span class="keyword">function</span><span class="params">(file, done)</span> &#123;</span></span><br><span class="line">    <span class="keyword">if</span> <span class="params">(file.name == <span class="string">"justinbieber.jpg"</span>)</span> &#123;</span><br><span class="line">      done<span class="params">(<span class="string">"Naha, you don't."</span>)</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> &#123; done<span class="params">()</span>; &#125;</span><br><span class="line">  &#125;</span><br><span class="line">&#125;;</span><br></pre></td></tr></table></figure></p>
<h6 id="方法二：">方法二：</h6><p>最明显的方式是通过一个选择对象时实例化一个dropzone，以前面<a href="#手动创建dropzones">手动创建dropzones</a>的方式。</p>
<h6 id="常用方法：">常用方法：</h6><p>因为我们需要使用dropzone提供的一些样式，比如预览时图片样式等，这样就算手动创建，但也需要使用到<code>dropzone</code> 样式类，那这样就会导致初始化两次，在控制台就会报错，这时候就需要在手动初始化之前设置如下代码：<br><figure class="highlight protobuf"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// Prevent Dropzone from auto discovering this element:</span></span><br><span class="line"><span class="constant">Dropzone.options.myAwesomeDropzone</span> = <span class="literal">false</span>;</span><br><span class="line"><span class="comment">// This is useful when you want to create the</span></span><br><span class="line"><span class="comment">// Dropzone programmatically later</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// Disable auto discover for all elements:</span></span><br><span class="line"><span class="constant">Dropzone.autoDiscover</span> = <span class="literal">false</span>;</span><br></pre></td></tr></table></figure></p>
<p>例子：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dropzone"</span> <span class="attribute">id</span>=<span class="value">"myDropzone"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"am-text-success dz-message"</span>&gt;</span></span><br><span class="line">        将文件拖拽到此处<span class="tag">&lt;<span class="title">br</span>&gt;</span>或点此打开文件管理器选择文件</span><br><span class="line">    <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"></span><br><span class="line"><span class="tag">&lt;<span class="title">script</span> <span class="attribute">type</span>=<span class="value">"text/javascript"</span>&gt;</span><span class="javascript"></span><br><span class="line">    Dropzone.autoDiscover = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">var</span> myDropzone = <span class="keyword">new</span> Dropzone(<span class="string">"#myDropzone"</span>, &#123;</span><br><span class="line">        url: <span class="string">"/file/upload"</span>,</span><br><span class="line">        addRemoveLinks: <span class="literal">true</span>,</span><br><span class="line">        method: <span class="string">'post'</span>,</span><br><span class="line">        filesizeBase: <span class="number">1024</span>,</span><br><span class="line">        sending: <span class="function"><span class="keyword">function</span>(<span class="params">file, xhr, formData</span>) </span>&#123;</span><br><span class="line">            formData.append(<span class="string">"filesize"</span>, file.size);</span><br><span class="line">        &#125;,</span><br><span class="line">        success: <span class="function"><span class="keyword">function</span> (<span class="params">file, response, e</span>) </span>&#123;</span><br><span class="line">            <span class="keyword">var</span> res = <span class="built_in">JSON</span>.parse(response);</span><br><span class="line">            <span class="keyword">if</span> (res.error) &#123;</span><br><span class="line">                $(file.previewTemplate).children(<span class="string">'.dz-error-mark'</span>).css(<span class="string">'opacity'</span>, <span class="string">'1'</span>)</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line"></span><span class="tag">&lt;/<span class="title">script</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>像上面这样，既能使用 dropzone 的样式，也能自己手动初始化上传。</p>
<h4 id="配置选项">配置选项</h4><table><tr><th>参数</th><th>描述</th></tr><tr><td id="config-url">url</td><td>除了form元素以外的其他元素必须指定该参数(或当form元素没有操作属性)。您还可以提供一个函数,参数为<code>files</code>以及必须返回url(since v3.12.0)</td></tr><tr><td id="config-method">method</td><td>默认为”post”,必要的时候你也可以设置为”put”。 您还可以提供一个函数,参数为<code>files</code>以及必须返回这个method(since v3.12.0)</td></tr><tr><td id="config-parallelUploads">parallelUploads</td><td>同时上传多少个文件。(更多信息参见队列文件上传部分)</td></tr><tr><td id="config-maxFilesize">maxFilesize</td><td>单位 MB</td></tr><tr><td id="config-filesizeBase">filesizeBase</td><td>默认1000。这个定义的基础是否应该使用1000或1024来计算文件大小。1000是有效的,因为1000个字节等于1千字节,1024字节= 1 Kibibyte。你可以改变为1024，如果你不在乎的有效性。</td></tr><tr><td id="config-paramName">paramName</td><td>文件上传后端接收的参数名。默认<code>file</code>。注意:如果你设置uploadMultiple为true,那么Dropzone会将[]附加到这个名字，也就是后端接收的是一个file[]数组。</td></tr><tr><td id="config-uploadMultiple">uploadMultiple</td><td>Dropzone是否在一个请求中发送多个文件。如果它设置为true,然后<code>fallback</code>部分的<code>input</code>元素须有<code>multiple</code>属性。这个选项也会触发其他事件(如<code>processingmultiple</code>)。有关更多信息,请参见事件部分。</td></tr><tr><td id="config-headers">headers</td><td>一个向服务器发送附加头的对象。如:<code>headers: { &quot;My-Awesome-Header&quot;: &quot;header value&quot; }</code></td></tr><tr><td id="config-addRemoveLinks">addRemoveLinks</td><td>这将添加一个链接到每个文件，删除或取消预览文件(如果已经上传)。<code>dictCancelUpload</code>, <code>dictCancelUploadConfirmation</code> and <code>dictRemoveFile</code>三个参数可选。</td></tr><tr><td id="config-previewsContainer">previewsContainer</td><td>定义文件预览显示。如果为<code>null</code>就使用 Dropzone 默认的。可以使用一段普通的html元素或css选择器。被选择的html元素必须包含<code>dropzone-previews</code>样式类确保预览显示正常。</td></tr><tr><td id="config-clickable">clickable</td><td>如果为<code>true</code>,dropzone元素本身将是可点击的,如果<code>false</code>将不可被点击。此外，还可以是一段普通的html或者css选择器，表示点击该元素触发资源管理器。</td></tr><tr><td id="config-createImageThumbnails">createImageThumbnails</td><td></td></tr><tr><td id="config-maxThumbnailFilesize">maxThumbnailFilesize</td><td>单位 MB。文件名超过这个极限时,缩略图将不会生成。</td></tr><tr><td id="config-thumbnailWidth">thumbnailWidth</td><td>如果为<code>null</code>,将使用图像的比例来计算它。</td></tr><tr><td id="config-thumbnailHeight">thumbnailHeight</td><td>与<code>thumbnailWidth</code>一样。如果两者都是null,图像将不会调整。</td></tr><tr><td id="config-maxFiles">maxFiles</td><td>如果不为<code>null</code>,定义多少个文件将被处理。如果超过,事件<code>maxfilesexceeded</code>将被调用。相应地dropzone元素得到了类<code>dz-max—files-reached</code>，因此你可以提供视觉反馈。</td></tr><tr><td id="config-resize">resize</td><td>创建调整信息时被调用的函数。<code>file</code>作为函数第一个参数，同时必须返回一个对象包含<code>srcX</code>, <code>srcY</code>, <code>srcWidth</code> 、<code>srcHeight</code> 和相同的 <code>trg*</code>。这些值将被用于<code>ctx.drawImage()</code>函数。</td></tr><tr><td id="config-init">init</td><td>Dropzone初始化时调用的函数。你能在这个函数中设置事件侦听器。</td></tr><tr><td id="config-acceptedFiles">acceptedFiles</td><td><code>accept</code>函数默认的实现函数，用于检查文件的mime类型或扩展。这是一个逗号分隔的mime类型和文件扩展名的数组。如。<code>image/*,application/pdf,.psd</code>。如果Dropzone是<code>clickable</code>,此选项将被用作<code>accept</code>函数的参数输入。</td></tr><tr><td id="config-accept">accept</td><td>一个接收<code>file</code>和<code>done</code>函数作为参数输入的函数。如果<code>done</code>函数调用无参数,文件会被处理。如果你在<code>done</code>函数中传入了参数(比如错误信息)文件将不会被上传。如果文件太大或不匹配的mime类型这个函数不会调用。</td></tr><tr><td id="config-autoProcessQueue">autoProcessQueue</td><td>当设置为false,你必须自身调用<code>myDropzone.processQueue()</code>上传文件。有关更多信息,请参见下面有关处理队列。</td></tr><tr><td id="config-previewTemplate">previewTemplate</td><td>一个字符串,其中包含模板用于每一个图像。改变它满足你的需求,但确保正确地提供所有元素。你可以在页面中建立这样一个容器:<code>id=&quot;preview-template&quot;</code>(设置style=”display: none;”),然后这样设置：<code>previewTemplate: document.querySelector(&#39;preview-template&#39;).innerHTML</code>。</td></tr><tr><td id="config-forceFallback">forceFallback</td><td>默认值为false。如果为true,<code>fallback</code>将被强行使用。这是非常有用的测试服务器实现首要方式,确保一切如预期所想，并测试你的<code>fallback</code>显示如何。</td></tr><tr><td id="config-fallback">fallback</td><td>当浏览器不支持时调用的函数。默认实现显示了<code>fallback</code>内的<code>input</code>域并添加一个文本。</td></tr><tr><td colspan="2">为自定义的 dropzone,你也可以使用如下这些选项</td></tr><tr><td id="config-dictDefaultMessage">dictDefaultMessage</td><td>任何文件被拖拽进区域之前显示的信息。这通常是被一个图像,但默认为“Drop files here to upload”。</td></tr><tr><td id="config-dictFallbackMessage">dictFallbackMessage</td><td>如果浏览器不支持,默认消息将被替换为这个文本。默认为“Your browser does not support drag’n’drop file uploads.”。</td></tr><tr><td id="config-dictFallbackText">dictFallbackText</td><td>这将被添加在<code>input file</code>之前。如果你提供一个<code>fallback</code>元素,或者该选项为空该选项将被忽略。默认为“Please use the fallback form below to upload your files like in the olden days.”。</td></tr><tr><td id="config-dictInvalidFileType">dictInvalidFileType</td><td>如果文件类型不匹配时显示的错误消息。</td></tr><tr><td id="config-dictFileTooBig">dictFileTooBig</td><td>当文件太大时显示。<code>`` 和</code><code>将被替换。&lt;/td&gt;&lt;/tr&gt;&lt;tr&gt;&lt;td id=&quot;config-dictResponseError&quot;&gt;dictResponseError&lt;/td&gt;&lt;td&gt;如果服务器响应是无效的时显示的错误消息。`</code> 将被替换为服务器端返回的状态码。</td></tr><tr><td id="config-dictCancelUpload">dictCancelUpload</td><td>如果<code>addRemoveLinks</code>为true,文本用于取消上传链接的文字。</td></tr><tr><td id="config-dictCancelUploadConfirmation">dictCancelUploadConfirmation</td><td>如果<code>addRemoveLinks</code>为true,文本用于取消上传的文字。</td></tr><tr><td id="config-dictRemoveFile">dictRemoveFile</td><td>如果<code>addRemoveLinks</code>为true,用于删除一个文件的文本。</td></tr><tr><td id="config-dictMaxFilesExceeded">dictMaxFilesExceeded</td><td>如果设置了<code>maxFiles</code>,这将是超过了设置的时候的错误消息。</td></tr></table>


<p>你也可以覆盖所有违约事件动作选项。如果你提供的<code>drop</code>选项可以覆盖默认的事件处理程序。你应该熟悉代码,因为您可以轻松掌握这样的上传。如果你只是想做额外修改,比如添加一些过滤什么的，可以<a href="#事件">监听事件</a>。</p>
<h4 id="文件上传队列">文件上传队列</h4><p>当一个文件被添加到dropzone,其<code>status</code>被设置到<code>Dropzone.QUEUED</code>(<code>accept</code>函数检查通过后)，这意味着该文件现在在队列中。</p>
<p>如果你可以选择<code>autoProcessQueue</code>设置为<code>true</code>,那么队列是立即处理,文件被删除或一个上传完成后,通过调用<code>.processQueue()</code>,检查有多少文件正在上传,如果它少于<code>option.parallelUploads</code>,<code>.processFile</code>将被调用。</p>
<p>如果你<code>autoProcessQueue</code>设置为<code>false</code>,那么<code>.processQueue()</code>不会被隐式地调用。这意味着当你想上传目前队列中所有文件时你必须自己调用它。</p>
<h4 id="布局">布局</h4><p>为每个文件生成预览HTML，设置dropzone定义的选项<code>previewTemplate</code>,默认为：<br><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-preview dz-file-preview"</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-details"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-filename"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">data-dz-name</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-size"</span> <span class="attribute">data-dz-size</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="title">img</span> <span class="attribute">data-dz-thumbnail</span> /&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-progress"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">class</span>=<span class="value">"dz-upload"</span> <span class="attribute">data-dz-uploadprogress</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-success-mark"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>✔<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-error-mark"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span>&gt;</span>✘<span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="title">div</span> <span class="attribute">class</span>=<span class="value">"dz-error-message"</span>&gt;</span><span class="tag">&lt;<span class="title">span</span> <span class="attribute">data-dz-errormessage</span>&gt;</span><span class="tag">&lt;/<span class="title">span</span>&gt;</span><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="title">div</span>&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>当文件在上传过程中的时候，<code>dz-preview</code>中的<code>dz-processing</code>将被显示；当文件上传之后<code>dz-success</code>将被显示；如果文件上传错误或没网<code>dz-error</code>将被显示，此时<code>data-dz-errormessage</code>的内容将是服务器端返回的信息。</p>
<p>重写默认的模板，就可以使用配置中的<code>previewTemplate</code>选项。</p>
<p>您可以通过<code>file.previewElement</code>访问文件的HTML预览,并且设置任何事件。如：<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">success: <span class="function"><span class="keyword">function</span> (<span class="params">file, response, e</span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> res = <span class="built_in">JSON</span>.parse(response);</span><br><span class="line">    <span class="keyword">if</span> (res.error) &#123;</span><br><span class="line">        $(file.previewTemplate).children(<span class="string">'.dz-error-mark'</span>).css(<span class="string">'opacity'</span>, <span class="string">'1'</span>)</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>如果你想打破常规重写<code>previewElement</code>,可以在你想要的元素上添加<code>data-dz-*</code>属性：</p>
<ul>
<li>data-dz-name</li>
<li>data-dz-size</li>
<li>data-dz-thumbnail (这个必须是 <code>&lt;img /&gt;</code> 元素，然后该元素的 <code>alt</code> 和 <code>src</code> 属性会被 Dropzone 自动改变为相应的值)</li>
<li>data-dz-uploadprogress (当文件处于上传过程中的时候Dropzone 将改变此元素的 <code>style.width</code> 的值，从 0% 到 100%)</li>
<li>data-dz-errormessage<br>Dropzone将寻找这些元素，并改变默认选项和更新它的内容。</li>
</ul>
<p>如果你想要一些特定链接删除一个文件(而不是建于<a href="#config-addRemoveLinks">addRemoveLinks</a>配置),您可以简单地插入元素的模板data-dz-remove属性。<br><figure class="highlight haskell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;img src=<span class="string">"removebutton.png"</span> alt=<span class="string">"Click me to remove the file."</span> <span class="typedef"><span class="keyword">data</span>-dz-remove /&gt;</span></span><br></pre></td></tr></table></figure></p>
<p>你也不用被这些使用惯例所强迫。如果你完全覆盖所有默认事件监听器可以从头开始重建你的布局。</p>
<p>如果你想让你的dropzone看起来像<a href="http://www.dropzonejs.com/" target="_blank" rel="external">官方</a>页面那样，使用安装部分提供的添加样式表和spritemaps即可。</p>
<p>看到<a href="#主题">主题</a>部分,看看如何改变Dropzone 的UI。</p>
<p>官方创建了一个例子,配置几行代码，让Dropzone看起来和感觉完全和jQuery文件上传差不多。<a href="http://www.dropzonejs.com/bootstrap.html" target="_blank" rel="external">Check it out!</a></p>
<h4 id="Dropzone方法">Dropzone方法</h4><p>如果你想删除已添加的文件,你可以调用<code>.removeFile(file)</code>。这种方法也触发<code>removedfile</code>事件。</p>
<p>下面是一个示例,文件上传完成后将自动删除：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">myDropzone.<span class="keyword">on</span>(<span class="string">"complete"</span>, <span class="function"><span class="keyword">function</span><span class="params">(file)</span> &#123;</span></span><br><span class="line">  myDropzone.removeFile(<span class="keyword">file</span>);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>如果你想删除所以的文件，简单地使用<code>.removeAllFiles()</code>。正在上传中的文件不会被删除。如果你想取消正在上传的文件，调用<code>.removeAllFiles(true)</code>将取消上传。</p>
<p>如果你设置了<code>autoProcessQueue</code>为<code>false</code>,你必须调用.processQueue()实现上传。</p>
<p>访问dropzone中的所有文件,使用<code>myDropzone.files</code>。</p>
<ul>
<li>所有可接受的文件：<code>.getAcceptedFiles()</code></li>
<li>所以被拒绝的文件：<code>.getRejectedFiles()</code></li>
<li>队列中的所有文件：<code>.getQueuedFiles()</code></li>
<li>上传中的所有文件：<code>.getUploadingFiles()</code><br>如果不在需要一个dropzone,使用当前示例调用<code>.disable()</code>，这将移除该元素上的事件、文件。重新激活使用<code>.enable()</code>。`</li>
</ul>
<p>如果你不喜欢浏览器默认的<code>confirm</code>,您可以通过覆盖<code>Dropzone.confirm</code>处理它们:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">Dropzone.confirm = function(question, accepted, rejected) &#123;</span><br><span class="line">  // Ask the question, and <span class="operator"><span class="keyword">call</span> accepted() <span class="keyword">or</span> rejected() accordingly.</span><br><span class="line">  // CAREFUL: rejected might <span class="keyword">not</span> be defined. <span class="keyword">Do</span> <span class="keyword">nothing</span> <span class="keyword">in</span> that <span class="keyword">case</span>.</span><br><span class="line">&#125;;</span></span><br></pre></td></tr></table></figure></p>
<hr>
<h2 id="About_me">About me</h2><p>博客: <a href="http://blog.helloarron.com">http://blog.helloarron.com</a><br>Github: <a href="https://github.com/ArronYR" target="_blank" rel="external">https://github.com/ArronYR</a><br>Email: yangyun4814@gmail.com</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;官方文档：&lt;a href=&quot;http://www.dropzonejs.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.dropzonejs.com/&lt;/a&gt;&lt;br&gt;Github: &lt;a href=&quot;https://githu
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/JavaScript/"/>
    
    
      <category term="DropzoneJS" scheme="http://blog.helloarron.com/tags/DropzoneJS/"/>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
  </entry>
  
  <entry>
    <title>jQuery 1.6+ 解决 checkbox 属性判断</title>
    <link href="http://blog.helloarron.com/2015/10/28/javascript/jquery-checkbox-prop/"/>
    <id>http://blog.helloarron.com/2015/10/28/javascript/jquery-checkbox-prop/</id>
    <published>2015-10-28T08:32:13.000Z</published>
    <updated>2016-03-17T03:18:12.000Z</updated>
    
    <content type="html"><![CDATA[<p>在工作中使用 <code>jQuery</code> 操作 <code>checkbox</code>，进行<code>全选</code>、<code>反选</code>操作，在Chrome运行时出现第二次无法勾选问题。<br>给一个按钮绑定了<code>click</code>事件，点一次选中，再点击取消选中，依次类推。代码很简单，但是在Chrome中测试的时候，前两次都没有问题，可以正常显示选中和取消，但当再去选中的时候，复选框的属性<code>checked</code>值变为<code>&quot;checked&quot;</code>，但是复选框却不在显示选中状态，明明属性值改了，但是却不显示勾选，就像没被重新渲染似的。<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> checkbox_flag = <span class="number">0</span>;</span><br><span class="line">    $(<span class="string">'.js_all_checked'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((checkbox_flag++ % <span class="number">2</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">            $(<span class="string">'input:checkbox'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">'input:checkbox'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).attr(<span class="string">'checked'</span>,<span class="literal">false</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
<p>查了很多，终于找到了原因,原来是<code>jQuery</code>版本问题。我使用的<code>jQuery</code>的版本是<code>1.7.2</code>，这就是存在一个兼容性和稳定性问题。<code>jQuery API</code>明确说明，<code>1.6+</code>的<code>jQuery</code>要用<code>prop</code>进行属性判断，尤其是<code>checkBox</code>的<code>checked</code>的属性的判断。<br>在使用是将<code>attr</code>改为<code>prop</code>，问题得解:<br><figure class="highlight javascript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">$(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">    <span class="keyword">var</span> checkbox_flag = <span class="number">0</span>;</span><br><span class="line">    $(<span class="string">'.js_all_checked'</span>).on(<span class="string">'click'</span>, <span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">        <span class="keyword">if</span> ((checkbox_flag++ % <span class="number">2</span>) === <span class="number">0</span>)&#123;</span><br><span class="line">            $(<span class="string">'input:checkbox'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>,<span class="literal">true</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;<span class="keyword">else</span>&#123;</span><br><span class="line">            $(<span class="string">'input:checkbox'</span>).each(<span class="function"><span class="keyword">function</span> (<span class="params"></span>) </span>&#123;</span><br><span class="line">                $(<span class="keyword">this</span>).prop(<span class="string">'checked'</span>,<span class="literal">false</span>);</span><br><span class="line">            &#125;);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;);</span><br><span class="line">&#125;);</span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在工作中使用 &lt;code&gt;jQuery&lt;/code&gt; 操作 &lt;code&gt;checkbox&lt;/code&gt;，进行&lt;code&gt;全选&lt;/code&gt;、&lt;code&gt;反选&lt;/code&gt;操作，在Chrome运行时出现第二次无法勾选问题。&lt;br&gt;给一个按钮绑定了&lt;code&gt;click&lt;/co
    
    </summary>
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/categories/JavaScript/"/>
    
    
      <category term="JavaScript" scheme="http://blog.helloarron.com/tags/JavaScript/"/>
    
      <category term="checkbox" scheme="http://blog.helloarron.com/tags/checkbox/"/>
    
      <category term="jQuery" scheme="http://blog.helloarron.com/tags/jQuery/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu安装php5.5.6编译扩展模块</title>
    <link href="http://blog.helloarron.com/2015/10/12/linux/linux-php-compile-mudoles/"/>
    <id>http://blog.helloarron.com/2015/10/12/linux/linux-php-compile-mudoles/</id>
    <published>2015-10-12T08:07:47.000Z</published>
    <updated>2015-10-13T11:02:43.000Z</updated>
    
    <content type="html"><![CDATA[<p>在<code>Ubuntu</code>服务器上使用源码编译安装<code>php5.5.6</code>之后，运行时发现缺少<code>pdo_mysql</code>扩展。搜索了很多最终尝试着搞定了。</p>
<p>首先下载源码解压，目录如：<code>/var/www/php-5.5.6</code>,安装时执行：<br><figure class="highlight brainfuck"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">#</span> <span class="string">.</span><span class="comment">/configure</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">prefix=/usr/local/php</span><span class="literal">-</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">6</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">apxs2=/usr/bin/apxs2</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">libxml</span><span class="literal">-</span><span class="comment">dir=/usr/include/libxml2</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">config</span><span class="literal">-</span><span class="comment">file</span><span class="literal">-</span><span class="comment">path=/usr/local/php</span><span class="literal">-</span><span class="comment">5</span><span class="string">.</span><span class="comment">5</span><span class="string">.</span><span class="comment">6/etc/</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">gd</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">gd</span><span class="literal">-</span><span class="comment">native</span><span class="literal">-</span><span class="comment">ttf</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">zlib</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mcrypt</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">mysql</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">shmop</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">soap</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">sockets</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">wddx</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">zip</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">xmlrpc</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">fpm</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">mbstring</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">zlib</span><span class="literal">-</span><span class="comment">dir</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">bz2</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">curl</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">exif</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">ftp</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">iconv</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">xml</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">inline</span><span class="literal">-</span><span class="comment">optimization</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">bcmath</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">sysvsem</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">openssl</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">with</span><span class="literal">-</span><span class="comment">gettext</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">pcntl</span> <span class="literal">-</span><span class="literal">-</span><span class="comment">enable</span><span class="literal">-</span><span class="comment">session</span></span><br></pre></td></tr></table></figure></p>
<p>也就是把<code>php</code>安装到了<code>/usr/local/php-5.5.6</code>,配置文件存放在<code>/usr/local/php-5.5.6/etc/</code>。在此之前需要安装<code>Apxs</code>,在<code>Ubuntu</code>中，采用<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># sudo apt-get install apache2</span></span><br></pre></td></tr></table></figure></p>
<p>安装<code>apache</code>服务后，是不会带<code>Apxs</code>，需要安装 <code>apache2-dev</code>。其命令是：<br><figure class="highlight q"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># sudo apt-<span class="built_in">get</span> install apache2-<span class="built_in">dev</span></span><br></pre></td></tr></table></figure></p>
<p>安装完后查看安装的路径: <code>whereis apxs2</code><br>如果在安装<code>Mod_pythond</code>的<code>make</code>过程出现这样到错误：<code>fatal error: Python.h: No such file or directory</code>，可以安装<code>python2.7-dev</code>（装的是<code>V2.7</code>）解决，命令为：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># sudo apt-get install python2<span class="number">.7</span>-dev</span></span><br></pre></td></tr></table></figure></p>
<p><code>Apxs</code>的默认位置：<code>usr/bin/apxs</code>，但在<code>ubuntu</code>版本中已经是<code>usr/bin/apxs2</code>。</p>
<p>其次还需提前安装<code>libxml2</code>:<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># sudo apt-get install libxml2</span></span><br></pre></td></tr></table></figure></p>
<p>执行完之后重启<code>Apache</code>:<br><figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># service apache2 restart</span></span><br></pre></td></tr></table></figure></p>
<p>然后写个<code>phpinfo()</code>查看，会发现没有<code>pdo_mysql</code>，所以需要进入下载的源码目录，编译安装该模块。<br>进入下载的源码目录：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cd /var/www/php-<span class="number">5.5</span><span class="number">.6</span></span></span><br></pre></td></tr></table></figure></p>
<p>然后进入<code>ext</code>目录<code>ls</code>会看到所有的模块。<br>这里我们需要编译<code>pdo</code>、<code>pdo_mysql</code>、<code>mysqli</code>。</p>
<ol>
<li><p>进入<code>ext/pdo</code>,执行<code>phpize</code>[假设<code>PHP</code>的安装时已经将<code>phpize</code>加入了系统环境下。</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># phpize</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>然后配置扩展pdo：</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>php<span class="regexp">/bin/</span>php-config --enable-pdo=shared</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p><code>--with-php-config</code>后面是<code>php</code>的配置文件路径，可以直接执行<code>locate php_config</code>查看。</p>
<ol>
<li>编译安装pdo<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>成功则出现<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installing shared <span class="string">extensions:</span>     <span class="regexp">/usr/</span>local<span class="regexp">/php-5.5.6/</span>lib<span class="regexp">/php/</span>extensions/no-debug-zts-<span class="number">20121212</span></span><br></pre></td></tr></table></figure></p>
<p>说明在<code>/usr/local/php-5.5.6/lib/php/extensions/no-debug-zts-20121212</code>目录下生成了pdo.so文件。</p>
<ol>
<li><p>执行<code>ls</code>命令查看是否已存在：</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ls /usr/local/php-<span class="number">5.5</span><span class="number">.6</span>/lib/php/extensions/no-debug-zts-<span class="number">20121212</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在<code>php.ini</code>配置文件中加上<code>pdo.so</code>:</p>
<figure class="highlight autohotkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"># vi /usr/local/php-<span class="number">5.5</span>.<span class="number">6</span>/etc/php.ini</span><br><span class="line"></span><br><span class="line">// 在<span class="escape">`p</span>hp.ini<span class="escape">`中</span>找到<span class="escape">`;</span>extensions=php_pdo_mysql.dll<span class="escape">`</span><br><span class="line"></span>// 在<span class="escape">`W</span>indows<span class="escape">`中</span>才应该是<span class="escape">`.</span>dll<span class="escape">`,</span>因此即使你去掉了前面的<span class="escape">`;</span><span class="escape">`重</span>启<span class="escape">`A</span>pache<span class="escape">`也</span>是不管用的</span><br><span class="line">// 不用去掉那个<span class="escape">`;</span><span class="escape">`，</span>直接在下面加上即可</span><br><span class="line">extensions=<span class="string">"pdo_mysql.so"</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>在PHP源码包中进入<code>pdo_mysql</code>:</p>
<figure class="highlight vala"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># cd ext/pdo_mysql</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>执行<code>phpize</code></p>
</li>
<li><p>在此之前需要找到<code>mysql</code>的配置文件:</p>
<figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># locate mysql_config   <span class="comment">// 例如/usr/bin/mysql_config</span></span></span><br></pre></td></tr></table></figure>
</li>
<li><p>配置<code>pdo_mysql</code>:</p>
<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>php<span class="regexp">/bin/</span>php-config --with-pdo-mysql=<span class="regexp">/usr/</span>bin<span class="regexp">/mysql_config</span></span><br></pre></td></tr></table></figure>
</li>
<li><p>编译<code>pdo_mysql</code> 安装<code>pdo_mysql</code>:</p>
<figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># <span class="built_in">make</span> &amp;&amp; <span class="built_in">make</span> install</span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>成功则出现<br><figure class="highlight groovy"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Installing shared <span class="string">extensions:</span>     <span class="regexp">/usr/</span>local<span class="regexp">/php-5.5.6/</span>lib<span class="regexp">/php/</span>extensions/no-debug-zts-<span class="number">20121212</span></span><br></pre></td></tr></table></figure></p>
<p>说明的<code>/usr/local/php-5.5.6/lib/php/extensions/no-debug-zts-20121212</code>目录下生成了<code>pdo_mysql.so</code>文件。</p>
<ol>
<li>在<code>php.ini</code>配置文件中加上<code>pdo_mysql.so</code>。</li>
<li>同样的道理编译<code>mysqli</code>,不同的是<code>.configure</code>配置的时候不一样：<figure class="highlight gradle"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"># .<span class="regexp">/configure --with-php-config=/u</span>sr<span class="regexp">/local/</span>php<span class="regexp">/bin/</span>php-config --with-mysqli=<span class="regexp">/usr/</span>bin<span class="regexp">/mysql_config</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<p>最后都是要重启<code>Apache</code>的。</p>
<p>===<br>错误解决：<br><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># make: *** [pdo_mysql.lo] Error <span class="number">1</span></span></span><br></pre></td></tr></table></figure></p>
<p>这是因为这是因为在编译时需要<code>MySQL</code>的头的文件。而它按默认搜索找不到头文件的位置，所以才出现这个问题。通过软连接把<code>MySQL</code>头文件对应到<code>/usr/local/include/</code>下就好<br>比如你的MySQL安装文件位于<code>/usr/local/mysql</code>，那么就执行以下命令：<br><figure class="highlight autoit"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"># ln -s /usr/local/mysql/<span class="keyword">include</span>/* /usr/local/<span class="keyword">include</span>/</span></span><br></pre></td></tr></table></figure></p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在&lt;code&gt;Ubuntu&lt;/code&gt;服务器上使用源码编译安装&lt;code&gt;php5.5.6&lt;/code&gt;之后，运行时发现缺少&lt;code&gt;pdo_mysql&lt;/code&gt;扩展。搜索了很多最终尝试着搞定了。&lt;/p&gt;
&lt;p&gt;首先下载源码解压，目录如：&lt;code&gt;/var/www
    
    </summary>
    
      <category term="Linux" scheme="http://blog.helloarron.com/categories/Linux/"/>
    
    
      <category term="Linux" scheme="http://blog.helloarron.com/tags/Linux/"/>
    
      <category term="PHP" scheme="http://blog.helloarron.com/tags/PHP/"/>
    
  </entry>
  
  <entry>
    <title>iOS 中的一些小集锦</title>
    <link href="http://blog.helloarron.com/2015/10/10/ios/ios-some-tips/"/>
    <id>http://blog.helloarron.com/2015/10/10/ios/ios-some-tips/</id>
    <published>2015-10-10T02:28:29.000Z</published>
    <updated>2017-08-18T07:21:33.000Z</updated>
    
    <content type="html"><![CDATA[<h3 id="提示相关">提示相关</h3><h3 id="普通的Alert">普通的Alert</h3><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// 系统Alert提示</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">alertAction</span><span class="params">(title: String, msg: String)</span></span>&#123;</span><br><span class="line">    <span class="keyword">let</span> alertController = <span class="type">UIAlertController</span>(title: title, message: msg, preferredStyle: <span class="type">UIAlertControllerStyle</span>.<span class="type">Alert</span>)</span><br><span class="line">    <span class="keyword">let</span> okAction = <span class="type">UIAlertAction</span>(title: <span class="string">"确定"</span>, style: <span class="type">UIAlertActionStyle</span>.<span class="type">Default</span>, handler: <span class="literal">nil</span>)</span><br><span class="line">    alertController.addAction(okAction)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">self</span>.presentViewController(alertController, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Use">Use</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.alertAction(<span class="string">"错误提示"</span>, msg: <span class="string">"请输入人名"</span>)</span><br></pre></td></tr></table></figure>
<h4 id="带有回调函数">带有回调函数</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">logoutConfirm</span><span class="params">(title: String, msg: String, okCallback: <span class="params">()</span></span></span>-&gt;<span class="type">Void</span>, cancelCallback: ()-&gt;<span class="type">Void</span>)&#123;</span><br><span class="line">    <span class="keyword">let</span> myAlert = <span class="type">UIAlertController</span>(title: title, message: msg, preferredStyle: <span class="type">UIAlertControllerStyle</span>.<span class="type">Alert</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">let</span> okAction = <span class="type">UIAlertAction</span>(title: <span class="string">"确定"</span>, style: .<span class="type">Default</span>, handler: &#123; (action) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        okCallback()</span><br><span class="line">    &#125;)</span><br><span class="line">    <span class="keyword">let</span> cancelAction = <span class="type">UIAlertAction</span>(title: <span class="string">"取消"</span>, style: .<span class="type">Cancel</span>) &#123; (action) -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        cancelCallback()</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    myAlert.addAction(okAction)</span><br><span class="line">    myAlert.addAction(cancelAction)</span><br><span class="line">    <span class="keyword">self</span>.presentViewController(myAlert, animated: <span class="literal">true</span>, completion: <span class="literal">nil</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="Use-1">Use</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">self</span>.logoutConfirm(<span class="string">"退出"</span>, msg: <span class="string">"退出 MyParse 应用"</span>, okCallback: &#123; () -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">"点击了确定！"</span>)</span><br><span class="line">    &#125;) &#123; () -&gt; <span class="type">Void</span> <span class="keyword">in</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">"点击了取消！"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="键盘相关">键盘相关</h3><h4 id="点击屏幕其他区域隐藏键盘：">点击屏幕其他区域隐藏键盘：</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">override</span> <span class="func"><span class="keyword">func</span> <span class="title">touchesEnded</span><span class="params">(touches: Set&lt;UITouch&gt;, withEvent event: UIEvent?)</span></span> &#123;</span><br><span class="line">    textField.resignFirstResponder()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h4 id="点击键盘的完成或者return按钮隐藏键盘：">点击键盘的<code>完成</code>或者<code>return</code>按钮隐藏键盘：</h4><figure class="highlight swift"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">// UITextFieldDelegate 点击return按钮使得键盘消失</span></span><br><span class="line"><span class="func"><span class="keyword">func</span> <span class="title">textFieldShouldReturn</span><span class="params">(textField: UITextField)</span></span> -&gt; <span class="type">Bool</span> &#123;</span><br><span class="line">    textField.resignFirstResponder()</span><br><span class="line">    <span class="keyword">return</span> <span class="literal">true</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>
<h3 id="StoryBoard">StoryBoard</h3><p>通过<code>storyboard</code>的 运行时属性<code>runtime attribute</code>,可以对<code>Button</code>设置<code>圆角</code>或者<code>边框</code></p>
<ol>
<li>很多人都知道,通常设置一个 <code>Button</code>后者其他的<code>UIView</code>子类的圆角,需要使用如下的语句:<figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="title">span</span> <span class="attribute">style</span>=<span class="value">"font-size:18px;"</span>&gt;</span></span><br><span class="line">    self.button.layer.cornerRadius=10;  //即可</span><br><span class="line"><span class="tag">&lt;/<span class="title">span</span>&gt;</span></span><br></pre></td></tr></table></figure>
</li>
</ol>
<ul>
<li>说明:这会用到<code>layer</code>图层的属性来实现,原因是在一个 <code>UIView</code>子类中</li>
</ul>
<p><code>UIView</code>本身只是用来监听事件,而真正显示内容的是<code>layer</code>图层,这当然也包含动画的实现,比如我们对一个<code>view</code>做动画，实际上也是对<code>layer</code>做的动画。</p>
<ol>
<li>总有一些有好奇心的人想知道如何通过,<code>storyboard/xib</code> 设置 一个<code>button</code>或者<code>UIView</code>的圆角，可以设置<code>storybord</code>无法添加的属性,比如圆角,或者边框，这个方法就是<code>runtime Attribute</code>运行时属性,也就是在 运行时你设置的这个属性才会起作用,这样体现了<code>oc</code>语言的动态特性和运行时<code>(runtime)</code>的强大。</li>
</ol>
<h3 id="Use-2">Use</h3><p>创建一个<code>button</code>然后,设置好约束(以免Button”消失”),如下图,然后选中<code>button</code> 选择右边的<code>inspector</code>:</p>
<p><img src="http://7xrgqs.com1.z0.glb.clouddn.com/xcode-border-raduis.jpeg" alt="enter image description here"></p>
<p>如上图,点击<code>+</code>号即可添加  一个<code>Button</code>相关的属性,这个属性,可以是在<code>storyboard</code>上没有的属性,此方法类似于代码的效果,每一个属性都有与之对应的值(对象),</p>
<p>如数字对应的值类型是  <code>NSNumber</code>,如下图,填入到<code>runtime attrite</code>中的属性名不要写错,否则运行时会崩溃。</p>
<p><img src="http://7xrgqs.com1.z0.glb.clouddn.com/xcode-border-raduis.jpeg" alt="enter image description here"></p>
<p>最终在模拟器上可以看到你想要的圆角啦。类似的你可以添加button的其他属性。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;提示相关&quot;&gt;提示相关&lt;/h3&gt;&lt;h3 id=&quot;普通的Alert&quot;&gt;普通的Alert&lt;/h3&gt;&lt;figure class=&quot;highlight swift&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;
    
    </summary>
    
      <category term="iOS" scheme="http://blog.helloarron.com/categories/iOS/"/>
    
    
      <category term="Swift" scheme="http://blog.helloarron.com/tags/Swift/"/>
    
      <category term="iOS" scheme="http://blog.helloarron.com/tags/iOS/"/>
    
  </entry>
  
  <entry>
    <title>Go抓取网页数据并存入MySQL和返回json数据&lt;四&gt;</title>
    <link href="http://blog.helloarron.com/2015/09/30/go/go_crawldata_mysql_4/"/>
    <id>http://blog.helloarron.com/2015/09/30/go/go_crawldata_mysql_4/</id>
    <published>2015-09-30T03:17:29.000Z</published>
    <updated>2015-09-30T08:03:08.000Z</updated>
    
    <content type="html"><![CDATA[<p>上一节已将将需要的数据从网站<a href="http://www.gratisography.com/" target="_blank" rel="external">http://www.gratisography.com/</a> 抓取并存入数据库【使用<code>crawldata.go</code>中的<code>InsertData(&amp;imageDatas)</code>函数】，现在需要将数据从数据库<code>indiepic</code>的表<code>gratisography</code>中取出并然会<code>json</code>格式的数据。</p>
<p>项目文件夹结构如下：<br><figure class="highlight stylus"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">indiepic</span><br><span class="line">├── README<span class="class">.md</span></span><br><span class="line">├── crawldata</span><br><span class="line">│   ├── crawldata<span class="class">.go</span></span><br><span class="line">│   └── database<span class="class">.go</span></span><br><span class="line">└── indiepic.go</span><br></pre></td></tr></table></figure></p>
<p>现在将获取数据的函数写在<code>database.go</code>中：<br><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line">func GetAllImages() (imageDatas ImageDatas, <span class="keyword">err</span> <span class="keyword">error</span>) &#123;</span><br><span class="line">    <span class="comment">// 连接数据库</span></span><br><span class="line">    <span class="keyword">db</span>, <span class="keyword">err</span> := OpenDatabase()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">        fmt.Printf(s.Join([]string&#123;<span class="string">"连接数据库失败"</span>, <span class="keyword">err</span>.<span class="keyword">Error</span>()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">        <span class="keyword">return</span> nil, <span class="keyword">err</span></span><br><span class="line">    &#125;</span><br><span class="line">    defer <span class="keyword">db</span>.<span class="keyword">Close</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// Prepare statement for inserting data</span></span><br><span class="line">    imgOut, <span class="keyword">err</span> := <span class="keyword">db</span>.<span class="keyword">Query</span>(<span class="string">"SELECT * FROM gratisography"</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">        fmt.Println(s.Join([]string&#123;<span class="string">"获取数据失败"</span>, <span class="keyword">err</span>.<span class="keyword">Error</span>()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">        <span class="keyword">return</span> nil, <span class="keyword">err</span></span><br><span class="line">    &#125;</span><br><span class="line">    defer imgOut.<span class="keyword">Close</span>()</span><br><span class="line"></span><br><span class="line">    <span class="comment">// 定义扫描select到的数据库字段的变量</span></span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        id          int</span><br><span class="line">        img_url     <span class="literal">string</span></span><br><span class="line">        type_name   <span class="literal">string</span></span><br><span class="line">        title       <span class="literal">string</span></span><br><span class="line">        width       int</span><br><span class="line">        height      int</span><br><span class="line">        create_time <span class="literal">string</span></span><br><span class="line">    )</span><br><span class="line">    <span class="keyword">for</span> imgOut.Next() &#123;</span><br><span class="line">        <span class="comment">// db.Query()中select几个字段就需要Scan多少个字段</span></span><br><span class="line">        <span class="keyword">err</span> := imgOut.Scan(&amp;id, &amp;img_url, &amp;type_name, &amp;title, &amp;width, &amp;height, &amp;create_time)</span><br><span class="line">        <span class="keyword">if</span> <span class="keyword">err</span> != nil &#123;</span><br><span class="line">            fmt.Println(s.Join([]string&#123;<span class="string">"查询数据失败"</span>, <span class="keyword">err</span>.<span class="keyword">Error</span>()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">            <span class="keyword">return</span> nil, <span class="keyword">err</span></span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            imageData := ImageData&#123;img_url, type_name, title, width, height&#125;</span><br><span class="line">            imageDatas = <span class="keyword">append</span>(imageDatas, imageData)</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">return</span> imageDatas, nil</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>值得一提的是在<code>SELECT</code>语句中拿到多少个字段就需要在<code>Scan</code>的时候使用变量去获取多少个字段，否测会报错。所以建议不要像上面那样<code>SELECT *</code>，而是指定需要的字段如<code>SELECT id,img_url,title FROM tableName</code>。<br><code>GetAllImages()</code>函数返回两个参数<code>imageDatas ImageDatas</code>、<code>err error</code>。</p>
<p>虽然使用GO自己写一个HTTP请求很简单，但为了更好地处理路由和数据，这里使用一个web框架<a href="https://github.com/go-martini/martini" target="_blank" rel="external">martini</a> Classy web framework for Go。<br>在使用之前需要先获取：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> github.<span class="keyword">com</span>/<span class="keyword">go</span>-martini/martini</span><br></pre></td></tr></table></figure></p>
<p>在<code>indiepic.go</code>中引入<code>martini</code>:<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"><span class="keyword">import</span> (</span></span><br><span class="line">    <span class="string">"github.com/go-martini/martini"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>定义一个结构体<code>Results</code>用于表示输出结果的数据结构：<br><figure class="highlight elm"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="typedef"><span class="keyword">type</span> <span class="type">Results</span> struct <span class="container">&#123;</span><br><span class="line">    <span class="type">Err</span>   <span class="title">int</span>                  // 错误码</span><br><span class="line">    <span class="type">Msg</span>   <span class="title">string</span>               // 错误信息</span><br><span class="line">    <span class="type">Datas</span> <span class="title">crawldata</span>.<span class="type">ImageDatas</span> // 数据，无数据时为<span class="title">nil</span></span><br><span class="line">&#125;</span></span></span><br></pre></td></tr></table></figure></p>
<p>因为需要输出<code>json</code>格式数据，所以需要用<code>martini</code>的<code>encoder</code>中间件资源,使用下面命令获取：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> github.<span class="keyword">com</span>/martini-contrib/encoder</span><br></pre></td></tr></table></figure></p>
<p>然后<code>import</code>:<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"><span class="keyword">import</span> (</span></span><br><span class="line">    <span class="string">"github.com/martini-contrib/encoder"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>因为数据已经抓取完存入数据库了，所以在<code>main</code>函数中，就不在需要调用<code>crawldata.Crawl()</code>了，将其注释掉。然后编写如下代码：<br><figure class="highlight nimrod"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line">func main() &#123;</span><br><span class="line">    // 使用crawldata包里面的<span class="type">Crawl</span>()抓取需要的数据存到数据库</span><br><span class="line">    // crawldata.<span class="type">Crawl</span>()</span><br><span class="line"></span><br><span class="line">    m := martini.<span class="type">New</span>()</span><br><span class="line">    route := martini.<span class="type">NewRouter</span>()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">var</span> (</span><br><span class="line">        results <span class="type">Results</span></span><br><span class="line">        err     error</span><br><span class="line">    )</span><br><span class="line"></span><br><span class="line">    m.<span class="type">Use</span>(func(c martini.<span class="type">Context</span>, w http.<span class="type">ResponseWriter</span>, r *http.<span class="type">Request</span>) &#123;</span><br><span class="line">        // 将encoder.<span class="type">JsonEncoder</span>&#123;&#125;按照encoder.<span class="type">Encoder</span>接口（注意大小写）类型注入到内部</span><br><span class="line">        c.<span class="type">MapTo</span>(encoder.<span class="type">JsonEncoder</span>&#123;&#125;, (*encoder.<span class="type">Encoder</span>)(<span class="keyword">nil</span>))</span><br><span class="line">        w.<span class="type">Header</span>().<span class="type">Set</span>(<span class="string">"Content-Type"</span>, <span class="string">"application/json; charset=utf-8"</span>)</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    route.<span class="type">Get</span>(<span class="string">"/"</span>, func(enc encoder.<span class="type">Encoder</span>) (<span class="type">int</span>, []byte) &#123;</span><br><span class="line">        <span class="literal">result</span> := <span class="type">Results</span>&#123;<span class="number">10001</span>, <span class="string">"Not Found Data"</span>, <span class="keyword">nil</span>&#125;</span><br><span class="line">        <span class="keyword">return</span> http.<span class="type">StatusOK</span>, encoder.<span class="type">Must</span>(enc.<span class="type">Encode</span>(<span class="literal">result</span>))</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    route.<span class="type">Get</span>(<span class="string">"/api"</span>, func(enc encoder.<span class="type">Encoder</span>) (<span class="type">int</span>, []byte) &#123;</span><br><span class="line">        results.<span class="type">Datas</span>, err = crawldata.<span class="type">GetAllImages</span>()</span><br><span class="line">        <span class="keyword">if</span> err != <span class="keyword">nil</span> &#123;</span><br><span class="line">            fmt.<span class="type">Println</span>(s.<span class="type">Join</span>([]<span class="type">string</span>&#123;<span class="string">"获取数据失败"</span>, err.<span class="type">Error</span>()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">            <span class="literal">result</span> := <span class="type">Results</span>&#123;<span class="number">10001</span>, <span class="string">"Data Error"</span>, <span class="keyword">nil</span>&#125;</span><br><span class="line">            <span class="keyword">return</span> http.<span class="type">StatusOK</span>, encoder.<span class="type">Must</span>(enc.<span class="type">Encode</span>(<span class="literal">result</span>))</span><br><span class="line">        &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">            results.<span class="type">Err</span> = <span class="number">10001</span></span><br><span class="line">            results.<span class="type">Msg</span> = <span class="string">"获取数据成功"</span></span><br><span class="line">            <span class="keyword">return</span> http.<span class="type">StatusOK</span>, encoder.<span class="type">Must</span>(enc.<span class="type">Encode</span>(results))</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;)</span><br><span class="line"></span><br><span class="line">    m.<span class="type">Action</span>(route.<span class="type">Handle</span>)</span><br><span class="line">    m.<span class="type">Run</span>()</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p><code>import</code>部分:<br><figure class="highlight monkey"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="preprocessor"><span class="keyword">import</span> (</span></span><br><span class="line">    <span class="string">"fmt"</span></span><br><span class="line">    <span class="string">"github.com/go-martini/martini"</span></span><br><span class="line">    <span class="string">"github.com/martini-contrib/encoder"</span></span><br><span class="line">    <span class="string">"indiepic/crawldata"</span></span><br><span class="line">    <span class="string">"net/http"</span></span><br><span class="line">    s <span class="string">"strings"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>然后运行：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run indiepic.<span class="keyword">go</span></span><br></pre></td></tr></table></figure></p>
<p>在浏览器中访问 <a href="http://127.0.0.1:3000/api" target="_blank" rel="external">http://127.0.0.1:3000/api</a> 即可看到输出的<code>json</code>数据。如果安装了<code>postman</code>可以使用<code>postman</code>访问接口，查看时选择<code>json</code>。</p>
<p>到这里这个例子就结束了。源码见<a href="https://github.com/ArronYR/GO_CrawlData_MySQL" target="_blank" rel="external">GitHub</a>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一节已将将需要的数据从网站&lt;a href=&quot;http://www.gratisography.com/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.gratisography.com/&lt;/a&gt; 抓取并存入数据库【使用&lt;code&gt;c
    
    </summary>
    
      <category term="Go" scheme="http://blog.helloarron.com/categories/Go/"/>
    
    
      <category term="Go" scheme="http://blog.helloarron.com/tags/Go/"/>
    
      <category term="MysQL" scheme="http://blog.helloarron.com/tags/MysQL/"/>
    
  </entry>
  
  <entry>
    <title>Go抓取网页数据并存入MySQL和返回json数据&lt;三&gt;</title>
    <link href="http://blog.helloarron.com/2015/09/25/go/go_crawldata_mysql_3/"/>
    <id>http://blog.helloarron.com/2015/09/25/go/go_crawldata_mysql_3/</id>
    <published>2015-09-25T02:48:29.000Z</published>
    <updated>2015-09-25T03:18:22.000Z</updated>
    
    <content type="html"><![CDATA[<p>上一节主要实现了使用 <a href="https://github.com/PuerkitoBio/goquery" target="_blank" rel="external">goquery</a> 从图片网站 <a href="http://www.gratisography.com/" target="_blank" rel="external">http://www.gratisography.com/</a> 抓取数据。主要抓取图片的<code>data-original</code>、<code>width</code>、<code>height</code>、<code>alt</code>、<code>type</code> 五项数据。因此需要先创建数据库和相应的表，在mac上我使用 <code>Sequel Pro</code> 数据库管理软件，连接之后创建新的数据库<code>indiepic</code>,然后创建表<code>gratisography</code>:<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="operator"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`gratisography`</span> (</span><br><span class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</span><br><span class="line">  <span class="string">`img_url`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`type_name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`title`</span> <span class="built_in">varchar</span>(<span class="number">255</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`width`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`height`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">DEFAULT</span> <span class="literal">NULL</span>,</span><br><span class="line">  <span class="string">`create_time`</span> <span class="keyword">timestamp</span> <span class="literal">NULL</span> <span class="keyword">DEFAULT</span> <span class="keyword">CURRENT_TIMESTAMP</span>,</span><br><span class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</span><br><span class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> AUTO_INCREMENT=<span class="number">388</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</span></span><br></pre></td></tr></table></figure></p>
<p>创建完数据库之后，就开始使用GO来实现连接数据库等操作了。在GO中使用<a href="https://github.com/Go-SQL-Driver/MySQL" target="_blank" rel="external">Go-MySQL-Driver</a> is a lightweight and fast MySQL-Driver for Go’s (golang) database/sql package</p>
<p>文档：<a href="http://godoc.org/github.com/go-sql-driver/mysql" target="_blank" rel="external">http://godoc.org/github.com/go-sql-driver/mysql</a></p>
<p>在使用之前需要先使用以下命令获取该包：<br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> github.<span class="keyword">com</span>/<span class="keyword">go</span>-sql-driver/mysql</span><br></pre></td></tr></table></figure></p>
<p>然后在<code>database.go</code>中引入：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawldata</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"database/sql"</span></span><br><span class="line">	_ <span class="string">"github.com/go-sql-driver/mysql"</span></span><br><span class="line">)</span><br></pre></td></tr></table></figure></p>
<p>然后写一个打开数据库的方法<code>OpenDatabase</code>:<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawldata</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"database/sql"</span></span><br><span class="line">	_ <span class="string">"github.com/go-sql-driver/mysql"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> OpenDatabase() (*sql.DB, error) &#123;</span><br><span class="line">	<span class="comment">// 连接数据库</span></span><br><span class="line">	db, err := sql.Open(<span class="string">"mysql"</span>, <span class="string">"root:mysql@tcp(xxx.xx.xx.xxx:3306)/databaseName?charset=utf8"</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="constant">nil</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> db, <span class="constant">nil</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>上一节已在<code>crawldata.go</code>中写了<code>InsertData(&amp;imageDatas)</code>方法，但是是注释的，先在就需要在该文件中实现该方法。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawldata</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"database/sql"</span></span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	_ <span class="string">"github.com/go-sql-driver/mysql"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">	s <span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> OpenDatabase() (*sql.DB, error) &#123;</span><br><span class="line">	<span class="comment">// 连接数据库</span></span><br><span class="line">	db, err := sql.Open(<span class="string">"mysql"</span>, <span class="string">"root:mysql@tcp(xxx.xx.xx.xxx:3306)/databaseName?charset=utf8"</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">		<span class="keyword">return</span> <span class="constant">nil</span>, err</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span> db, <span class="constant">nil</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*</span><br><span class="line">   该函数将获取的数据存储到数据库</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">func</span> InsertData(datas *ImageDatas) &#123;</span><br><span class="line">	imageDatas := *datas</span><br><span class="line">	<span class="comment">// 连接数据库</span></span><br><span class="line">	db, err := OpenDatabase()</span><br><span class="line">	<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">		fmt.Printf(s.Join([]<span class="typename">string</span>&#123;<span class="string">"连接数据库失败"</span>, err.Error()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">defer</span> db.Close()</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(imageDatas); i++ &#123;</span><br><span class="line">		imageData := imageDatas[i]</span><br><span class="line">		<span class="comment">// Prepare statement for inserting data</span></span><br><span class="line">		imgIns, err := db.Prepare(<span class="string">"INSERT INTO gratisography (img_url, type_name, title, width, height) VALUES( ?, ?, ?, ?, ? )"</span>) <span class="comment">// ? = placeholder</span></span><br><span class="line">		<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">			fmt.Println(s.Join([]<span class="typename">string</span>&#123;<span class="string">"拼装数据格式"</span>, err.Error()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">		&#125;</span><br><span class="line">		<span class="keyword">defer</span> imgIns.Close() <span class="comment">// Close the statement when we leave main()</span></span><br><span class="line"></span><br><span class="line">		img, err := imgIns.Exec(s.Join([]<span class="typename">string</span>&#123;<span class="string">"http://www.gratisography.com"</span>, imageData.Src&#125;, <span class="string">"/"</span>), imageData.Tp, imageData.Title, imageData.Width, imageData.Height)</span><br><span class="line">		<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">			fmt.Println(s.Join([]<span class="typename">string</span>&#123;<span class="string">"插入数据失败"</span>, err.Error()&#125;, <span class="string">"--&gt;"</span>))</span><br><span class="line">		&#125; <span class="keyword">else</span> &#123;</span><br><span class="line">			success, _ := img.LastInsertId()</span><br><span class="line">			<span class="comment">// 数字变成字符串,success是int64型的值，需要转为int，网上说的Itoa64()在strconv包里不存在</span></span><br><span class="line">			insertId := strconv.Itoa(<span class="typename">int</span>(success))</span><br><span class="line">			fmt.Println(s.Join([]<span class="typename">string</span>&#123;<span class="string">"成功插入数据："</span>, insertId&#125;, <span class="string">"\t--&gt;\t"</span>))</span><br><span class="line">		&#125;</span><br><span class="line">	&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>到此已经完成了数据抓取并存入数据库，在命令行中切换到<code>$GOPATH/src/indiepic</code>目录下，然后运行：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> run indiepic.<span class="keyword">go</span></span><br></pre></td></tr></table></figure></p>
<p>随后就可以看到数据被存入数据库了。<br>到这里只实现了数据的获取，但是需要使用GO向外部提供<code>json</code>接口，下一节完成数据的获取和使用web框架返回json数据。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一节主要实现了使用 &lt;a href=&quot;https://github.com/PuerkitoBio/goquery&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;goquery&lt;/a&gt; 从图片网站 &lt;a href=&quot;http://www.gratisog
    
    </summary>
    
      <category term="Go" scheme="http://blog.helloarron.com/categories/Go/"/>
    
    
      <category term="Go" scheme="http://blog.helloarron.com/tags/Go/"/>
    
      <category term="MysQL" scheme="http://blog.helloarron.com/tags/MysQL/"/>
    
  </entry>
  
  <entry>
    <title>Go抓取网页数据并存入MySQL和返回json数据&lt;二&gt;</title>
    <link href="http://blog.helloarron.com/2015/09/24/go/go_crawldata_mysql_2/"/>
    <id>http://blog.helloarron.com/2015/09/24/go/go_crawldata_mysql_2/</id>
    <published>2015-09-24T06:03:29.000Z</published>
    <updated>2015-09-30T07:56:27.000Z</updated>
    
    <content type="html"><![CDATA[<p>上一节已经说明了要做什么，以及整个小程序的目录结构，接下来就开始编码部分。<br>首先在入口文件中引入项目下的包<code>crawldata</code>,然后调用其中抓取数据的函数，暂时取名为<code>Crawl</code>:<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> main</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"indiepic/crawldata"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> main () &#123;</span><br><span class="line">	<span class="comment">// 使用crawldata包里面的Crawl()抓取需要的数据存到数据库</span></span><br><span class="line">	crawldata.Crawl()</span><br><span class="line">	fmt.Println(<span class="string">"主函数"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>然后就是实现包<code>crawldata</code>里面的<code>Crawl</code>函数。将该函数放在<code>crawldata.go</code>文件中：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawldata</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> Crawl() &#123;</span><br><span class="line">	fmt.Println(<span class="string">"包crawldata中的Crawl函数"</span>)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>查看网站 <a href="http://www.gratisography.com/" target="_blank" rel="external">http://www.gratisography.com/</a>，然后审查元素找到某张图片，在图片主要包含了<code>src</code>、<code>data-original</code>、<code>width</code>、<code>height</code>、<code>alt</code>等信息，首先要明确一点的是这个网站使用了图片的<code>lazy</code>加载（在每个<code>li</code>标签上可以看出来），所以真正的图片<code>URL</code>是<code>data-original</code>指定的值而不是<code>src</code>，<code>src</code>值会在图片加载完成之后被赋为<code>data-original</code>的值。另外在网站上有一个分类，所以需存储一下每一张图片的分类，在抓取的时候也是直接通过分类去抓取。<br>因此我们需要定义一个结构体来表示每一条数据包含的数据,以及用于存储全部数据的一个切片，然后在<code>Crawl</code>函数中使用。如下：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">package</span> crawldata</span><br><span class="line"></span><br><span class="line"><span class="keyword">import</span> (</span><br><span class="line">	<span class="string">"fmt"</span></span><br><span class="line">	<span class="string">"github.com/PuerkitoBio/goquery"</span></span><br><span class="line">	<span class="string">"strconv"</span></span><br><span class="line">	s <span class="string">"strings"</span></span><br><span class="line">)</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义一个存储一条数据的结构体</span></span><br><span class="line"><span class="keyword">type</span> ImageData <span class="keyword">struct</span> &#123;</span><br><span class="line">	Src    <span class="typename">string</span></span><br><span class="line">	Tp     <span class="typename">string</span></span><br><span class="line">	Title  <span class="typename">string</span></span><br><span class="line">	Width  <span class="typename">int</span></span><br><span class="line">	Height <span class="typename">int</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 定义切片用于存储抓取的全部数据</span></span><br><span class="line"><span class="keyword">type</span> ImageDatas []ImageData</span><br><span class="line"></span><br><span class="line"><span class="keyword">func</span> Crawl() &#123;</span><br><span class="line">	fmt.Println(<span class="string">"包crawldata中的Crawl函数"</span>)</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 定义一个切片存储所有数据</span></span><br><span class="line">	<span class="keyword">var</span> datas ImageDatas</span><br><span class="line">	<span class="comment">// 抓取数据</span></span><br><span class="line">	imageDatas := CrawlData(&amp;datas)</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>在上面的<code>Crawl</code>函数中又调用了一个<code>CrawlData</code>函数，该函数接受一个用于存储数据的<code>datas</code>变量，并返回抓取后的所有数据。<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/*</span><br><span class="line">   该函数用来抓取数据，并将存储的值返回到主函数</span><br><span class="line">*/</span></span><br><span class="line"><span class="keyword">func</span> CrawlData(datas *ImageDatas) (imageDatas ImageDatas) &#123;</span><br><span class="line">	imageDatas = *datas</span><br><span class="line">	<span class="comment">// 规定抓取时匹配的元素</span></span><br><span class="line">	<span class="keyword">var</span> types = [...]<span class="typename">string</span>&#123;</span><br><span class="line">		<span class="string">"people"</span>,</span><br><span class="line">		<span class="string">"objects"</span>,</span><br><span class="line">		<span class="string">"whimsical"</span>,</span><br><span class="line">		<span class="string">"nature"</span>,</span><br><span class="line">		<span class="string">"urban"</span>,</span><br><span class="line">		<span class="string">"animals"</span>&#125;</span><br><span class="line"></span><br><span class="line">	doc, err := goquery.NewDocument(<span class="string">"http://www.gratisography.com/"</span>)</span><br><span class="line">	<span class="keyword">if</span> err != <span class="constant">nil</span> &#123;</span><br><span class="line">		fmt.Printf(err.Error())</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="keyword">for</span> _, tp := <span class="keyword">range</span> types &#123;</span><br><span class="line">		doc.Find(<span class="string">"#container ul"</span>).Find(s.Join([]<span class="typename">string</span>&#123;<span class="string">"."</span>, tp&#125;, <span class="string">""</span>)).Each(<span class="keyword">func</span>(i <span class="typename">int</span>, s *goquery.Selection) &#123;</span><br><span class="line">			img := s.Find(<span class="string">"img.lazy"</span>)</span><br><span class="line">			src, _ := img.Attr(<span class="string">"data-original"</span>)</span><br><span class="line">			title, _ := img.Attr(<span class="string">"alt"</span>)</span><br><span class="line">			width, _ := img.Attr(<span class="string">"width"</span>)</span><br><span class="line">			height, _ := img.Attr(<span class="string">"height"</span>)</span><br><span class="line"></span><br><span class="line">			<span class="comment">// 将宽度和高度的字符串类型转为数值型</span></span><br><span class="line">			wd, error := strconv.Atoi(width)</span><br><span class="line">			<span class="keyword">if</span> error != <span class="constant">nil</span> &#123;</span><br><span class="line">				fmt.Println(<span class="string">"字符串转换成整数失败"</span>)</span><br><span class="line">			&#125;</span><br><span class="line">			hg, error := strconv.Atoi(height)</span><br><span class="line">			<span class="keyword">if</span> error != <span class="constant">nil</span> &#123;</span><br><span class="line">				fmt.Println(<span class="string">"字符串转换成整数失败"</span>)</span><br><span class="line">			&#125;</span><br><span class="line">			<span class="comment">// fmt.Printf("Review %d: %s - %s - %s - %d - %d\n", i, src, tp, title, wd, hg)</span></span><br><span class="line">			imageData := ImageData&#123;src, tp, title, wd, hg&#125;</span><br><span class="line">			imageDatas = <span class="built_in">append</span>(imageDatas, imageData)</span><br><span class="line">		&#125;)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="keyword">return</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>定义了一个数组<code>types</code>用于存放分类，然后根据分类去获得各分类下的图片。</p>
<p>数据抓取使用 <a href="https://github.com/PuerkitoBio/goquery" target="_blank" rel="external">goquery</a>,在运行之前需要使用如下命令获取<code>goquery</code><br><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">go</span> <span class="built_in">get</span> github.<span class="keyword">com</span>/PuerkitoBio/goquery</span><br></pre></td></tr></table></figure></p>
<p><code>goquery</code>的用法和<code>jQuery</code>很类似，直接通过网页中的一些标签、class、id等获取，更多的使用方法可以查看文档。</p>
<p>这里还使用了<code>strconv</code>中的函数转换类型，使用<code>strings</code>处理字符串。这两个都是GO的内置包，不需要其他运行命令获取。</p>
<p>在<code>Crawl</code>函数中可以使用<code>for</code>输出看获取到的数据，如：<br><figure class="highlight go"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">func</span> Crawl() &#123;</span><br><span class="line">	<span class="comment">// 定义一个切片存储所有数据</span></span><br><span class="line">	<span class="keyword">var</span> datas ImageDatas</span><br><span class="line">	<span class="comment">// 抓取数据</span></span><br><span class="line">	imageDatas := CrawlData(&amp;datas)</span><br><span class="line">	<span class="keyword">for</span> i := <span class="number">0</span>; i &lt; <span class="built_in">len</span>(imageDatas); i++ &#123;</span><br><span class="line">		fmt.Println(imageDatas[i].Src, imageDatas[i].Title, imageDatas[i].Tp, imageDatas[i].Height, imageDatas[i].Width)</span><br><span class="line">	&#125;</span><br><span class="line">	<span class="comment">// 或者</span></span><br><span class="line">	<span class="keyword">for</span> _, imageData := <span class="keyword">range</span> imageDatas &#123;</span><br><span class="line">		fmt.Println(imageData.Src, imageData.Title, imageData.Tp, imageData.Height, imageData.Width)</span><br><span class="line">	&#125;</span><br><span class="line"></span><br><span class="line">	<span class="comment">// 将数据插入数据库</span></span><br><span class="line">	<span class="comment">// InsertData(&amp;imageDatas)</span></span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p>
<p>下一步实现将获取的数据插入数据库的方法<code>InsertData(&amp;imageDatas)</code>。</p>
]]></content>
    
    <summary type="html">
    
      &lt;p&gt;上一节已经说明了要做什么，以及整个小程序的目录结构，接下来就开始编码部分。&lt;br&gt;首先在入口文件中引入项目下的包&lt;code&gt;crawldata&lt;/code&gt;,然后调用其中抓取数据的函数，暂时取名为&lt;code&gt;Crawl&lt;/code&gt;:&lt;br&gt;&lt;figure class=&quot;h
    
    </summary>
    
      <category term="Go" scheme="http://blog.helloarron.com/categories/Go/"/>
    
    
      <category term="Go" scheme="http://blog.helloarron.com/tags/Go/"/>
    
      <category term="MysQL" scheme="http://blog.helloarron.com/tags/MysQL/"/>
    
  </entry>
  
</feed>
